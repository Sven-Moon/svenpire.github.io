{"version":3,"sources":["./src/app/modules/order/state/item-edit/item-edit.reducer.ts","./src/app/modules/order/state/cart/cart.selectors.ts","./src/app/modules/pages/pages.module.ts","./src/app/modules/order/state/current-item/current-item.selectors.ts","./src/app/modules/shared/state/shared.actions.ts","./src/app/mocks/payment.interceptor.ts","./src/app/modules/order/state/order.effects.ts","./src/app/modules/payment/payment-routing.module.ts","./src/app/modules/payment/components/payment/payment.component.ts","./src/app/modules/payment/components/payment/payment.component.html","./src/app/barrels/app-modules.ts","./src/app/modules/order/state/cart/cart.reducer.ts","./src/environments/environment.ts","./src/app/modules/order/state/current-item/current-item.actions.ts","./src/app/stores/index.ts","./src/app/modules/order/state/cart/cart.actions.ts","./src/app/modules/order/components/ssselctor/ssselctor.component.ts","./src/app/modules/order/components/ssselctor/ssselctor.component.html","./src/app/modules/shared/shared.module.ts","./src/app/mocks/staticData.interceptor.ts","./src/app/modules/pages/home/home.component.ts","./src/app/modules/pages/home/home.component.html","./src/app/modules/order/state/order-items/order-items.selectors.ts","./src/app/modules/order/state/order-items/order-items.reducer.ts","./src/app/modules/order/order-routing.module.ts","./src/app/modules/payment/components/pay-tx-result/pay-tx-result.component.ts","./src/app/modules/payment/components/pay-tx-result/pay-tx-result.component.html","./src/app/modules/order/state/current-item/current-item.reducer.ts","./src/app/modules/order/order.component.ts","./src/app/modules/order/order.component.html","./src/app/app/app.component.ts","./src/app/app/app.component.html","./src/app/modules/order/state/cart/cart.effects.ts","./src/app/modules/payment/payment.service.ts","./src/app/stores/actions/order-static-data.actions.ts","./src/app/modules/order/state/order-items/order-items.actions.ts","./src/app/modules/shared/state/shared.reducer.ts","./src/app/modules/shared/header/header.component.ts","./src/app/modules/shared/header/header.component.html","./src/app/app.module.ts","./src/app/modules/payment/state/payment.actions.ts","./src/app/stores/selectors/order-static-data.selectors.ts","./src/app/services/cart.service.ts","./src/app/modules/order/state/item-edit/item-edit.actions.ts","./src/app/modules/order/services/currentItems.service.ts","./src/app/modules/shared/main-panel/main-panel.component.ts","./src/app/modules/shared/main-panel/main-panel.component.html","./src/app/stores/effects/order-static-data.effects.ts","./src/app/modules/order/state/order.actions.ts","./src/app/modules/order/components/order-list/order-list.component.ts","./src/app/modules/order/components/order-list/order-list.component.html","./src/app/modules/order/state/item-edit/item-edit.selectors.ts","./src/app/modules/payment/state/payment.reducer.ts","./src/app/modules/order/components/builder/builder.component.ts","./src/app/modules/order/components/builder/builder.component.html","./src/app/modules/payment/state/payment.selectors.ts","./src/app/modules/order/components/builder-form/builder-form.component.ts","./src/app/modules/order/components/builder-form/builder-form.component.html","./src/app/modules/order/state/order.reducer.ts","./src/app/modules/payment/payment.module.ts","./src/app/barrels/app-mocks.ts","./src/app/stores/reducers/order-static-data.reducer.ts","./src/app/modules/shared/footer/footer.component.ts","./src/app/modules/shared/footer/footer.component.html","./src/app/app/services/OrderStaticData.service.ts","./src/app/modules/payment/state/payment.effects.ts","./src/app/modules/payment/components/pay/pay.component.ts","./src/app/modules/payment/components/pay/pay.component.html","./src/app/app-routing.module.ts","./src/app/modules/order/components/specialty/specialty.component.ts","./src/app/modules/order/components/specialty/specialty.component.html","./src/app/modules/shared/state/shared.selectors.ts","./src/app/modules/order/components/order-form/order-form.component.ts","./src/app/modules/order/components/order-form/order-form.component.html","./src/app/modules/order/order.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AAEO;AAEhD,MAAM,kBAAkB,GAAG,UAAU,CAAC;AAStC,MAAM,YAAY,GAAU;IACjC,yBAAyB,EAAE,EAAE;IAC7B,cAAc,EAAE,EAAE;IAClB,YAAY,EAAE,KAAK;CACpB,CAAC;AAGK,MAAM,OAAO,GAAG,iEAAa,CAClC,YAAY,EAGZ,sDAAE,CAAC,8EAA2C,EAC5C,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,iCACZ,KAAK,KAAE,yBAAyB,EAAE,MAAM,CAAC,yBAAyB,IAAG,CAC7E,EACD,sDAAE,CAAC,2EAAwC,EACzC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,iCACZ,KAAK,KAAE,cAAc,EAAE,MAAM,CAAC,cAAc,IAAG,CACvD;AACD,4BAA4B;AAC5B,sDAAE,CAAC,8EAA2C,EAC5C,CAAC,KAAK,EAAE,EAAE,CAAC,iCACJ,KAAK,KAAE,YAAY,EAAE,IAAI,IAAG,CACpC,EACD,sDAAE,CAAC,+EAA4C,EAC7C,CAAC,KAAK,EAAE,EAAE,CAAC,iCACJ,KAAK,KAAE,YAAY,EAAE,KAAK,IAAG,CACrC;AACD,6CAA6C;AAC7C,sDAAE,CAAC,2EAAwC,EACzC,CAAC,KAAK,EAAE,EAAE,CAAC,iCACJ,KAAK,KAAE,yBAAyB,EAAE,EAAE,IAAG,CAC/C,EACD,sDAAE,CAAC,wEAAqC,EACtC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,iCACZ,KAAK,KAAE,yBAAyB,EAAE,MAAM,CAAC,WAAW,IAAG,CAC/D,EACD,sDAAE,CAAC,2EAAwC,EACzC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,iCACZ,KAAK,KAAE,yBAAyB,EAAE,MAAM,CAAC,WAAW,IAAG,CAC/D,CAEF,CAAC;;;;;;;;;;;;;ACvDF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACwB;AAGb;AACpC;AAChB;AAEpB,MAAM,eAAe,GAAG,yEAAqB,CAClD,4DAAuB,CACxB,CAAC;AAEK,MAAM,aAAa,GAAG,kEAAc,CACzC,eAAe,EACf,CAAC,KAAK,EAAY,EAAE,CAAC,KAAK,CAAC,YAAY,CACxC,CAAC;AAEK,MAAM,mBAAmB,GAAG,kEAAc,CAC/C,0FAAuB,EACvB,aAAa,EACb,CAAC,aAAa,EAAE,GAAG,EAAe,EAAE;IAClC,IAAI,UAAU,GAAgB,EAAE;IAChC,KAAK,IAAI,EAAE,IAAI,GAAG,EAAE;QAAE,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;KAAE;IAC1D,OAAO,UAAU;AACnB,CAAC,CAEF,CAAC;AAEK,MAAM,iCAAiC,GAAG,kEAAc;AAC7D,wFAAwF;AACxF,mBAAmB,EACnB,yGAAoB,EACpB,CAAC,UAAU,EAAE,cAAc,EAAuB,EAAE;IAClD,IAAI,iBAAoC;IACxC,IAAI,mBAAmB,GAAwB,EAAE;IACjD,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;QAC7B,IAAI,CAAC,SAAS,EAAE;YACd,mBAAmB,GAAG,EAAE;SACzB;aAAM;YACL,IAAI,cAAc,GAAmB,EAAE;YACvC,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,CAC3C,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CACnD,UAAU,CAAC,EAAE,KAAK,YAAY,CAC/B,CAAC,CACH;YACD,IAAI,OAAO,GAAG;gBACZ,EAAE,EAAE,EAAE;gBACN,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,IAAI;gBACf,QAAQ,EAAE,CAAC;gBACX,KAAK,EAAE,CAAC;gBACR,QAAQ,EAAE,CAAC;gBACX,mBAAmB,EAAE,IAAI;gBACzB,WAAW,EAAE,EAAE;gBACf,UAAU,EAAE,KAAK;gBACjB,iBAAiB,EAAE,cAAc;aAClC,CAAC;YACF,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,EAAE,SAAS,CAAC;YACzD,mBAAmB,CAAC,IAAI,CAAC,iBAAiB,CAAC;SAC5C;IACH,CAAC,CAAC;IACF,OAAO,mBAAmB;AAC5B,CAAC,CACF;AAEM,MAAM,eAAe,GAAG,kEAAc,CAC3C,0FAAuB,EACvB,aAAa,EACb,CAAC,UAAU,EAAE,OAAO,EAAU,EAAE;IAC9B,IAAI,KAAK,GAAW,CAAC;IACrB,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC,IAAI,2CAAM,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;QAClD,KAAK,GAAG,CAAC;KACV;SAAM;QACL,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CACvB,KAAK,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC,QAAQ,CACrC;KACF;IACD,OAAO,KAAK;AACd,CAAC,CACF,CAAC;;;;;;;;;;;;;AC9EF;AAAA;AAAA;AAAA;AAA+C;;AAUxC,MAAM,WAAW;;sEAAX,WAAW;0FAAX,WAAW;8FAJb;YACP,4DAAY;SACb;mIAEU,WAAW,cAHpB,4DAAY;;;;;;;;;;;;;;;;;;;;;;;;;ACRhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AAEV;AACgF;AAGjC;AAC7B;AAErE,MAAM,sBAAsB,GAAG,yEAAqB,CACzD,2EAAqC,CACtC,CAAC;AAEF,kCAAkC;AAC3B,MAAM,sBAAsB,GAAG,kEAAc,CAClD,sBAAsB,EACtB,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,CAC3B;AAED,wDAAwD;AACxD,4BAA4B;AACrB,MAAM,wBAAwB,GAAG,kEAAc,CACpD,+FAAiB,EACjB,sBAAsB,EACtB,CAAC,WAAwB,EAAE,aAAqB,EAAe,EAAE,CAC/D,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAC7B,SAAS,CAAC,SAAS,KAAK,aAAa,CAAC,CAC3C;AAEM,MAAM,4BAA4B,GAAG,kEAAc,CACxD,kGAAoB,EACpB,sBAAsB,EACtB,CAAC,cAAc,EAAE,KAAK,EAAkB,EAAE;IACxC,IAAI,cAAc,GAAmB,EAAE;IACvC,IAAI,KAAK,CAAC,WAAW,EAAE;QACrB,KAAK,IAAI,YAAY,IAAI,KAAK,CAAC,WAAW,EAAE;YAC1C,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CACnD,UAAU,CAAC,EAAE,KAAK,YAAY,CAAC,CAChC;SACF;KACF;IACD,OAAO,cAAc;AACvB,CAAC,CACF;AAED,8BAA8B;AACvB,MAAM,8BAA8B,GAAG,kEAAc,CAC1D,4BAA4B,EAC5B,CAAC,KAAK,EAAe,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAC/D;AAEM,MAAM,kCAAkC,GAAG,kEAAc,CAC9D,mGAAqB,EACrB,mFAAoB,EACpB,CAAC,KAAK,EAAE,IAAI,EAAU,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,UAAU,CAChD;AAEM,MAAM,sBAAsB,GAAG,kEAAc,CAClD,mGAAqB,EACrB,4BAA4B,EAC5B,CAAC,KAAK,EAAE,kBAAkB,EAAU,EAAE;IACpC,IAAI,UAAU,GAAW,CAAC;IAC1B,kBAAkB,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE;QAC1C,UAAU,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,KAAK;IACjD,CAAC,CAAC;IACF,OAAO,UAAU;AACnB,CAAC,CACF;AAEM,MAAM,yBAAyB,GAAG,kEAAc,CACrD,sBAAsB,EACtB,CAAC,KAAK,EAAU,EAAE,CAAC,KAAK,CAAC,QAAQ,CAClC;AAEM,MAAM,yBAAyB,GAAG,kEAAc,CACrD,sBAAsB,EACtB,yBAAyB,EACzB,CAAC,KAAK,EAAE,QAAQ,EAAU,EAAE,CAAC,KAAK,GAAG,QAAQ,CAC9C;AAGD,yCAAyC;AAClC,MAAM,yBAAyB,GAAG,kEAAc,CACrD,sBAAsB,EACtB,CAAC,KAAK,EAAsB,EAAE;IAC5B,OAAO,CAAC,KAAK,CAAC,mBAAmB;QAC/B,CAAC,CAAC,SAAS;QACX,CAAC,CAAC,KAAK,CAAC,mBAAmB;AAC/B,CAAC,CACF;AAEM,MAAM,uBAAuB,GAAG,kEAAc,CACnD,yBAAyB,EACzB,+FAAiB,EACjB,CAAC,EAAE,EAAE,WAAW,EAAyB,EAAE;IACzC,OAAO,CAAC,WAAW;QACjB,CAAC,CAAC,SAAS;QACX,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,CAAC;AACxD,CAAC,CACF;AAEM,MAAM,4BAA4B,GAAG,kEAAc,CACxD,uBAAuB,EACvB,CAAC,SAAS,EAA2B,EAAE;IACrC,OAAO,CAAC,SAAS;QACf,CAAC,CAAC,SAAS;QACX,CAAC,CAAC,SAAS,CAAC,WAAW;AAC3B,CAAC,CACF;AAEM,MAAM,0BAA0B,GAAG,kEAAc,CACtD,4BAA4B,EAC5B,kGAAoB,EACpB,CAAC,YAAY,EAAE,cAAc,EAA8B,EAAE,CAAC,cAAc,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CACxI;AAEM,MAAM,uBAAuB,GAAG,kEAAc,CACnD,8BAA8B,EAC9B,4BAA4B,EAC5B,CAAC,OAAO,EAAE,SAAS,EAAW,EAAE;IAC9B,mGAAmG;IACnG,IAAI,SAAS,KAAK,SAAS,EAAE;QAAE,OAAO,IAAI;KAAE;IAC5C,+BAA+B;IAC/B,IAAI,OAAO,CAAC,MAAM,IAAI,SAAS,CAAC,MAAM,EAAE;QACtC,OAAO,IAAI,EAAC,gBAAgB;KAC7B;SAAM;QACL,yDAAyD;QACzD,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,CAC7B,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CACjD;KACF;IACD,OAAO,KAAK,EAAC,mBAAmB;AAClC,CAAC,CACF;AAEM,MAAM,mBAAmB,GAAG,kEAAc,CAC/C,uFAAoB,EACpB,sBAAsB,EACtB,sBAAsB,EACtB,CAAC,UAAU,EAAE,KAAK,EAAE,WAAW,EAAU,EAAE;IACzC,6CAA6C;IAC7C,IAAI,WAAW,CAAC,EAAE,EAAE;QAAE,OAAO,WAAW,CAAC,EAAE;KAAE;SAAM;QACjD,IAAI,MAAe;QACnB,IAAI,CAAC,GAAW,CAAC;QACjB,IAAI,EAAU;QACd,GAAG;YACD,MAAM,GAAG,IAAI;YACb,EAAE,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC;YACpB,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAC7B,YAAY,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,CAC/C;YACD,CAAC,EAAE;SACJ,QAAQ,CAAC,MAAM,EAAC;QACjB,OAAO,EAAE;KACV;AACH,CAAC,CACF;AAEM,MAAM,qBAAqB,GAAG,kEAAc,CACjD,uBAAuB,EACvB,uBAAuB,EACvB,sBAAsB,EACtB,sBAAsB,EACtB,CAAC,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,WAAW,EAAU,EAAE;IAClD,8CAA8C;IAC9C,IAAI,WAAW,CAAC,IAAI,EAAE;QAAE,OAAO,WAAW,CAAC,IAAI;KAAE;SAAM;QACrD,yDAAyD;QACzD,IAAI,IAAI,GACN,SAAS;YACP,CAAC,CAAC,QAAQ;gBACR,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,IAAI;gBAC5B,CAAC,CAAC,SAAS,CAAC,IAAI;YAClB,CAAC,CAAC,SAAS,GAAG,KAAK;QACvB,OAAO,IAAI;KACZ;AACH,CAAC,CACF;;;;;;;;;;;;;AChLD;AAAA;AAAA;AAAkD;AAG3C,MAAM,YAAY,GAAG,gEAAY,CACtC,2BAA2B,EAC3B,yDAAK,EAAsB,CAC5B;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0G;AAGpE;AACuC;;;AAItE,MAAM,sBAAsB;IACjC,YAAoB,KAAgB;QAAhB,UAAK,GAAL,KAAK,CAAW;IAAI,CAAC;IAElC,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAEvD,IAAI,GAAG,CAAC,MAAM,KAAK,KAAK,IAAI,GAAG,CAAC,GAAG,IAAI,gCAAgC,EAAE;YACvE,MAAM,MAAM,GAAG,IAAI,CAAC,qBAAqB,EAAE;YAC3C,MAAM,QAAQ,GAAG,IAAI,iEAAY,CAAC;gBAChC,IAAI,EAAE,MAAM;aACb,CAAC;YACF,OAAO,+CAAE,CAAC,QAAQ,CAAC;SACpB;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;IACzB,CAAC;IAGM,qBAAqB;QAC1B,IAAI,UAAU,GAAY,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;QACvE,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE;QAC1C,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACvD,IAAI,aAAa,GAAG,KAAK,GAAG,IAAI;QAChC,IAAI,MAAc;QAClB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,wFAAe,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CACnD,MAAM,GAAG,KAAK,CACf;QAED,OAAO,UAAU;YACf,CAAC,CAAC;gBACA,aAAa,EAAE,aAAa;gBAC5B,MAAM,EAAE,UAAU;gBAClB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,MAAM;aACf;YACD,CAAC,CAAC;gBACA,aAAa,EAAE,aAAa;gBAC5B,MAAM,EAAE,UAAU;gBAClB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,MAAM;aACf;IACL,CAAC;;4FAvCU,sBAAsB;yGAAtB,sBAAsB,WAAtB,sBAAsB,mBADT,MAAM;;;;;;;;;;;;;ACNhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8D;AACF;AAC3B;AAEe;;;AAKzC,MAAM,YAAY;IAiBvB,YAAoB,QAAiB;QAAjB,aAAQ,GAAR,QAAQ,CAAS;QAfrC,gBAAW,GAAG,kEAAY,CAAC,GAAG,EAAE;YAC9B,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAEvB,4DAAM,CAAC,yDAAuB,CAAC,EAC/B,gEAAS,CAAC,GAAG,EAAE;YACb,8FAA8F;YAC9F,0CAAK,CAAC,IAAI,CACR,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,gEAA8B,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EACrD,iEAAU,CAAC,KAAK,CAAC,EAAE,CAAC,+CAAE,CAAC,gEAA8B,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CACtE,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;IAIsC,CAAC;;wEAjB/B,YAAY;+FAAZ,YAAY,WAAZ,YAAY;;;;;;;;;;;;;ACTzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACmB;AACZ;AAC4B;;;AAE1F,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,0EAAY;QACpC,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,sFAAgB,EAAE;YAChD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,sGAAoB,EAAE;YACrD,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE;SACvD;KACF;CACF,CAAC;AAOK,MAAM,oBAAoB;;wFAApB,oBAAoB;mGAApB,oBAAoB;uGAJtB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAGX,oBAAoB,uFAHrB,4DAAY;;;;;;;;;;;;;AClBxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAIkB;AACP;AAEsB;AACvB;;;;;;;;ICyB7D,wEAAkC;IAChC,0EAA4B;IAC1B,0EAAiB;IACf,0EAAoB;IAAA,kEAAO;IAAA,qEAAI;IAAA,iEAAM;IAAA,4DAAK;IAAC,4FAAgC;IAAA,4DAAM;IACnF,4DAAM;IACR,4DAAM;IACN,6EAE+B;IAD/B,yUAAyB;IAEvB,2EACF;IAAA,4DAAS;IACX,qEAAe;;;;IAfnB,0EAAkD;IAChD,0EAA0B;IAGxB,uIAWe;IAIf,6EAAiE;IAAzD,sTAAsB;IAC5B,kEACF;IAAA,4DAAS;IACX,4DAAM;IACR,4DAAM;;;IAnBa,0DAAiB;IAAjB,oFAAiB;;ADlB/B,MAAM,gBAAgB;IAiB3B,YACU,KAAgB,EAChB,EAAe;QADf,UAAK,GAAL,KAAK,CAAW;QAChB,OAAE,GAAF,EAAE,CAAa;QAlBzB,gBAAW,GAAY,KAAK;QAC5B,cAAS,GAAY,KAAK;QAE1B,gBAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC1B,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,MAAM,EAAE,CAAC,EAAE,EAAE;oBACX,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,OAAO,CAAC,WAAW,CAAC;iBAChC,CAAC;YACF,GAAG,EAAE,CAAC,EAAE,EAAE;oBACR,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC;iBAC/B,CAAC;YACF,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACjC,CAAC;IAKE,CAAC;IAEL,QAAQ;QACN,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,iFAAY,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC;QAC1D,CAAC,CAAC;QACF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,gFAAe,CAAC;QAChD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,2EAAkB,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACtD,IAAI,KAAK,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC;aACvD;YACD,IAAI,KAAK,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;aAC3D;YACD,IAAI,KAAK,CAAC,GAAG,EAAE;gBACb,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC;aACrD;YACD,IAAI,KAAK,CAAC,GAAG,EAAE;gBACb,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC;aACrD;QACH,CAAC,CAAC;IACJ,CAAC;IAEM,iBAAiB;QACtB,IAAI,CAAC,SAAS,GAAG,IAAI;QACrB,IAAI,CAAC,WAAW,GAAG,IAAI;IACzB,CAAC;IAEM,aAAa;QAClB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,+EAAgB,EAAE,CAAC;IACzC,CAAC;IAEM,UAAU;QACf,IAAI,CAAC,SAAS,GAAG,KAAK;QACtB,IAAI,CAAC,WAAW,GAAG,KAAK;IAC1B,CAAC;IAEM,MAAM;QACX,4EAA4E;QAC5E,IAAI,MAAc;QAClB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,gFAAe,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CACnD,MAAM,GAAG,KAAK,CACf;QACD,IAAI,MAAM,GAAW;YACnB,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK;YAC7C,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK;YACjD,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK;YAC3C,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK;YAC3C,MAAM,EAAE,MAAM;SACf;QACD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,2EAAY,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,0EAAW,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;IACpD,CAAC;;gFAxEU,gBAAgB;gGAAhB,gBAAgB;QChB7B,yEAA6C;QAC3C,4EAC+B;QAAA,0EAAe;QAAA,4DAAS;QACvD,2EAAmC;QAAA,uDAAiC;;;QAAA,4DAAQ;QAC5E,0EAA6B;QACzB,yEAAiB;QACf,yEAAsB;QACpB,uEAAsF;QACtF,uEAAgG;QAClG,4DAAM;QACN,0EAAsB;QACpB,uEAAsG;QACtG,uEAAwF;QAC1F,4DAAM;QACR,4DAAM;QACV,4DAAO;QACP,8EAEyB;QADzB,yIAAS,YAAQ,IAAC;QAEhB,wDACF;;;QAAA,4DAAS;QACT,iEAAI;QACJ,8EAC8B;QAA9B,yIAAS,uBAAmB,IAAC;QAC3B,oEACF;QAAA,4DAAS;QAKT,+GAuBM;QAER,4DAAM;;QAvDD,sFAAuB;QAGS,0DAAiC;QAAjC,8NAAiC;QAcjD,2DAA+B;QAA/B,4FAA+B;QAEhD,0DACF;QADE,wOACF;QAUiC,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;AC9BlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4D;AACA;AACM;AACH;AAExD,MAAM,UAAU,GAAG;IACxB,uEAAW;IACX,6EAAa;IACb,0EAAY;IACZ,uEAAW;CACZ;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACF;AAEvC,MAAM,cAAc,GAAG,MAAM,CAAC;AAO9B,MAAM,YAAY,GAAU;IACjC,YAAY,EAAE,EAAE;IAChB,KAAK,EAAE,CAAC;CACT,CAAC;AAGK,MAAM,OAAO,GAAG,iEAAa,CAClC,YAAY,EAEZ,sDAAE,CAAC,yDAAuB,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;IAC5C,IAAI,GAAG,GAAG,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;IACnB,uCACK,KAAK,KAAE,YAAY,EAAE,GAAG,IAC5B;AACH,CAAC,CAAC,EACF,sDAAE,CAAC,4DAA0B,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,iCAC7C,KAAK,KACR,YAAY,EAAE,MAAM,CAAC,YAAY,IACjC,CAAC,EACH,sDAAE,CAAC,yDAAuB,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,iCAC1C,KAAK,KAAE,KAAK,EAAE,MAAM,CAAC,KAAK,IAC7B,CAAC,EACH,sDAAE,CAAC,uDAAqB,EACtB,GAAG,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAExB,CAAC;;;;;;;;;;;;;ACpCF;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,UAAU,EAAE,IAAI;CACjB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AChBnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkE;AAM3D,MAAM,YAAY,GAAG,gEAAY,CACtC,4BAA4B,EAC5B,yDAAK,EAAmC,CACzC,CAAC;AAEK,MAAM,iBAAiB,GAAG,gEAAY,CAC3C,0CAA0C,EAC1C,yDAAK,EAAmC,CACzC;AAEM,MAAM,iBAAiB,GAAG,gEAAY,CAC3C,4CAA4C,EAC5C,yDAAK,EAA4B,CAClC;AAEM,MAAM,gBAAgB,GAAG,gEAAY,CAC1C,4CAA4C,CAC7C,CAAC;AAEK,MAAM,iBAAiB,GAAG,gEAAY,CAC3C,uDAAuD,EACvD,yDAAK,EAAgC,CACtC,CAAC;AAEK,MAAM,mBAAmB,GAAG,gEAAY,CAC7C,yCAAyC,EACzC,yDAAK,EAAkB,CACxB;AAEM,MAAM,qBAAqB,GAAG,gEAAY,CAC/C,2CAA2C,EAC3C,yDAAK,EAAoB,CAC1B;AAEM,MAAM,iCAAiC,GAAG,gEAAY,CAC3D,4CAA4C,EAC5C,yDAAK,EAAqB,CAC3B;;;;;;;;;;;;;AC1CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0E;AACR;AACU;AACjB;AAC8B;AACjB;AAEjE,MAAM,eAAe,GAAG,OAAO,CAAC;AAWhC,MAAM,QAAQ,GAA+B;IAClD,CAAC,4FAAuB,CAAC,EAAE,qFAAgB;IAC3C,CAAC,yGAAmC,CAAC,EAAE,4FAAsB;IAC7D,CAAC,kFAAyB,CAAC,EAAE,0EAAiB;IAC9C,CAAC,6FAA6C,CAAC,EAAE,2EAA2B;IAC5E,CAAC,wFAA6B,CAAC,EAAE,8EAAmB;CACrD,CAAC;AAGK,MAAM,YAAY,GACvB,CAAC,wEAAW,CAAC,UAAU;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC;IACT,CAAC,CAAC,EAAE,CAAC;AAEF,SAAS,KAAK,CAAC,OAA2B;IAC/C,OAAO,UAAU,KAAK,EAAE,MAAM;QAC5B,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAE9B,OAAO,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC;IAC/B,CAAC;AACH,CAAC;;;;;;;;;;;;;ACxCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAE3C,MAAM,WAAW,GAAG,gEAAY,CACrC,yBAAyB,EACzB,yDAAK,EAAkB,CACxB,CAAC;AAEK,MAAM,cAAc,GAAG,gEAAY,CACxC,4BAA4B,EAC5B,yDAAK,EAA8B,CACpC,CAAC;AAEK,MAAM,WAAW,GAAG,gEAAY,CACrC,2BAA2B,EAC3B,yDAAK,EAAqB,CAC3B,CAAC;AAEK,MAAM,gBAAgB,GAAG,gEAAY,CAC1C,2BAA2B,EAC3B,yDAAK,EAAiB,CACvB,CAAC;AAEK,MAAM,gBAAgB,GAAG,gEAAY,CAC1C,2BAA2B,EAC3B,yDAAK,EAAkB,CACxB,CAAC;AAEK,MAAM,SAAS,GAAG,gEAAY,CACnC,mBAAmB,CACpB,CAAC;;;;;;;;;;;;;AC1BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+G;AAC3C;;;;AAQ7D,MAAM,kBAAkB;IAE7B,YACU,MAAc,EACd,KAAiB;QADjB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAY;IACvB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,qBAAqB,EAAE;QAC5B,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,iFAAY,CAAC,EAAE,MAAM,EAAE,mBAAmB,EAAE,CAAC,CAAC;QACpE,CAAC,CAAC;IACJ,CAAC;IAED,iBAAiB;IACV,YAAY,CAAC,gBAA2B;QAC7C,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,kHAAY,CAAC,EAAE,gBAAgB,EAAE,CAAC,CAAC;IACzD,CAAC;IAEM,qBAAqB;QAC1B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,sHAAgB,EAAE,CAAC;IACzC,CAAC;;oFArBU,kBAAkB;kGAAlB,kBAAkB;QCZ/B,yEAA6B;QAE3B,yEAAmB;QACjB,yEAAkB;QAChB,oEAA+C;QACjD,4DAAM;QACN,4EAE8B;QAD9B,0IAAS,iBAAa,OAAO,CAAC,IAAC;QAE7B,6EACF;QAAA,4DAAS;QACT,4EAEwB;QADxB,0IAAS,iBAAa,OAAO,CAAC,IAAC;QAE7B,uEACF;QAAA,4DAAS;QACX,4DAAM;QAGN,yEAAsB;QACpB,yEAAkB;QAChB,qEAAkD;QACpD,4DAAM;QACN,6EAE8B;QAD9B,2IAAS,iBAAa,UAAU,CAAC,IAAC;QAEhC,iFACF;QAAA,4DAAS;QACT,6EAEwB;QADxB,2IAAS,iBAAa,UAAU,CAAC,IAAC;QAEhC,2EACF;QAAA,4DAAS;QACX,4DAAM;QAGN,2EAAmB;QACjB,2EAAwB;QACtB,sEAA+C;QACjD,4DAAM;QACN,8EAE0B;QAD1B,2IAAS,iBAAa,MAAM,CAAC,IAAC;QAE5B,oEACF;QAAA,4DAAS;QACT,8EAE0B;QAD1B,2IAAS,iBAAa,SAAS,CAAC,IAAC;QAE/B,uEACF;QAAA,4DAAS;QACT,8EAE0B;QAD1B,2IAAS,iBAAa,OAAO,CAAC,IAAC;QAE7B,qEACF;QAAA,4DAAS;QACX,4DAAM;QAER,4DAAM;;;;;;;;;;;;;;ACxDN;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIL;AAEW;;;AAY9C,MAAM,YAAY;;wEAAZ,YAAY;2FAAZ,YAAY;+FALd;YACP,4DAAY;YACZ,uDAAW,CAAC,UAAU,CAAC,sEAA2B,EAAE,6DAAkB,CAAC;SACxE;mIAEU,YAAY,cAJrB,4DAAY;;;;;;;;;;;;;ACfhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0G;AAGpE;;;AAI/B,MAAM,8BAA8B;IACzC,YAAoB,KAAgB;QAAhB,UAAK,GAAL,KAAK,CAAW;IAAI,CAAC;IAElC,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAEvD,IAAI,GAAG,CAAC,MAAM,KAAK,KAAK,IAAI,GAAG,CAAC,GAAG,IAAI,+CAA+C,EAAE;YACtF,MAAM,UAAU,GAAG,IAAI,CAAC,sBAAsB,EAAE;YAChD,MAAM,QAAQ,GAAG,IAAI,iEAAY,CAAC;gBAChC,IAAI,EAAE,UAAU;aACjB,CAAC;YACF,OAAO,+CAAE,CAAC,QAAQ,CAAC;SACpB;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;IACzB,CAAC;IAGM,sBAAsB;QAC3B,OAAO;YACL,aAAa,EAAE;gBACb;oBACE,IAAI,EAAE,eAAe;oBACrB,MAAM,EAAE,kBAAkB;oBAC1B,aAAa,EAAE,CAAC,KAAK,EAAE,WAAW,EAAE,SAAS,CAAC;oBAC9C,WAAW,EAAE,UAAU;oBACvB,KAAK,EAAE,+CAA+C;oBACtD,aAAa,EAAE,wKAAwK;oBACvL,OAAO,EAAE,IAAI;iBACd;gBACD;oBACE,IAAI,EAAE,iBAAiB;oBACvB,MAAM,EAAE,iBAAiB;oBACzB,aAAa,EAAE;wBACb,QAAQ;wBACR,aAAa;wBACb,WAAW;wBACX,SAAS;wBACT,SAAS;qBACV;oBACD,WAAW,EAAE,UAAU;oBACvB,KAAK,EAAE,iDAAiD;oBACxD,aAAa,EAAE,wKAAwK;oBACvL,OAAO,EAAE,IAAI;iBACd;gBACD;oBACE,IAAI,EAAE,MAAM;oBACZ,MAAM,EAAE,YAAY;oBACpB,aAAa,EAAE;wBACb,KAAK;wBACL,QAAQ;wBACR,cAAc;wBACd,UAAU;wBACV,SAAS;wBACT,WAAW;wBACX,OAAO;qBACR;oBACD,WAAW,EAAE,OAAO;oBACpB,KAAK,EAAE,sCAAsC;oBAC7C,aAAa,EAAE,wKAAwK;oBACvL,OAAO,EAAE,IAAI;iBACd;gBACD;oBACE,IAAI,EAAE,aAAa;oBACnB,MAAM,EAAE,cAAc;oBACtB,aAAa,EAAE;wBACb,aAAa;wBACb,aAAa;wBACb,SAAS;wBACT,aAAa;wBACb,KAAK;qBACN;oBACD,WAAW,EAAE,OAAO;oBACpB,KAAK,EAAE,6CAA6C;oBACpD,aAAa,EAAE,wKAAwK;oBACvL,OAAO,EAAE,IAAI;iBACd;aACF;YACD,aAAa,EAAE;gBACb;oBACE,IAAI,EAAE,KAAK;oBACX,MAAM,EAAE,KAAK;oBACb,OAAO,EAAE,oCAAoC;oBAC7C,WAAW,EAAE,UAAU;oBACvB,MAAM,EAAE,MAAM;iBACf;gBACD;oBACE,IAAI,EAAE,QAAQ;oBACd,MAAM,EAAE,QAAQ;oBAChB,OAAO,EAAE,uCAAuC;oBAChD,WAAW,EAAE,UAAU;oBACvB,MAAM,EAAE,MAAM;iBACf;gBACD;oBACE,IAAI,EAAE,YAAY;oBAClB,MAAM,EAAE,YAAY;oBACpB,OAAO,EAAE,2CAA2C;oBACpD,WAAW,EAAE,UAAU;oBACvB,MAAM,EAAE,MAAM;iBACf;gBACD;oBACE,IAAI,EAAE,aAAa;oBACnB,MAAM,EAAE,aAAa;oBACrB,OAAO,EAAE,4CAA4C;oBACrD,WAAW,EAAE,UAAU;oBACvB,MAAM,EAAE,QAAQ;iBACjB;gBACD;oBACE,IAAI,EAAE,eAAe;oBACrB,MAAM,EAAE,eAAe;oBACvB,OAAO,EAAE,8CAA8C;oBACvD,WAAW,EAAE,UAAU;oBACvB,MAAM,EAAE,QAAQ;iBACjB;gBACD;oBACE,IAAI,EAAE,cAAc;oBACpB,MAAM,EAAE,cAAc;oBACtB,OAAO,EAAE,6CAA6C;oBACtD,WAAW,EAAE,OAAO;oBACpB,MAAM,EAAE,QAAQ;iBACjB;gBACD;oBACE,IAAI,EAAE,SAAS;oBACf,MAAM,EAAE,SAAS;oBACjB,OAAO,EAAE,wCAAwC;oBACjD,WAAW,EAAE,OAAO;oBACpB,MAAM,EAAE,SAAS;iBAClB;gBACD;oBACE,IAAI,EAAE,UAAU;oBAChB,MAAM,EAAE,UAAU;oBAClB,OAAO,EAAE,yCAAyC;oBAClD,WAAW,EAAE,UAAU;oBACvB,MAAM,EAAE,SAAS;iBAClB;gBACD;oBACE,IAAI,EAAE,SAAS;oBACf,MAAM,EAAE,SAAS;oBACjB,OAAO,EAAE,wCAAwC;oBACjD,WAAW,EAAE,UAAU;oBACvB,MAAM,EAAE,SAAS;iBAClB;gBACD;oBACE,IAAI,EAAE,QAAQ;oBACd,MAAM,EAAE,QAAQ;oBAChB,OAAO,EAAE,uCAAuC;oBAChD,WAAW,EAAE,UAAU;oBACvB,MAAM,EAAE,SAAS;iBAClB;gBACD;oBACE,IAAI,EAAE,WAAW;oBACjB,MAAM,EAAE,WAAW;oBACnB,OAAO,EAAE,0CAA0C;oBACnD,WAAW,EAAE,OAAO;oBACpB,MAAM,EAAE,SAAS;iBAClB;gBACD;oBACE,IAAI,EAAE,SAAS;oBACf,MAAM,EAAE,SAAS;oBACjB,OAAO,EAAE,wCAAwC;oBACjD,WAAW,EAAE,UAAU;oBACvB,MAAM,EAAE,QAAQ;iBACjB;gBACD;oBACE,IAAI,EAAE,WAAW;oBACjB,MAAM,EAAE,WAAW;oBACnB,OAAO,EAAE,0CAA0C;oBACnD,WAAW,EAAE,UAAU;oBACvB,MAAM,EAAE,QAAQ;iBACjB;gBACD;oBACE,IAAI,EAAE,aAAa;oBACnB,MAAM,EAAE,aAAa;oBACrB,OAAO,EAAE,4CAA4C;oBACrD,WAAW,EAAE,OAAO;oBACpB,MAAM,EAAE,QAAQ;iBACjB;gBACD;oBACE,IAAI,EAAE,WAAW;oBACjB,MAAM,EAAE,WAAW;oBACnB,OAAO,EAAE,0CAA0C;oBACnD,WAAW,EAAE,UAAU;oBACvB,MAAM,EAAE,OAAO;iBAChB;gBACD;oBACE,IAAI,EAAE,aAAa;oBACnB,MAAM,EAAE,aAAa;oBACrB,OAAO,EAAE,4CAA4C;oBACrD,WAAW,EAAE,UAAU;oBACvB,MAAM,EAAE,OAAO;iBAChB;gBACD;oBACE,IAAI,EAAE,SAAS;oBACf,MAAM,EAAE,SAAS;oBACjB,OAAO,EAAE,wCAAwC;oBACjD,WAAW,EAAE,UAAU;oBACvB,MAAM,EAAE,YAAY;iBACrB;gBACD;oBACE,IAAI,EAAE,MAAM;oBACZ,MAAM,EAAE,MAAM;oBACd,OAAO,EAAE,qCAAqC;oBAC9C,WAAW,EAAE,UAAU;oBACvB,MAAM,EAAE,YAAY;iBACrB;gBACD;oBACE,IAAI,EAAE,OAAO;oBACb,MAAM,EAAE,OAAO;oBACf,OAAO,EAAE,sCAAsC;oBAC/C,WAAW,EAAE,OAAO;oBACpB,MAAM,EAAE,WAAW;iBACpB;gBACD;oBACE,IAAI,EAAE,SAAS;oBACf,MAAM,EAAE,SAAS;oBACjB,OAAO,EAAE,wCAAwC;oBACjD,WAAW,EAAE,OAAO;oBACpB,MAAM,EAAE,YAAY;iBACrB;gBACD;oBACE,IAAI,EAAE,aAAa;oBACnB,MAAM,EAAE,aAAa;oBACrB,OAAO,EAAE,4CAA4C;oBACrD,WAAW,EAAE,OAAO;oBACpB,MAAM,EAAE,YAAY;iBACrB;gBACD;oBACE,IAAI,EAAE,aAAa;oBACnB,MAAM,EAAE,aAAa;oBACrB,OAAO,EAAE,4CAA4C;oBACrD,WAAW,EAAE,OAAO;oBACpB,MAAM,EAAE,WAAW;iBACpB;aACF;YACD,iBAAiB,EAAE;gBACjB,YAAY,EAAE;oBACZ,YAAY,EAAE,UAAU;oBACxB,OAAO,EAAE,MAAM;iBAChB;gBACD,OAAO,EAAE;oBACP,YAAY,EAAE,QAAQ;oBACtB,OAAO,EAAE,MAAM;iBAChB;gBACD,QAAQ,EAAE;oBACR,YAAY,EAAE,UAAU;oBACxB,OAAO,EAAE,MAAM;iBAChB;gBACD,MAAM,EAAE;oBACN,YAAY,EAAE,UAAU;oBACxB,OAAO,EAAE,MAAM;iBAChB;gBACD,SAAS,EAAE;oBACT,YAAY,EAAE,UAAU;oBACxB,OAAO,EAAE,MAAM;iBAChB;gBACD,QAAQ,EAAE;oBACR,YAAY,EAAE,QAAQ;oBACtB,OAAO,EAAE,MAAM;iBAChB;gBACD,WAAW,EAAE;oBACX,YAAY,EAAE,UAAU;oBACxB,OAAO,EAAE,MAAM;iBAChB;gBACD,YAAY,EAAE;oBACZ,YAAY,EAAE,UAAU;oBACxB,OAAO,EAAE,MAAM;iBAChB;aACF;YACD,UAAU,EAAE,EAAE;YACd,QAAQ,EAAE,EAAE;YACZ,OAAO,EAAE,EAAE;SACZ;IAGH,CAAC;;4GAhRU,8BAA8B;iHAA9B,8BAA8B,WAA9B,8BAA8B,mBADjB,MAAM;;;;;;;;;;;;;ACJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiE;;;;AAO1D,MAAM,aAAa;IAExB,YAAoB,KAAgB;QAAhB,UAAK,GAAL,KAAK,CAAW;IAAI,CAAC;IAEzC,QAAQ;QACN,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,iFAAY,CAAC,EAAE,MAAM,EAAE,0BAA0B,EAAE,CAAC,CAAC;QAC3E,CAAC,CAAC;IAEJ,CAAC;;0EATU,aAAa;6FAAb,aAAa;QCT1B,yEAAuB;QACrB,yEAAmC;QACjC,oEAAqE;QACvE,4DAAM;QACN,yEAA4B;QAC1B,4EAAyC;QAAA,+DAAI;QAAA,4DAAS;QACtD,4EACoB;QAAA,sEAAW;QAAA,4DAAS;QACxC,4EAA2C;QAAA,kEAAO;QAAA,4DAAS;QAC3D,6EAA6C;QAAA,iFAAqB;QAAA,4DAAS;QAC7E,4DAAM;QACN,0EAA+B;QAC7B,qEAAmE;QACrE,4DAAM;QACN,2EAAoB;QAClB,2EAAgC;QAC5B,sIACJ;QAAA,4DAAM;QACR,4DAAM;QACN,2EAAsB;QACpB,2EAA8B;QAC5B,sEAAwE;QAC1E,4DAAM;QACN,2EAA4B;QAC1B,2aACF;QAAA,4DAAM;QACR,4DAAM;QACR,4DAAM;;;;;;;;;;;;;;AC3BN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACwB;AAEpC;AAEjD,MAAM,qBAAqB,GAAG,yEAAqB,CACxD,yEAAmC,CACpC,CAAC;AAEK,MAAM,kBAAkB,GAAG,kEAAc,CAC9C,qBAAqB,EACrB,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CACrB;AAEM,MAAM,uBAAuB,GAAG,kEAAc,CACnD,qBAAqB,EACrB,CAAC,KAAK,EAAgC,EAAE,CAAC,KAAK,CAAC,QAAQ,CACxD;AAEM,MAAM,oBAAoB,GAAG,kEAAc,CAChD,uBAAuB,EACvB,CAAC,QAAQ,EAAe,EAAE;IACxB,IAAI,UAAU,GAAgB,EAAE;IAChC,KAAK,IAAI,GAAG,IAAI,QAAQ,EAAE;QACxB,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;KAC/B;IACD,OAAO,UAAU;AACnB,CAAC,CACF;AAEM,MAAM,oBAAoB,GAAG,kEAAc,CAChD,yGAAoB,EACpB,uBAAuB,EACvB,CAAC,cAAc,EAAE,UAAU,EAA+B,EAAE;IAC1D,8DAA8D;IAC9D,IAAI,IAAI,GAAgC,EAAE;IAC1C,uDAAuD;IACvD,6BAA6B;IAC7B,qCAAqC;IACrC,4CAA4C;IAC5C,KAAK,IAAI,MAAM,IAAI,UAAU,EAAE;QAC7B,IAAI,QAAQ,GAAa,EAAE;QAC3B,wCAAwC;QACxC,UAAU,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;YACpD,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAC7C,UAAU,CAAC,EAAE,IAAI,YAAY,CAAC,CAAC,IAAI,CAAC;QACxC,CAAC,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,GAAG,QAAQ;QACvB,6BAA6B;KAC9B;IACD,OAAO,IAAI;AACb,CAAC,CACF;;;;;;;;;;;;;ACpDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACI;AAEW;AAEpD,MAAM,oBAAoB,GAAG,YAAY,CAAC;AAO1C,MAAM,YAAY,GAAU;IACjC,QAAQ,EAAE,EAAE;IACZ,GAAG,EAAE,EAAE;CACR,CAAC;AAGK,MAAM,OAAO,GAAG,iEAAa,CAClC,YAAY,EAEZ,sDAAE,CAAC,mEAAgC,EACjC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CACjB,EACD,sDAAE,CAAC,iEAA8B,EAC/B,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;IAChB,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IAC5B,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC;IAC7B,GAAG,CAAC,IAAI,EAAE;IACV,OAAO;QACL,GAAG;QACH,QAAQ,kCACH,KAAK,CAAC,QAAQ,KACjB,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,SAAS,GACxC;KACF;AACH,CAAC,CACF,EACD,sDAAE,CAAC,oEAAiC,EAClC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,iCACd,KAAK,KACR,GAAG,EAAE,MAAM,CAAC,GAAG,EACf,QAAQ,EAAE,MAAM,CAAC,QAAQ,IACzB,CACH,EACD,sDAAE,CAAC,iEAA8B,EAC/B,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;IAChB,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IAC5B,IAAI,SAAS,GACT,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAChD,SAAS,CAAC,UAAU,GAAG,CAAC,SAAS,CAAC,UAAU;IAE5C,OAAO;QACL,GAAG;QACH,QAAQ,kCACH,KAAK,CAAC,QAAQ,KACjB,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,SAAS,GACvB;KACF;AACH,CAAC,CACF,EACD,sDAAE,CAAC,oEAAiC,EAClC,GAAG,EAAE,CAAC,iCACD,yDAAK,KACR,GAAG,EAAE,EAAE,EACP,QAAQ,EAAE,EAAE,IACZ,CACH,EACD,sDAAE,CAAC,8EAA2C,EAC5C,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;IAChB,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IAC5B,IAAI,SAAS,GACT,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAChD,SAAS,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ;IACpC,SAAS,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,GAAG,SAAS,CAAC,KAAK;IAEtD,OAAO;QACL,GAAG;QACH,QAAQ,kCACH,KAAK,CAAC,QAAQ,KACjB,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,SAAS,GACvB;KACF;AACH,CAAC,CACF,CACF,CAAC;;;;;;;;;;;;;ACpFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACmB;AACQ;AAC/B;AAC6B;AACA;;;AAEhF,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,+DAAc;QACxC,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,4FAAkB,EAAE;YACtD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,4FAAkB,EAAE;YACpD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,sFAAgB,EAAE;YAChD,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,8FAAkB,EAAE;YACrD,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,aAAa,EAAE,SAAS,EAAE,MAAM,EAAE;SAC3D;KACF;CACF,CAAC;AAOK,MAAM,kBAAkB;;oFAAlB,kBAAkB;iGAAlB,kBAAkB;qGAJpB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAGX,kBAAkB,uFAHnB,4DAAY;;;;;;;;;;;;;AClBxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoG;AAEhC;AAEJ;AAE4C;AACrB;AACG;;;;;;ICChF,wEAAiD;IAC/C,yEAAuB;IACrB,yEAAuB;IAAA,uDAAkD;;IAAA,4DAAK;IAC9E,yEAAwB;IAAA,uDAAa;IAAA,4DAAK;IAC1C,yEAAmB;IAAA,4DAAC;IAAA,4DAAK;IACzB,yEAAmB;IAAA,wDAAgC;;IAAA,4DAAK;IAC1D,4DAAK;IACP,qEAAe;;;IALY,0DAAkD;IAAlD,yLAAkD;IACjD,0DAAa;IAAb,6EAAa;IAElB,0DAAgC;IAAhC,0JAAgC;;;;IAjB/D,wEAAqC;IACnC,yEAAoB;IAClB,oEAA6C;IAC/C,4DAAM;IACN,yEAAwB;IACtB,yEAAwB;IACtB,yEAAuB;IAAA,oEAAG;IAAA,mEAAQ;IAAA,4DAAI;IAAA,uDAAwB;IAAA,4DAAM;IACpE,yEAAuB;IAAA,qEAAG;IAAA,2EAAe;IAAA,4DAAI;IAAC,wDAAyB;IAAA,4DAAM;IAC/E,4DAAM;IACN,2EAAkB;IAAC,wDAAiF;;;IAAA,4DAAM;IAC1G,2EAAyB;IACvB,2EAA0B;IACxB,4JAOe;;IACf,sEAAI;IACF,qEAA2B;IAC3B,0EAAkB;IAAA,qEAAG;IAAA,mEAAO;IAAA,4DAAI;IAAA,4DAAK;IACrC,0EAAmB;IAAA,6DAAC;IAAA,4DAAK;IACzB,0EAAmB;IAAA,qEAAG;IAAA,wDAAiC;;IAAA,4DAAI;IAAA,4DAAK;IAClE,4DAAK;IACP,4DAAM;IACR,4DAAM;IACR,4DAAM;IACN,2EAAsB;IAAA,+EAAmB;IAAA,iEAAI;IAC7C,wDAAgC;;IAAA,4DAAM;IACtC,8EAAiD;IAAA,+EAAmB;IAAA,4DAAS;IAC7E,8EAEiB;IADf,2UAAuB;IACR,gEAAI;IAAA,4DAAS;IAChC,qEAAe;;;;IA7B6B,0DAAwB;IAAxB,wFAAwB;IAChB,0DAAyB;IAAzB,mGAAyB;IAEtD,0DAAiF;IAAjF,uRAAiF;IAGjE,0DAAgB;IAAhB,qJAAgB;IAYvB,2DAAiC;IAAjC,2JAAiC;IAM/D,0DAAgC;IAAhC,2KAAgC;;;;IAQlC,wEAAsC;IAClC,yEAAoB;IAClB,qEAAuD;IACzD,4DAAM;IACN,yEAAwB;IACtB,yEAAwB;IACtB,yEAAuB;IACrB,oEAAG;IAAA,mEAAQ;IAAA,4DAAI;IAAA,uDAAwB;IAAA,4DAAM;IAC/C,yEAAuB;IACrB,qEAAG;IAAA,2EAAe;IAAA,4DAAI;IAAC,wDAC3B;IAAA,4DAAM;IACN,4DAAM;IACN,2EAAkB;IAChB,wDACF;;;IAAA,4DAAM;IACR,4DAAM;IACN,2EAA6B;IAAA,+EAAmB;IAAA,4DAAM;IACtD,8EAC0B;IAAA,qEAAS;IAAA,4DAAS;IAC5C,8EAC8B;IAA9B,oVAA6B;IAAC,kEAAM;IAAA,4DAAS;IAC/C,qEAAe;;;IAdQ,0DAAwB;IAAxB,wFAAwB;IAEhB,0DAC3B;IAD2B,mGAC3B;IAGE,0DACF;IADE,sRACF;;;IAtDR,yEAA+D;IAE7D,0IAmCe;IAGf,0IAqBiB;IAGnB,4DAAM;;;IA9DW,0DAAoB;IAApB,uFAAoB;IAsCpB,0DAAqB;IAArB,wFAAqB;;;;IA8BhC,wEAAkC;IAChC,0EAA4B;IAC1B,0EAAiB;IACf,0EAAoB;IAClB,oEAAG;IAAA,kEAAO;IAAA,qEAAI;IAAA,iEAAM;IAAA,4DAAK;IAAC,4FAAgC;IAAA,4DAAI;IAC/D,oEAAG;IAAA,8FAAkC;IAAA,4DAAI;IAC1C,4DAAM;IACR,4DAAM;IACR,4DAAM;IACN,8EAE+B;IAD/B,gVAAyB;IAEvB,4EACF;IAAA,4DAAS;IACX,qEAAe;;;;IAjBnB,0EAAkD;IAChD,0EAA0B;IAExB,yIAce;IAGf,6EAAiE;IAAzD,4TAAsB;IAC5B,uEACF;IAAA,4DAAS;IACX,4DAAM;IACR,4DAAM;;;IArBa,0DAAiB;IAAjB,oFAAiB;;ADhD/B,MAAM,oBAAoB;IAW/B,YACU,KAAgB,EAChB,MAAc;QADd,UAAK,GAAL,KAAK,CAAW;QAChB,WAAM,GAAN,MAAM,CAAQ;QARxB,mBAAc,GAAY,KAAK,CAAC;QAChC,gBAAW,GAAY,KAAK;QAC5B,cAAS,GAAY,KAAK;IAOtB,CAAC;IAEL,QAAQ;QACN,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,cAAc;gBACjB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,iFAAY,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;gBAC3D,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,iFAAY,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;QAC5D,CAAC,CAAC;QAEF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,wEAAe,CAAC;QACpD,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACjC,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,MAAM,IAAI,UAAU;oBAC/C,CAAC,CAAC,IAAI;oBACN,CAAC,CAAC,KAAK;gBACT,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC;aACtD;QACH,CAAC,CAAC;QACF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,iHAAiC,CAAC;IACpE,CAAC;IAEM,iBAAiB;QACtB,IAAI,CAAC,SAAS,GAAG,IAAI;QACrB,IAAI,CAAC,WAAW,GAAG,IAAI;IACzB,CAAC;IAEO,cAAc,CAAC,IAAY;QACjC,IAAI,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC;QAChC,IAAI,SAAS,GAAG,WAAW,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,KAAK;QAElD,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC;IAC5B,CAAC;IAEM,aAAa;QAClB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,+EAAgB,EAAE,CAAC;IACzC,CAAC;IAEM,UAAU;QACf,IAAI,CAAC,SAAS,GAAG,KAAK;QACtB,IAAI,CAAC,WAAW,GAAG,KAAK;IAC1B,CAAC;IAED,MAAM;IACC,WAAW;QAChB,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc;IAC5C,CAAC;IAED,WAAW;QACT,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,+FAAS,EAAE,CAAC;QAChC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,mHAAe,EAAE,CAAC;QACtC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,+EAAgB,EAAE,CAAC;IACzC,CAAC;;wFAjEU,oBAAoB;oGAApB,oBAAoB;QCtBjC,gHAgEM;;QAGJ,gHAwBM;;QA3FoB,iJAAwB;QAmEjB,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;AClElD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AAKa;AAEtD,MAAM,qBAAqB,GAAG,aAAa,CAAC;AAM5C,MAAM,YAAY,GAAU;IACjC,EAAE,EAAE,EAAE;IACN,IAAI,EAAE,EAAE;IACR,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,CAAC;IACX,KAAK,EAAE,CAAC;IACR,QAAQ,EAAE,CAAC;IACX,mBAAmB,EAAE,IAAI;IACzB,WAAW,EAAE,EAAE;IACf,UAAU,EAAE,KAAK;CAClB,CAAC;AAGK,MAAM,OAAO,GAAG,iEAAa,CAClC,YAAY,EAEZ,sDAAE,CAAC,kEAA+B,EAChC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,iCACZ,KAAK,KAAE,SAAS,EAAE,MAAM,CAAC,gBAAgB,IAAG,CACpD,EACD,sDAAE,CAAC,uEAAoC,EACrC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,iCACZ,KAAK,KAAE,mBAAmB,EAAE,MAAM,CAAC,mBAAmB,IAC5D,CACF,EACD,sDAAE,CAAC,uEAAoC,EACrC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,iCACZ,KAAK,KAAE,WAAW,EAAE,MAAM,CAAC,WAAW,IAAG,CACjD,EACD,sDAAE,CAAC,uEAAoC,EACrC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,iCAEZ,KAAK,KACR,EAAE,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EACvB,IAAI,EAAE,MAAM,CAAC,SAAS,CAAC,IAAI,EAC3B,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,SAAS,EACrC,QAAQ,EAAE,MAAM,CAAC,SAAS,CAAC,QAAQ,EACnC,KAAK,EAAE,MAAM,CAAC,SAAS,CAAC,KAAK,EAC7B,QAAQ,EAAE,MAAM,CAAC,SAAS,CAAC,QAAQ,EACnC,mBAAmB,EAAE,IAAI,EACzB,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,WAAW,EACzC,UAAU,EAAE,KAAK,IACjB,CACL,EACD,sDAAE,CAAC,sEAAmC,EACpC,GAAG,EAAE,CAAC,mBACC,YAAY,EAAG,CACvB,EACD,sDAAE,CAAC,yEAAsC,EACvC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,iCACd,KAAK,KACR,EAAE,EAAE,MAAM,CAAC,EAAE,IACb,CACH,EACD,sDAAE,CAAC,2EAAwC,EACzC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,iCACd,KAAK,KACR,IAAI,EAAE,MAAM,CAAC,IAAI,IACjB,CACH,EACD,sDAAE,CAAC,uFAAoD,EACrD,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,iCACd,KAAK,KACR,KAAK,EAAE,MAAM,CAAC,KAAK,EACnB,QAAQ,EAAE,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,IACvC,CACH,CAEF,CAAC;;;;;;;;;;;;;AChFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuF;;;;AAQhF,MAAM,cAAc;IAEzB,YACS,KAA6B;QAA7B,UAAK,GAAL,KAAK,CAAwB;IAClC,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,4GAAmB,EAAE,CAAC;IAC5C,CAAC;;4EARU,cAAc;8FAAd,cAAc;QCV3B,2EAA+B;;;;;;;;;;;;;;;;;;;;;;ACOxB,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,YAAY,CAAC;KACtB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,2EAAwC;QACxC,4EAAiC;;;;;;;;;;;;;;;;;;;;ACS1B,MAAM,WAAW;IAEtB,oCAAoC;IACpC,+BAA+B;IAE/B,qCAAqC;IACrC,sBAAsB;IACtB,uGAAuG;IACvG,oBAAoB;IACpB,+DAA+D;IAC/D,4EAA4E;IAC5E,QAAQ;IACR,OAAO;IACP,MAAM;IAIN,YAAoB,QAAiB;QAAjB,aAAQ,GAAR,QAAQ,CAAS;IAAI,CAAC;;sEAjB/B,WAAW;8FAAX,WAAW,WAAX,WAAW;;;;;;;;;;;;;;;;;;;ACDjB,MAAM,cAAc;IACzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QACpC,YAAO,GAAG,yBAAyB;IADK,CAAC;IAKlC,eAAe,CAAC,IAAI;QACzB,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,SAAS;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,GAAG,CAAC;IACvC,CAAC;;4EATU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAHb,MAAM;;;;;;;;;;;;;ACNpB;AAAA;AAAA;AAAA;AAAA;AAAkD;AAG3C,MAAM,mBAAmB,GAAG,gEAAY,CAC7C,wCAAwC,CACzC,CAAC;AAEK,MAAM,0BAA0B,GAAG,gEAAY,CACpD,gDAAgD,EAChD,yDAAK,EAA6B,CACnC,CAAC;AAEK,MAAM,0BAA0B,GAAG,gEAAY,CACpD,gDAAgD,EAChD,yDAAK,EAAkB,CACxB,CAAC;;;;;;;;;;;;;ACfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAG3C,MAAM,cAAc,GAAG,gEAAY,CACxC,8BAA8B,CAC/B,CAAC;AAEK,MAAM,YAAY,GAAG,gEAAY,CACtC,4BAA4B,EAC5B,yDAAK,EAA4B,CAClC,CAAC;AAEK,MAAM,eAAe,GAAG,gEAAY,CACzC,+BAA+B,EAC/B,yDAAK,EAAgD,CACtD,CAAC;AAEK,MAAM,yBAAyB,GAAG,gEAAY,CACnD,gDAAgD,EAChD,yDAAK,EAAoC,CAC1C,CAAC;AAEK,MAAM,YAAY,GAAG,gEAAY,CACtC,4CAA4C,EAC5C,yDAAK,EAAkB,CACxB;AAEM,MAAM,eAAe,GAAG,gEAAY,CACzC,8BAA8B,CAAC;;;;;;;;;;;;;AC5BjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACN;AAE3C,MAAM,gBAAgB,GAAG,QAAQ,CAAC;AAMlC,MAAM,YAAY,GAAU;IACjC,aAAa,EAAE,sBAAsB;CACtC,CAAC;AAGK,MAAM,OAAO,GAAG,iEAAa,CAClC,YAAY,EAEZ,sDAAE,CAAC,4DAA0B,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,iCAC7C,KAAK,KACR,aAAa,EAAE,MAAM,CAAC,MAAM,IAC5B,CAAC,CAEJ,CAAC;;;;;;;;;;;;;ACnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmF;;;;AAO5E,MAAM,eAAe;IAG1B,YAAoB,KAAgB;QAAhB,UAAK,GAAL,KAAK,CAAW;IAAI,CAAC;IAEzC,QAAQ;QACN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,2EAAmB,CAAC;IAC9D,CAAC;;8EAPU,eAAe;+FAAf,eAAe;QCV5B,yEAAqB;QACjB,uDACJ;;QAAA,4DAAM;;QADF,0DACJ;QADI,gKACJ;;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACF;AACL;AAEA;AACT;AACiB;AACD;AACZ;AACmB;AACmB;AAC5B;AACE;AACR;;;;;;;;;;;;;;;AAqB3C,MAAM,SAAS;;kEAAT,SAAS;yFAAT,SAAS,cAFR,+DAAY;8FAHb;QACT,GAAG,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC,uEAAmB,CAAC,CAAC,CAAC,EAAE,CAAC;KACvD,YAZQ;YACP,uEAAa;YACb,GAAG,+DAAU;YACb,oEAAgB;YAChB,sEAAgB;YAChB,uDAAW,CAAC,OAAO,CAAC,iDAAQ,EAAE,EAAE,CAAC;YACjC,wEAAmB,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,qEAAW,CAAC,UAAU,EAAE,CAAC;YAC/E,2DAAa,CAAC,OAAO,CAAC,CAAC,gGAAsB,CAAC,CAAC;YAC/C,8EAA2B,CAAC,OAAO,EAAE;SACtC;oIAMU,SAAS,2cAdlB,uEAAa,mTAEb,oEAAgB;QAChB,sEAAgB;;;;;;;;;;;;;ACxBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAG3C,MAAM,YAAY,GAAG,gEAAY,CACtC,+BAA+B,EAC/B,yDAAK,EAAoB,CAC1B,CAAC;AACK,MAAM,UAAU,GAAG,gEAAY,CACpC,+BAA+B,EAC/B,yDAAK,EAAoB,CAC1B,CAAC;AAEK,MAAM,gBAAgB,GAAG,gEAAY,CAC1C,0CAA0C,CAC3C,CAAC;AAEK,MAAM,WAAW,GAAG,gEAAY,CACrC,6BAA6B,EAC7B,yDAAK,EAAiB,CACvB,CAAC;AAEK,MAAM,kBAAkB,GAAG,gEAAY,CAC5C,2BAA2B,EAC3B,yDAAK,EAAiB,CACvB,CAAC;AAEK,MAAM,kBAAkB,GAAG,gEAAY,CAC5C,2BAA2B,EAC3B,yDAAK,EAAkB,CACxB,CAAC;AAIF,cAAc;AAEP,MAAM,YAAY,GAAG,gEAAY,CACtC,yBAAyB,CAC1B,CAAC;AAEK,MAAM,mBAAmB,GAAG,gEAAY,CAC7C,iCAAiC,EACjC,yDAAK,EAAiB,CACvB,CAAC;AAEK,MAAM,mBAAmB,GAAG,gEAAY,CAC7C,iCAAiC,EACjC,yDAAK,EAAkB,CACxB,CAAC;;;;;;;;;;;;;AC/CF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AAES;AAEtE,MAAM,0BAA0B,GAAG,yEAAqB,CAC7D,6FAA6C,CAC9C,CAAC;AAEK,MAAM,iBAAiB,GAAG,kEAAc,CAC7C,0BAA0B,EAC1B,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,WAAW,CAC7B;AAEM,MAAM,oBAAoB,GAAG,kEAAc,CAChD,0BAA0B,EAC1B,CAAC,KAAK,EAAkB,EAAE,CAAC,KAAK,CAAC,WAAW,CAC7C;AAEM,MAAM,YAAY,GAAG,kEAAc,CACxC,0BAA0B,EAC1B,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,CACxB;AAEM,MAAM,qBAAqB,GAAG,kEAAc,CACjD,0BAA0B,EAC1B,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,eAAe,CACjC;AAEM,MAAM,WAAW,GAAG,kEAAc,CACvC,0BAA0B,EAC1B,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CACvB;AAEM,MAAM,sBAAsB,GAAG,kEAAc,CAClD,oBAAoB,EACpB,CAAC,cAAc,EAAE,EAAE,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CACpE;;;;;;;;;;;;;AC5BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoG;AAES;AACsO;AAE5N;AAChB;AACX;;;AAKrF,MAAM,WAAW;IAMtB,YACU,KAAgB;QAAhB,UAAK,GAAL,KAAK,CAAW;QAExB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,gHAAuB,CAAC,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,CACnE,IAAI,CAAC,SAAS,GAAG,aAAa,CAC/B;QACD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,+GAAsB,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CAC9D,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;IAC3B,CAAC;IAEM,WAAW;QAChB,IAAI,KAAK,GAAW,CAAC;QACrB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,wFAAe,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CACvD,KAAK,GAAG,SAAS,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,0FAAW,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IAC7C,CAAC;IAEM,cAAc,CAAC,EAAU;QAC9B,iCAAiC;QACjC,IAAI,YAAsB;QAC1B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,sFAAa,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;QAC/C,6BAA6B;QAC7B,YAAY,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,IAAI,EAAE,CAAC,CAClD;QACD,iBAAiB;QACjB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,6FAAc,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC;QACrD,eAAe;QACf,IAAI,CAAC,WAAW,EAAE;IACpB,CAAC;IAEM,YAAY;QACjB,kDAAkD;QAClD,IAAI,SAAoB;QAExB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,+GAAsB,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAC1D,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAC1B;YACE,EAAE,EAAE,KAAK,CAAC,EAAE;YACZ,IAAI,EAAE,KAAK,CAAC,IAAI;YAChB,WAAW,EAAE,KAAK,CAAC,WAAW;YAC9B,SAAS,EAAE,KAAK,CAAC,SAAS;YAC1B,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,QAAQ,EAAE,KAAK,CAAC,QAAQ;YACxB,QAAQ,EAAE,KAAK,CAAC,QAAQ;YACxB,UAAU,EAAE,KAAK;SAClB,CACF,CACF;QACD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,yGAAY,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC;QAChD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,0FAAW,CAAC,EAAE,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC;QACtD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,+GAAgB,EAAE,CAAC;IAEzC,CAAC;IAEM,eAAe,CAAC,EAAU;QAC/B,IAAI,GAAG,GAAa,EAAE;QACtB,IAAI,QAAQ,GAAoB,EAAE;QAClC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,4GAAqB,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACzD,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,IAAI,EAAE,CAAC;YAC9C,KAAK,IAAI,QAAQ,IAAI,KAAK,CAAC,QAAQ,EAAE;gBACnC,IAAI,QAAQ,IAAI,EAAE,EAAE;oBAClB,QAAQ,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC;iBAC9C;aACF;QACH,CAAC,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,4GAAe,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,CAAC;IACzD,CAAC;;sEAxEU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;AClBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAGlD,uBAAuB;AAChB,MAAM,2BAA2B,GAAG,gEAAY,CACrD,iFAAiF,EACjF,yDAAK,EAAiD,CACvD;AAED,0DAA0D;AAC1D,0DAA0D;AAC1D,sDAAsD;AACtD,KAAK;AAEE,MAAM,wBAAwB,GAAG,gEAAY,CAClD,8CAA8C,EAC9C,yDAAK,EAA8B,CACpC;AAED,mBAAmB;AACZ,MAAM,2BAA2B,GAAG,gEAAY,CACrD,uDAAuD,CACxD,CAAC;AAEK,MAAM,4BAA4B,GAAG,gEAAY,CACtD,yDAAyD,CAC1D,CAAC;AAEF,sCAAsC;AAC/B,MAAM,wBAAwB,GAAG,gEAAY,CAClD,mDAAmD,CACpD;AAEM,MAAM,qBAAqB,GAAG,gEAAY,CAC/C,2CAA2C,EAC3C,yDAAK,EAAmC,CACzC;AAEM,MAAM,wBAAwB,GAAG,gEAAY,CAClD,gDAAgD,EAChD,yDAAK,EAAmC,CACzC;;;;;;;;;;;;;AClCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2I;;;;AAQpI,MAAM,kBAAkB;IAG7B,YACU,KAAiB,EACjB,MAAc;QADd,UAAK,GAAL,KAAK,CAAY;QACjB,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEE,yBAAyB,CAAC,EAAU;QACzC,IAAI,UAAkB;QACtB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,+GAA0B,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAC9D,UAAU,GAAG,KAAK,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC;QACpD,OAAO,UAAU;IACnB,CAAC;IAEM,aAAa,CAAC,IAAY;QAC/B,IAAI,WAA2B;QAC/B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,yGAAoB,CAAC,CAAC,SAAS,CAAC,cAAc,CAAC,EAAE,CACjE,WAAW,GAAG,cAAc,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAC/C,UAAU,CAAC,IAAI,KAAK,IAAI,CACzB,CACF;QACD,OAAO,WAAW;IACpB,CAAC;;oFAvBU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAHjB,MAAM;;;;;;;;;;;;;;;;;;;ACLb,MAAM,kBAAkB;IAE7B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;oFALU,kBAAkB;kGAAlB,kBAAkB;QCP/B,yEAAwB;QACtB,2EAA+B;QACjC,4DAAM;;;;;;;;;;;;;;ACDN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8D;AACF;AAC3B;AAE8C;;;;AAMxE,MAAM,sBAAsB;IAiBjC,YACU,QAAiB,EACjB,OAA+B;QAD/B,aAAQ,GAAR,QAAQ,CAAS;QACjB,YAAO,GAAP,OAAO,CAAwB;QAjBzC,yBAAoB,GAAG,kEAAY,CAAC,GAAG,EAAE;YACvC,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAEvB,4DAAM,CAAC,sFAA0C,CAAC,EAClD,gEAAS,CAAC,GAAG,EAAE;YACb,8FAA8F;YAC9F,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC,IAAI,CACpC,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,6FAAiD,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EACxE,iEAAU,CAAC,KAAK,CAAC,EAAE,CAAC,+CAAE,CAAC,6FAAiD,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CACzF,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;IAM0C,CAAC;;4FAnBnC,sBAAsB;yGAAtB,sBAAsB,WAAtB,sBAAsB;;;;;;;;;;;;;ACXnC;AAAA;AAAA;AAAA;AAAA;AAAkD;AAE3C,MAAM,UAAU,GAAG,gEAAY,CACpC,qBAAqB,CACtB,CAAC;AAEK,MAAM,iBAAiB,GAAG,gEAAY,CAC3C,6BAA6B,EAC7B,yDAAK,EAAiB,CACvB,CAAC;AAEK,MAAM,iBAAiB,GAAG,gEAAY,CAC3C,6BAA6B,EAC7B,yDAAK,EAAkB,CACxB,CAAC;;;;;;;;;;;;;ACVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACV;AAEyB;AACF;AACH;;;;;;;;;ICOxE,wEAAkC;IAChC,0EAA4B;IAC1B,0EAAsB;IACpB,0EAAwB;IACtB,0EAAiB;IAAA,kEAAO;IAAA,qEAAI;IAAA,iEAAM;IAAA,4DAAK;IAAC,uFACxC;IAAA,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;IACN,6EAEe;IADf,2UAAyB;IAEvB,0EACF;IAAA,4DAAS;IACX,qEAAe;;;;IAjBnB,yEAAkD;IAChD,yEAA0B;IAExB,wIAce;IAGf,6EAAiE;IAAzD,wTAAsB;IAC5B,kEACF;IAAA,4DAAS;IACX,4DAAM;IACR,4DAAM;;;IArBa,0DAAiB;IAAjB,oFAAiB;;ADA/B,MAAM,kBAAkB;IAK7B,YACU,KAAgB,EAChB,WAAwB;QADxB,UAAK,GAAL,KAAK,CAAW;QAChB,gBAAW,GAAX,WAAW,CAAa;QANlC,gBAAW,GAAY,KAAK;QAC5B,cAAS,GAAY,KAAK;IAMtB,CAAC;IAEL,QAAQ;QACN,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,iFAAY,CAAC,EAAE,MAAM,EAAE,qBAAqB,EAAE,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,0EAAe,CAAC;IAClD,CAAC;IAEM,iBAAiB;QACtB,IAAI,CAAC,SAAS,GAAG,IAAI;QACrB,IAAI,CAAC,WAAW,GAAG,IAAI;IACzB,CAAC;IAEM,aAAa;QAClB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,8FAAe,EAAE,CAAC;QACtC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,iGAAgB,EAAE,CAAC;QACvC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,0EAAS,EAAE,CAAC;IAClC,CAAC;IAEM,UAAU;QACf,IAAI,CAAC,SAAS,GAAG,KAAK;QACtB,IAAI,CAAC,WAAW,GAAG,KAAK;IAC1B,CAAC;;oFA/BU,kBAAkB;kGAAlB,kBAAkB;QChB/B,yEAA6B;QAC3B,2EAAkC;QAAA,uDAAkC;;;QAAA,4DAAQ;QAC5E,+EAAqD;QACrD,4EACkB;QAAA,8DAAG;QAAA,4DAAS;QAC9B,yEAAqB;QACnB,gEAAI;QACN,4DAAM;QACN,6EAC8B;QAA9B,2IAAS,uBAAmB,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAI7C,gHAwBM;QAER,4DAAM;;QAtC8B,0DAAkC;QAAlC,8NAAkC;QAYnC,2DAAe;QAAf,+EAAe;;;;;;;;;;;;;;ACblD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AAEwB;AACxC;AAE7C,MAAM,mBAAmB,GAAG,yEAAqB,CACtD,qEAA+B,CAChC,CAAC;AAIF,6DAA6D;AAC7D,yBAAyB;AACzB,0DAA0D;AAC1D,IAAI;AAEG,MAAM,oBAAoB,GAAG,kEAAc,CAChD,mBAAmB,EACnB,CAAC,KAAK,EAAU,EAAE,CAAC,KAAK,CAAC,cAAc,CACxC;AAEM,MAAM,0BAA0B,GAAG,kEAAc,CACtD,yGAAoB,EACpB,oBAAoB,EACpB,CAAC,cAAc,EAAE,IAAI,EAAkB,EAAE,CAAC,cAAc,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,KAAK,IAAI,CAAC,CACxG;AAEM,MAAM,+BAA+B,GAAG,kEAAc,CAC3D,mBAAmB,EACnB,CAAC,KAAK,EAAkB,EAAE,CAAC,KAAK,CAAC,yBAAyB,CAC3D;AAEM,MAAM,kBAAkB,GAAG,kEAAc,CAC9C,mBAAmB,EACnB,CAAC,KAAK,EAAW,EAAE,CAAC,KAAK,CAAC,YAAY,CACvC;AAEM,MAAM,kCAAkC,GAAG,kEAAc,CAC9D,0BAA0B,EAC1B,CAAC,KAAK,EAAe,EAAE;IACrB,IAAI,GAAG,GAAa,EAAE;IACtB,KAAK,IAAI,UAAU,IAAI,KAAK,EAAE;QAC5B,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;KACxB;IACD,OAAO,GAAG;AACZ,CAAC,CACF;;;;;;;;;;;;;AC9CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AAEI;AAE7C,MAAM,iBAAiB,GAAG,SAAS,CAAC;AAWpC,MAAM,YAAY,GAAU;IACjC,IAAI,EAAE,IAAI;IACV,MAAM,EAAE,IAAI;IACZ,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,MAAM,EAAE,IAAI;IACZ,MAAM,EAAE,SAAS;CAClB,CAAC;AAGK,MAAM,OAAO,GAAG,iEAAa,CAClC,YAAY,EACZ,sDAAE,CAAC,6DAA2B,EAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,iCACd,KAAK,KACR,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,EACtB,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,EAC1B,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,EACpB,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,IACpB,CACH,EACD,sDAAE,CAAC,iEAA+B,EAChC,GAAG,EAAE,CAAC,mBAAM,YAAY,EAAG,CAC5B,EACD,sDAAE,CAAC,mEAAiC,EAClC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,iCAAM,KAAK,KAAE,MAAM,EAAE,MAAM,CAAC,IAAI,IAAG,CACvD,EACD,sDAAE,CAAC,mEAAiC,EAClC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,iCAAM,KAAK,KAAE,KAAK,EAAE,MAAM,CAAC,KAAK,IAAG,CACvD,CAEF,CAAC;;;;;;;;;;;;;AC1CF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuG;AACoB;AAElC;AACwF;AAC7G;AAGqI;AACnK;;;;;;;;;ICU9B,wEAAoE;IAClE,6EAGC;IAFD,gYAAyC;IAGvC,uDACF;IAAA,4DAAS;IACX,qEAAe;;;;IAJU,0DAA4C;IAA5C,0GAA4C;IAEjE,0DACF;IADE,8FACF;;;;IAVR,yEAA8D;IAC5D,yEAA0B;IAExB,yEAA4B;IAC1B,oIAOe;;IACjB,4DAAM;IAGN,6EAA0E;IAAlE,gUAAiC;IACvC,kEACF;IAAA,4DAAS;IACX,4DAAM;IACR,4DAAM;;;IAfqC,0DAA6B;IAA7B,+JAA6B;;;;IAmBxE,yEAAoD;IAClD,yEAA0B;IACxB,yEAA4B;IAC1B,0EAAiB;IACf,0EAAoB;IAAA,kEAAO;IAAA,2EAAqB;IAAA,iEAAM;IAAA,4DAAO;IAAC,qFAAyB;IAAA,4DAAM;IAC/F,4DAAM;IACR,4DAAM;IACN,6EAEiB;IADjB,wTAAyB;IAEvB,yEACF;IAAA,4DAAS;IAET,8EAAuE;IAA/D,gUAA8B;IACpC,mEACF;IAAA,4DAAS;IACX,4DAAM;IACR,4DAAM;;ADvCD,MAAM,gBAAgB;IAO3B,YACU,KAAgB,EAChB,WAAwB,EACxB,MAAc;QAFd,UAAK,GAAL,KAAK,CAAW;QAChB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QARxB,gBAAW,GAAY,KAAK;IASxB,CAAC;IAEL,QAAQ;QACN,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,iFAAY,CAAC,EAAE,MAAM,EAAE,YAAY,EAAE,CAAC,CAAC;QAC7D,CAAC,CAAC;QAEF,uCAAuC;QACvC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,4HAA4B,EAAE,CAAC;QACnD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,4GAAkB,CAAC;QAE1D,mEAAmE;QACnE,6DAA6D;QAC7D,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,yHAA4C,CAAC;aAC5D,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,GAAG,WAAW,CAAC;QACnE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,oHAA0B,CAAC;QAEvE,6BAA6B;QAC7B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,8FAAmB,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAClE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,yHAAmB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CACjD;QACD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,gGAAqB,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CACtE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,2HAAqB,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CACrD;QACD,eAAe;QACf,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,iGAAsB,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CACxE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,uIAAiC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAClE;QAED,qBAAqB;IACvB,CAAC;IAED,kBAAkB;IAEX,UAAU,CAAC,EAAU;QAC1B,IAAI,aAAuB;QAC3B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,yGAA8B,CAAC,CAAC,SAAS,CACzD,oBAAoB,CAAC,EAAE,CAAC,aAAa,GAAG,oBAAoB,CAC7D;QACD,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC5B,OAAO,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CACvC,YAAY,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;SACtC;;YACC,OAAO,KAAK;IAChB,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;QAC/B,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;IAChC,CAAC;IACD,gBAAgB;IAEhB,2BAA2B;IACpB,gBAAgB,CAAC,oBAA4B;QAClD,2BAA2B;QAC3B,MAAM;QACN,sFAAsF;QACtF,+BAA+B;QAE/B,IAAI,WAAqB;QACzB,MAAM;QACN,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,yGAA8B,CAAC,CAAC,SAAS,CAAC,oBAAoB,CAAC,EAAE;YACjF,IAAI,oBAAoB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,EAAE;gBACvD,WAAW,GAAG,oBAAoB,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAC7C,EAAE,IAAI,oBAAoB,CAAC;aAC9B;iBAAM;gBACL,QAAQ;gBACR,IAAI,UAAkB;gBACtB,IAAI,kBAA+B;gBAEnC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,6GAAkC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CACrE,UAAU,GAAG,IAAI,CAClB;gBACD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,4HAA+C,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CACjF,kBAAkB,GAAG,GAAG,CACzB;gBAED,IAAI,UAAU,KAAK,QAAQ,EAAE;oBAC3B,sEAAsE;oBACtE,oBAAoB,GAAG,oBAAoB,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,CAChE,CAAC,kBAAkB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAC3C;iBACF;gBACD,QAAQ;gBACR,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,oBAAoB,CAAC;gBACrD,WAAW,CAAC,IAAI,CAAC,oBAAoB,CAAC;aACvC;QACH,CAAC,CAAC;QAEF,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,uHAAiB,CAAC,EAAE,WAAW,EAAE,CAAC,CAAC;IACzD,CAAC;IAEM,qBAAqB;QAC1B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,4HAA4B,EAAE,CAAC;QACnD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,iGAAsB,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CACxE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,uIAAiC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAClE;IACH,CAAC;IACD,8BAA8B;IAEvB,iBAAiB;QACtB,IAAI,CAAC,WAAW,GAAG,IAAI;IACzB,CAAC;IAED,2BAA2B;IACpB,aAAa;QAClB,IAAI,CAAC,WAAW,GAAG,KAAK;QACxB,2CAA2C;QAC3C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;IAEM,kBAAkB;QACvB,IAAI,CAAC,WAAW,GAAG,KAAK;IAC1B,CAAC;;gFA5HU,gBAAgB;gGAAhB,gBAAgB;QCpB7B,yEAA0B;QAKxB,iFAAqD;QAErD,4EACmB;QAAnB,wIAAS,YAAQ,IAAC;QAAC,+DAAI;QAAA,4DAAS;QAC9B,mEAAqB;QACvB,4EAA8E;QAA9B,wIAAS,uBAAmB,IAAC;QAC3E,mEACF;QAAA,4DAAS;QAOT,4GAmBM;;QAIN,6GAiBM;QAER,4DAAM;;QA1C6B,0DAA2B;QAA3B,oJAA2B;QAuB3B,0DAAiB;QAAjB,iFAAiB;;;;;;;;;;;;;;AC1CpD;AAAA;AAAA;AAAA;AAAA;AAAoE;AACnB;AAE1C,MAAM,kBAAkB,GAAG,yEAAqB,CACrD,kEAA6B,CAC9B,CAAC;AAEK,MAAM,eAAe,GAAG,kEAAc,CAC3C,kBAAkB,EAClB,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,CACxB;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmH;AAGjB;AACX;;;;;;;ICC/E,wEAA2C;IACzC,0EAAkE;IAAnC,uWAAyB,OAAO,KAAE;IAC3D,uDACN;IAAA,4DAAM;IACR,qEAAe;;;IAFP,0DACN;IADM,0FACN;;;IAJJ,wEAA2C;IACzC,sKAIe;IACjB,qEAAe;;;;IALE,0DAA0B;IAA1B,kGAA0B;;;;IAN/C,0EACmC;IAAnC,yUAAyB,OAAO,KAAE;IAChC,yEAA+B;IAAA,gEAAK;IAAA,gEAAI;IAAA,uDACxC;IAAA,4DAAM;IACN,yEAA6B;IAC3B,uJAMe;IACjB,4DAAM;IACR,4DAAM;;;IAXoC,0DACxC;IADwC,yGACxC;IAEkC,0DAAS;IAAT,kFAAS;;;IAiBvC,wEAA2C;IACzC,0EAA+B;IACzB,uDACN;IAAA,4DAAM;IACR,qEAAe;;;IAFP,0DACN;IADM,0FACN;;;IAJJ,wEAA2C;IACzC,sKAIe;IACjB,qEAAe;;;;IALE,0DAA0B;IAA1B,kGAA0B;;;;IAP/C,0EACoC;IAApC,yUAAyB,QAAQ,KAAE;IACjC,yEAA+B;IAAA,iEAAM;IAAA,gEAAI;IACvC,uDACF;IAAA,4DAAM;IACN,yEAA6B;IAC3B,uJAMe;IACjB,4DAAM;IACR,4DAAM;;;IAXF,0DACF;IADE,2GACF;IAEkC,0DAAS;IAAT,kFAAS;;;IAgBvC,wEAA0C;IACxC,0EAA8B;IAC5B,uDACF;IAAA,4DAAM;IACR,qEAAe;;;IAFX,0DACF;IADE,yFACF;;;IAJJ,wEAAyC;IACvC,gKAIe;IACjB,qEAAe;;;;IALE,0DAAyB;IAAzB,gGAAyB;;;IAexC,wEAA4C;IAC1C,0EAAgC;IAC1B,uDACN;IAAA,4DAAM;IACR,qEAAe;;;IAFP,0DACN;IADM,2FACN;;;IAJJ,wEAA6C;IAC3C,iKAIe;IACjB,qEAAe;;;;IALE,0DAA2B;IAA3B,kGAA2B;;;IAe1C,wEAA4C;IAC1C,0EAAgC;IAC9B,uDACF;IAAA,4DAAM;IACR,qEAAe;;;IAFX,0DACF;IADE,2FACF;;;IAJJ,wEAA6C;IAC3C,iKAIe;IACjB,qEAAe;;;;IALE,0DAA2B;IAA3B,kGAA2B;;;IAgB1C,wEAA+C;IAC7C,0EAAoC;IAC9B,uDACN;IAAA,4DAAM;IACR,qEAAe;;;IAFP,0DACN;IADM,8FACN;;;IAJJ,wEAAmD;IACjD,uKAIe;IACjB,qEAAe;;;;IALE,0DAA8B;IAA9B,sGAA8B;;;;IAPnD,0EACwC;IAAxC,0UAAyB,YAAY,KAAE;IACrC,yEAA+B;IAAA,sEAAW;IAAA,gEAAI;IAC5C,uDACF;IAAA,4DAAM;IACN,yEAA6B;IAC3B,wJAMe;IACjB,4DAAM;IACR,4DAAM;;;IAXF,0DACF;IADE,oHACF;IAEsC,0DAAa;IAAb,sFAAa;;;IAiB/C,wEAA+C;IAC7C,0EAAmC;IAC7B,uDACN;IAAA,4DAAM;IACR,qEAAe;;;IAFP,0DACN;IADM,8FACN;;;IAJJ,wEAAmD;IACjD,uKAIe;IACjB,qEAAe;;;;IALE,0DAA8B;IAA9B,sGAA8B;;;;IAPnD,0EACwC;IAAxC,0UAAyB,YAAY,KAAE;IACrC,yEAA+B;IAAA,qEAAU;IAAA,gEAAI;IAC3C,uDACF;IAAA,4DAAM;IACN,yEAA6B;IAC3B,wJAMe;IACjB,4DAAM;IACR,4DAAM;;;IAXF,0DACF;IADE,oHACF;IAEsC,0DAAa;IAAb,sFAAa;;;IAkB/C,wEAA8C;IAC5C,0EAAkC;IAChC,uDACF;IAAA,4DAAM;IACR,qEAAe;;;IAFX,0DACF;IADE,6FACF;;;IAJJ,wEAAiD;IAC/C,uKAIe;IACjB,qEAAe;;;;IALE,0DAA6B;IAA7B,qGAA6B;;;;IARlD,0EACuC;IAAvC,0UAAyB,WAAW,KAAE;IACpC,yEAA+B;IAC7B,qEAAS;IAAA,gEAAI;IACb,uDACF;IAAA,4DAAM;IACN,yEAA6B;IAC3B,wJAMe;IACjB,4DAAM;IACR,4DAAM;;;IAXF,0DACF;IADE,mHACF;IAEqC,0DAAY;IAAZ,qFAAY;;;;IArHrD,wEAAiD;IAE/C,+HAaM;IAEN,+HAcM;IAEN,yEAAkE;IAAlC,kUAAyB,MAAM,KAAE;IAC/D,yEAA+B;IAAA,gEAAK;IAAA,gEACjC;IAAA,uDACH;IAAA,4DAAM;IACN,yEAA6B;IAC3B,iJAMe;IACjB,4DAAM;IACR,4DAAM;IAEN,0EAAsE;IAApC,mUAAyB,QAAQ,KAAE;IACnE,0EAA+B;IAAA,mEAAO;IAAA,iEACnC;IAAA,wDACH;IAAA,4DAAM;IACN,0EAA6B;IAC3B,mJAMe;IACjB,4DAAM;IACR,4DAAM;IAEN,0EAAuE;IAArC,mUAAyB,SAAS,KAAE;IACpE,0EAA+B;IAAA,mEAAO;IAAA,iEAAI;IACxC,wDACF;IAAA,4DAAM;IACN,0EAA6B;IAC3B,mJAMe;IACjB,4DAAM;IACR,4DAAM;IAEN,iIAcM;IAEN,kIAcM;IAEN,kIAeM;IAER,qEAAe;;;;IA7HqB,0DAAuB;IAAvB,wFAAuB;IAevB,0DAAoB;IAApB,qFAAoB;IAkBjD,0DACH;IADG,6GACH;IAEiC,0DAAQ;IAAR,iFAAQ;IAYtC,0DACH;IADG,+GACH;IAEmC,0DAAU;IAAV,mFAAU;IAY3C,0DACF;IADE,iHACF;IAEmC,0DAAU;IAAV,mFAAU;IAUR,0DAAoB;IAApB,qFAAoB;IAgBrB,0DAAuB;IAAvB,wFAAuB;IAgBxB,0DAAoB;IAApB,qFAAoB;;AD9FpD,MAAM,oBAAoB;IA8B/B,YACU,KAAgB,EAChB,OAA2B;QAD3B,UAAK,GAAL,KAAK,CAAW;QAChB,YAAO,GAAP,OAAO,CAAoB;QA/BrC,eAAe;QACf,iBAAY,GAAY,KAAK;QAC7B,cAAS,GAAY,KAAK;QAoB1B,6BAA6B;QAE7B,yBAAyB;QAEzB,gBAAW,GAAG,EAAE;IAMZ,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,4HAA4C,CAAC;QACnF,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,0GAAqB,CAAC,CAAC,SAAS,CAAC,cAAc,CAAC,EAAE;YAClE,IAAI,CAAC,KAAK,GAAG,cAAc;QAC7B,CAAC,CAAC;QACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,sHAAsC,CAAC;QAE3E,kCAAkC;QAClC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC;QACjD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC;QAClD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC;QAC/C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC;QACnD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC;QACpD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,YAAY,CAAC;QAC1D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,YAAY,CAAC;QAC1D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,WAAW,CAAC;QACxD,8BAA8B;IAChC,CAAC;IAGD,uBAAuB;IAChB,aAAa;QAClB,0BAA0B;QAC1B,0DAA0D;IAE5D,CAAC;IAEM,eAAe,CAAC,IAAY;QACjC,sDAAsD;QACtD,uDAAuD;QAEvD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gHAAqC,CACvD,EAAE,cAAc,EAAE,IAAI,EAAE,CACzB,CAAC;QAGF,SAAS;QACT,8DAA8D;QAC9D,2CAA2C;QAC3C,2DAA2D;QAC3D,4DAA4D;QAC5D,IAAI;QACJ,oBAAoB;QACpB,+DAA+D;QAC/D,mDAAmD;QACnD,KAAK;QAIL,4HAA4H;QAC5H,IAAI,mBAAmC;QACvC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,4HAA4C,CAAC;aAC5D,SAAS,CAAC,WAAW,CAAC,EAAE,CACvB,mBAAmB,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAC/D;QACH,oBAAoB;QACpB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,mHAAwC,CAC1D,EAAE,yBAAyB,EAAE,mBAAmB,EAAE,CACnD,CAAC;QAEF,yDAAyD;QACzD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,mHAAwC,EAAE,CAAC;IAEjE,CAAC;IAED,0BAA0B;IAE1B,QAAQ;IAER,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,IAAI,MAAM,GAAY,KAAK;QAC3B,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE;YACxC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;gBAC/B,IAAI,UAAU,CAAC,EAAE,KAAK,MAAM,EAAE;oBAC5B,MAAM,GAAG,IAAI;oBACb,OAAM;iBACP;YACH,CAAC,CAAC;QACJ,CAAC,CAAC;QACF,OAAO,MAAM;IACf,CAAC;;wFArHU,oBAAoB;oGAApB,oBAAoB;QChBjC,oIA+He;;;QA/HA,iJAAwB;;;;;;;;;;;;;;ACAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACR;AAEzC,MAAM,eAAe,GAAG,OAAO,CAAC;AAMhC,MAAM,YAAY,GAAU,EAElC,CAAC;AAGK,MAAM,OAAO,GAAG,iEAAa,CAClC,YAAY,EAEZ,sDAAE,CAAC,yDAAuB,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,EAC3C,sDAAE,CAAC,gEAA8B,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,KAAK,CAAC,EAC5D,sDAAE,CAAC,gEAA8B,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,KAAK,CAAC,CAE7D,CAAC;;;;;;;;;;;;;ACpBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC2B;AACZ;AACE;AACX;AACC;AACZ;AACe;AACX;AAC4C;;;;AAkBnF,MAAM,aAAa;;0EAAb,aAAa;6FAAb,aAAa;iGARf;YACP,4DAAY;YACZ,4EAAoB;YACpB,kEAAmB;YACnB,2DAAa,CAAC,UAAU,CAAC,CAAC,qEAAc,CAAC,CAAC;YAC1C,uDAAW,CAAC,UAAU,CAAC,wEAA6B,EAAE,8DAAmB,CAAC;SAC3E;oIAEU,aAAa,mBAZtB,sFAAgB;QAChB,0EAAY;QACZ,sGAAoB,aAGpB,4DAAY;QACZ,4EAAoB;QACpB,kEAAmB;;;;;;;;;;;;;ACvBvB;AAAA;AAAA;AAAA;AAAA;AAAyD;AACa;AACW;AAE1E,MAAM,mBAAmB,GAAG;IACjC,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,iFAAsB,EAAE,KAAK,EAAE,IAAI,EAAE;IAC7E,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,4FAA8B,EAAE,KAAK,EAAE,IAAI,EAAE;CACtF;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AAEuB;AAExE,MAAM,yBAAyB,GAAG,iBAAiB,CAAC;AAMpD,MAAM,YAAY,GAAU;IACjC,WAAW,EAAE,EAAE;IACf,WAAW,EAAE,EAAE;IACf,eAAe,EAAE,EAAE;IACnB,QAAQ,EAAE,EAAE;IACZ,MAAM,EAAE,EAAE;IACV,KAAK,EAAE,EAAE;CACV,CAAC;AAGK,MAAM,OAAO,GAAG,iEAAa,CAClC,YAAY,EAEZ,sDAAE,CAAC,6FAAiD,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;IACtE,OAAO,MAAM,CAAC,IAAI;AACpB,CAAC,CACA,EACD,sDAAE,CAAC,6FAAiD,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,KAAK,CAAC,CAEhF,CAAC;;;;;;;;;;;;;;;;;ACtBK,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,oEAAG;QAAA,wEAAa;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;ACQb,MAAM,sBAAsB;IACjC,YACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAG1B,YAAO,GAAG,+CAA+C,CAAC;IAFtD,CAAC;IAIL,kBAAkB;QAChB,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;QACzB,MAAM,IAAI,GAAG,EAAE,CAAC;QAChB,IAAI,UAAc,CAAC;QAEnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,CAAC,CAAC;IACjC,CAAC;;4FAbU,sBAAsB;yGAAtB,sBAAsB,WAAtB,sBAAsB,mBAFrB,MAAM;;;;;;;;;;;;;ACLpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8D;AACQ;AACrC;AAEmB;;;;AAM7C,MAAM,cAAc;IAazB,YAAoB,QAAiB,EAC3B,UAA0B;QADhB,aAAQ,GAAR,QAAQ,CAAS;QAC3B,eAAU,GAAV,UAAU,CAAgB;QAZpC,eAAU,GAAG,kEAAY,CAAC,GAAG,EAAE,CAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,4DAAM,CAAC,4DAA0B,CAAC,EAClC,+DAAQ,CAAC,CAAC,MAAM,EAAE,EAAE,CAClB,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAC/C,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,mEAAiC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EACxD,iEAAU,CAAC,KAAK,CAAC,EAAE,CAAC,+CAAE,CAAC,mEAAiC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CACzE,CACF,CACF;IAGuC,CAAC;;4EAd9B,cAAc;iGAAd,cAAc,WAAd,cAAc;;;;;;;;;;;;;;;;;;;ACJpB,MAAM,YAAY;IAEvB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;wEALU,YAAY;4FAAZ,YAAY;QCPzB,2EAA+B;;;;;;;;;;;;;;ACC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACU;AACG;AACU;;;AAE9E,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,gFAAa,EAAE;IACtC;QACE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,6EAAc;QACxC,YAAY,EAAE,GAAG,EAAE,CAAC,iHAAsC;aACvD,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;KAC5B;IACD;QACE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,0FAAY;QACpC,YAAY,EAAE,GAAG,EAAE,CAAC,qHAA0C;aAC3D,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC;KAC9B;CACF,CAAC;AAOK,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAJlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAGX,gBAAgB,uFAHjB,4DAAY;;;;;;;;;;;;;ACnBxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGsE;AAC+F;AAClD;AAC/C;;;;;;;;ICTpE,wEAA4D;IAC1D,yEAA+B;IAC7B,yEAAyB;IACvB,yEAAkB;IAChB,oEAAgD;IAClD,4DAAM;IACN,4EAEwB;IADV,gXAAkC;IACvB,uDAAiB;IAAA,4DAAS;IACnD,yEAAyB;IACvB,yEAAmB;IAAA,uDAAqC;IAAA,4DAAM;IAC9D,wDACF;IAAA,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,qEAAe;;;;IAXW,0DAAsB;IAAtB,sJAAsB;IAIjB,0DAAiB;IAAjB,yFAAiB;IAErB,0DAAqC;IAArC,qHAAqC;IACxD,0DACF;IADE,iGACF;;ADQC,MAAM,kBAAkB;IAI7B,YACS,KAAyB,EACzB,OAA2B;QAD3B,UAAK,GAAL,KAAK,CAAoB;QACzB,YAAO,GAAP,OAAO,CAAoB;QAJpC,YAAO,GAAgB,EAAE;QAMvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,wHAAwB,CAAC;IAEjE,CAAC;IAED,QAAQ;QACN,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,iFAAY,CAAC,EAAE,MAAM,EAAE,oBAAoB,EAAE,CAAC,CAAC;QACrE,CAAC,CAAC;IACJ,CAAC;IACD,iDAAiD;IACjD,gCAAgC;IAEhC,iBAAiB;IACV,aAAa,CAAC,mBAA2B;QAC9C,IAAI,oBAAiC;QAErC,iCAAiC;QACjC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,uHAAiB,CAAC,EAAE,mBAAmB,EAAE,CAAC,CAAC;QAC/D,iDAAiD;QACjD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,4HAA4B,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,CACtE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,uHAAiB,CAAC,EAAE,WAAW,EAAE,CAAC,CACrD,CAAC;IACN,CAAC;IAEM,uBAAuB,CAAC,SAAoB;QACjD,IAAI,UAAU,GAAW,CAAC;QAC1B,IAAI,KAAa;QACjB,IAAI,cAA8B;QAClC,IAAI,eAAgC;QAEpC,wCAAwC;QACxC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,yGAAoB,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,CAC9D,cAAc,GAAG,WAAW,CAC7B;QACD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,0GAAqB,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CACzD,eAAe,GAAG,KAAK,CACxB;QAED,gDAAgD;QAChD,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;YAC5C,IAAI,iBAAiB,GAAG,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CACvD,aAAa,KAAK,UAAU,CAAC,EAAE,CAChC;YACD,gDAAgD;YAChD,UAAU,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,KAAK;QAC9D,CAAC,CAAC,CAAC;QACH,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;QAC7B,OAAO,KAAK;IACd,CAAC;;oFAxDU,kBAAkB;kGAAlB,kBAAkB;QCpB/B,iIAee;;;QAfkB,sJAAuB;;;;;;;;;;;;;;ACAxD;AAAA;AAAA;AAAA;AAAA;AAAoE;AACrB;AAExC,MAAM,iBAAiB,GAAG,yEAAqB,CACpD,gEAA2B,CAC5B,CAAC;AAEK,MAAM,mBAAmB,GAAG,kEAAc,CAC/C,iBAAiB,EACjB,CAAC,KAAK,EAAU,EAAE,CAAC,KAAK,CAAC,aAAa,CACvC,CAAC;;;;;;;;;;;;;ACFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0H;AACxC;AACoB;AACQ;;;;;;;ICA9F,wEAAgE;IAC9D,4EAAuC;IACrC,uDACF;IAAA,4DAAQ;IACV,qEAAe;;;IAFX,0DACF;IADE,8FACF;;;IANZ,wEAAsC;IACpC,0EAA6B;IAErB,8JAIe;IAEvB,4DAAM;IACR,qEAAe;;;IAPgC,0DAAyB;IAAzB,8FAAyB;;;;IA6BtE,wEAAuC;IACrC,6EAAiE;IAAhC,sbAA+B;IAAC,+DAAI;IAAA,4DAAS;IAChF,qEAAe;;;;IACf,wEAAsC;IACpC,6EAAiE;IAAhC,wbAA+B;IAAC,mEAAQ;IAAA,4DAAS;IACpF,qEAAe;;;;IA1CrB,wEAAiD;IAC/C,yEAAuB;IACrB,2EAAiC;IAAA,uDAAa;IAAA,4DAAQ;IAGtD,+IAUe;IAGf,yEAAuB;IACrB,yEAAyB;IACvB,sEAAK;IAAA,+DAAI;IAAA,4DAAM;IACf,2EAA0H;IAA5D,iZAA2D;IAAzH,4DAA0H;IAC1H,uEAAK;IAAA,6DAAC;IAAA,4DAAM;IACZ,4EAAqB;IACnB,wDACF;;IAAA,4DAAQ;IACV,4DAAM;IAEN,2EAAsB;IACpB,uEAAK;IAAA,qEAAS;IAAA,4DAAM;IACpB,6EAA4B;IAAA,wDAAkC;;IAAA,4DAAQ;IACxE,4DAAM;IAER,4DAAM;IAEN,2EAAqB;IACnB,8EAA6D;IAA5B,2WAA2B;IAAC,gEAAI;IAAA,4DAAS;IAC1E,iJAEe;IACf,iJAEe;IACf,8EACkC;IAAlC,iXAAiC;IAAC,kEAAM;IAAA,4DAAS;IACnD,4DAAM;IACR,4DAAM;IACR,qEAAe;;;IA7CsB,0DAAa;IAAb,6EAAa;IAG/B,0DAAqB;IAArB,oFAAqB;IAgBF,0DAA+B;IAA/B,oGAA+B;IAG3D,0DACF;IADE,mKACF;IAK4B,0DAAkC;IAAlC,qKAAkC;IAOjD,0DAAsB;IAAtB,qFAAsB;IAGtB,0DAAqB;IAArB,oFAAqB;;ADzBrC,MAAM,kBAAkB;IAG7B,qCAAqC;IAErC,YACU,KAAgB,EAChB,WAAwB,EACxB,MAAc;QAFd,UAAK,GAAL,KAAK,CAAW;QAChB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAGL,QAAQ;QACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,4FAAiC,CAAC;QAClE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,6FAAoB,CAAC;QACjE,6CAA6C;QAC7C,uBAAuB;QACvB,IAAI;IACN,CAAC;IAEM,YAAY,CAAC,EAAU;QAC5B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,2FAAY,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC3C,CAAC;IAEM,cAAc,CAAC,EAAU;QAC9B,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE,CAAC;QACnC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,EAAE,CAAC;IACtC,CAAC;IAEM,yBAAyB,CAAC,CAAM,EAAE,EAAU;QACjD,IAAI,QAAQ,GAAG,CAAC,CAAC,KAAK;QACtB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,wGAAyB,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;QAChE,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;IAChC,CAAC;IAEM,QAAQ,CAAC,EAAU;QACxB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,gGAAuB,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAC9D,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,kGAAiB,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACpE;QACD,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE,CAAC;QACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;IACzC,CAAC;;oFAzCU,kBAAkB;kGAAlB,kBAAkB;QClB/B,yEAA6B;QAG3B,kIA+Ce;;QACf,4EACoB;QAAA,uEAAY;QAAA,4DAAS;QAC3C,4DAAM;;QAlD2B,0DAAgB;QAAhB,gJAAgB;;;;;;;;;;;;;;ACFjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACiC;AACN;AACc;AACN;AACA;AACF;AAC7B;AACJ;AACa;AACd;AACJ;AACY;AACH;AACoC;AAC/B;AACH;AACmC;AACX;AACT;AACM;;;;AA6BnE,MAAM,WAAW;;sEAAX,WAAW;2FAAX,WAAW;+FAfb;YACP,4DAAY;YACZ,wEAAkB;YAClB,4DAAY;YACZ,eAAe;YACf,4DAAa,CAAC,UAAU,CAAC,CAAC,qEAAW,EAAE,kEAAY,EAAE,iGAAsB,CAAC,CAAC;YAC7E,wDAAW,CAAC,UAAU,CAAC,wEAAuB,EAAE,iEAAgB,CAAC;YACjE,wDAAW,CAAC,UAAU,CAAC,4FAAmC,EAAE,+EAAsB,CAAC;YACnF,wDAAW,CAAC,UAAU,CAAC,qEAAyB,EAAE,6DAAiB,CAAC;YACpE,wDAAW,CAAC,UAAU,CAAC,qGAA6C,EAAE,mFAA2B,CAAC;YAClG,wDAAW,CAAC,UAAU,CAAC,+FAAqC,EAAE,iFAAuB,CAAC;YACtF,wDAAW,CAAC,UAAU,CAAC,sFAA+B,EAAE,2EAAoB,CAAC;YAC7E,kBAAkB;SACnB;oIAEU,WAAW,mBAvBpB,4FAAkB;QAClB,sFAAgB;QAChB,oGAAoB;QACpB,8FAAkB;QAClB,8FAAkB;QAClB,4FAAkB;QAClB,+DAAc,aAGd,4DAAY;QACZ,wEAAkB;QAClB,4DAAY;;;;;;;;;;;;;;;;;;;ACtC+B;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { createReducer, on } from '@ngrx/store';\r\nimport { IngredientList } from 'src/app/modules/order/models/Ingredient';\r\nimport * as ItemEditActions from './item-edit.actions';\r\n\r\nexport const itemEditFeatureKey = 'itemEdit';\r\n\r\nexport interface State {\r\n  // list of ingredient options for selection on edit:\r\n  selectedIngredientsOfType: IngredientList\r\n  ingredientType: string\r\n  selectorFlag: boolean\r\n}\r\n\r\nexport const initialState: State = {\r\n  selectedIngredientsOfType: [],\r\n  ingredientType: '',\r\n  selectorFlag: false,\r\n};\r\n\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n\r\n\r\n  on(ItemEditActions.updateTempIngredientsOfType,\r\n    (state, action) => (\r\n      { ...state, selectedIngredientsOfType: action.selectedIngredientsOfType })\r\n  ),\r\n  on(ItemEditActions.updateEditIngredientType,\r\n    (state, action) => (\r\n      { ...state, ingredientType: action.ingredientType })\r\n  ),\r\n  // open/close selector popup\r\n  on(ItemEditActions.openIngredientSelectorPopup,\r\n    (state) => (\r\n      { ...state, selectorFlag: true })\r\n  ),\r\n  on(ItemEditActions.closeIngredientSelectorPopup,\r\n    (state) => (\r\n      { ...state, selectorFlag: false })\r\n  ),\r\n  // ingredient selector (de)select ingredients\r\n  on(ItemEditActions.clearSelectedIngredients,\r\n    (state) => (\r\n      { ...state, selectedIngredientsOfType: [] })\r\n  ),\r\n  on(ItemEditActions.addSelectedIngredient,\r\n    (state, action) => (\r\n      { ...state, selectedIngredientsOfType: action.ingredients })\r\n  ),\r\n  on(ItemEditActions.removeSelectedIngredient,\r\n    (state, action) => (\r\n      { ...state, selectedIngredientsOfType: action.ingredients })\r\n  ),\r\n\r\n);\r\n\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { selectAllIngredients } from 'src/app/stores/selectors/order-static-data.selectors';\r\nimport { IngredientList } from '../../models/Ingredient';\r\nimport { OrderItem, OrderItemDetailed } from '../../models/Item';\r\nimport { selectOrderItemEntities } from '../order-items/order-items.selectors';\r\nimport * as fromCart from './cart.reducer';\r\nimport * as _ from 'lodash'\r\n\r\nexport const selectCartState = createFeatureSelector<fromCart.State>(\r\n  fromCart.cartFeatureKey\r\n);\r\n\r\nexport const selectCartIds = createSelector(\r\n  selectCartState,\r\n  (state): string[] => state.orderItemIds\r\n);\r\n\r\nexport const selectCartItemArray = createSelector(\r\n  selectOrderItemEntities,\r\n  selectCartIds,\r\n  (orderEntities, ids): OrderItem[] => {\r\n    let orderItems: OrderItem[] = []\r\n    for (let id of ids) { orderItems.push(orderEntities[id]) }\r\n    return orderItems\r\n  }\r\n\r\n);\r\n\r\nexport const selectCartItemsWithIngredientInfo = createSelector(\r\n  // creates an array of orderItems containing the full ingredient properties to the items\r\n  selectCartItemArray,\r\n  selectAllIngredients,\r\n  (orderItems, allIngredients): OrderItemDetailed[] => {\r\n    let orderItemDetailed: OrderItemDetailed\r\n    let orderItemDetailList: OrderItemDetailed[] = []\r\n    orderItems.forEach(orderItem => {\r\n      if (!orderItem) {\r\n        orderItemDetailList = []\r\n      } else {\r\n        let ingredientList: IngredientList = []\r\n        orderItem.ingredients.forEach(ingredientId =>\r\n          ingredientList.push(allIngredients.find(ingredient =>\r\n            ingredient.id === ingredientId\r\n          ))\r\n        )\r\n        let newItem = {\r\n          id: '',\r\n          name: '',\r\n          itemGroup: null,\r\n          quantity: 1,\r\n          price: 0,\r\n          subtotal: 0,\r\n          selectedSpecialtyId: null,\r\n          ingredients: [],\r\n          viewDetail: false,\r\n          ingredientDetails: ingredientList\r\n        };\r\n        orderItemDetailed = Object.assign({}, newItem, orderItem)\r\n        orderItemDetailList.push(orderItemDetailed)\r\n      }\r\n    })\r\n    return orderItemDetailList\r\n  }\r\n)\r\n\r\nexport const selectCartTotal = createSelector(\r\n  selectOrderItemEntities,\r\n  selectCartIds,\r\n  (orderItems, cartIds): number => {\r\n    let total: number = 0\r\n    if (cartIds.length == 0 || _.size(orderItems) == 0) {\r\n      total = 0\r\n    } else {\r\n      cartIds.forEach(cartId =>\r\n        total += orderItems[cartId].subtotal\r\n      )\r\n    }\r\n    return total\r\n  }\r\n);\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class PagesModule { }\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { Specialties, Specialty } from 'src/app/modules/order/models/Specialty';\r\nimport * as fromCurrentItem from './current-item.reducer';\r\nimport { selectAllIngredients, selectIngredientTypes, selectSpecialties } from '../../../../stores/selectors/order-static-data.selectors';\r\nimport { IngredientList, Ingredients } from '../../models/Ingredient';\r\nimport { Item, OrderItem } from '../../models/Item';\r\nimport { selectIngredientType, selectSelectedIngredientsOfType } from '../item-edit/item-edit.selectors';\r\nimport { selectOrderItemArray } from '../order-items/order-items.selectors';\r\n\r\nexport const selectCurrentItemState = createFeatureSelector<fromCurrentItem.State>(\r\n  fromCurrentItem.currentItemFeatureKey\r\n);\r\n\r\n// ------- ITEM PROPERTIES -------\r\nexport const selectCurrentItemGroup = createSelector(\r\n  selectCurrentItemState,\r\n  (state) => state.itemGroup\r\n)\r\n\r\n// returns a list of specialties with the matching group\r\n// ex: return all sandwiches\r\nexport const selectSpecialtiesOfGroup = createSelector(\r\n  selectSpecialties,\r\n  selectCurrentItemGroup,\r\n  (specialties: Specialty[], selectedGroup: string): Specialties =>\r\n    specialties.filter(specialty =>\r\n      specialty.itemGroup === selectedGroup)\r\n)\r\n\r\nexport const selectCurrentItemIngredients = createSelector(\r\n  selectAllIngredients,\r\n  selectCurrentItemState,\r\n  (allIngredients, state): IngredientList => {\r\n    let ingredientList: IngredientList = []\r\n    if (state.ingredients) {\r\n      for (let ingredientId of state.ingredients) {\r\n        ingredientList.push(allIngredients.find(ingredient =>\r\n          ingredient.id === ingredientId)\r\n        )\r\n      }\r\n    }\r\n    return ingredientList\r\n  }\r\n)\r\n\r\n// ------- INGREDIENTS -------\r\nexport const selectCurrentItemIngredientIds = createSelector(\r\n  selectCurrentItemIngredients,\r\n  (state): Ingredients => state.map(ingredient => ingredient.id)\r\n)\r\n\r\nexport const selectSelectedIngredientSelectType = createSelector(\r\n  selectIngredientTypes,\r\n  selectIngredientType,\r\n  (types, type): string => types[type].selectType\r\n)\r\n\r\nexport const selectCurrentItemPrice = createSelector(\r\n  selectIngredientTypes,\r\n  selectCurrentItemIngredients,\r\n  (types, currentIngredients): number => {\r\n    let totalPrice: number = 0\r\n    currentIngredients.forEach(itemIngredient => {\r\n      totalPrice += +types[itemIngredient.type].price\r\n    })\r\n    return totalPrice\r\n  }\r\n)\r\n\r\nexport const selectCurrentItemQuantity = createSelector(\r\n  selectCurrentItemState,\r\n  (state): number => state.quantity\r\n)\r\n\r\nexport const selectCurrentItemSubtotal = createSelector(\r\n  selectCurrentItemPrice,\r\n  selectCurrentItemQuantity,\r\n  (price, quantity): number => price * quantity\r\n)\r\n\r\n\r\n// ------- ORIGIN INFO: SPECIALTY -------\r\nexport const selectSelectedSpecialtyId = createSelector(\r\n  selectCurrentItemState,\r\n  (state): string | undefined => {\r\n    return !state.selectedSpecialtyId\r\n      ? undefined\r\n      : state.selectedSpecialtyId\r\n  }\r\n)\r\n\r\nexport const selectSelectedSpecialty = createSelector(\r\n  selectSelectedSpecialtyId,\r\n  selectSpecialties,\r\n  (id, specialties): Specialty | undefined => {\r\n    return !specialties\r\n      ? undefined\r\n      : specialties.find(specialty => specialty.id === id)\r\n  }\r\n)\r\n\r\nexport const selectSpecialtyIngredientIds = createSelector(\r\n  selectSelectedSpecialty,\r\n  (specialty): Ingredients | undefined => {\r\n    return !specialty\r\n      ? undefined\r\n      : specialty.ingredients\r\n  }\r\n)\r\n\r\nexport const selectSpecialtyIngredients = createSelector(\r\n  selectSpecialtyIngredientIds,\r\n  selectAllIngredients,\r\n  (specialtyIds, allIngredients): IngredientList | undefined => allIngredients.filter(ingredient => specialtyIds.includes(ingredient.id))\r\n)\r\n\r\nexport const selectSpecialtyModified = createSelector(\r\n  selectCurrentItemIngredientIds,\r\n  selectSpecialtyIngredientIds,\r\n  (current, specialty): boolean => {\r\n    // check for specialty should never run (see dependency selectCurrentItemName), but just in case...\r\n    if (specialty === undefined) { return true }\r\n    // check: same # of ingredients\r\n    if (current.length != specialty.length) {\r\n      return true // yes, modified\r\n    } else {\r\n      // check: all item ingredients included in specialty list\r\n      current.forEach(ingredientId =>\r\n        !specialty.includes(ingredientId) ? true : false\r\n      )\r\n    }\r\n    return false // no, not modified\r\n  }\r\n)\r\n\r\nexport const selectCurrentItemId = createSelector(\r\n  selectOrderItemArray,\r\n  selectCurrentItemGroup,\r\n  selectCurrentItemState,\r\n  (orderItems, group, currentItem): string => {\r\n    // if there's already an id, just return that\r\n    if (currentItem.id) { return currentItem.id } else {\r\n      let unique: boolean\r\n      let i: number = 1\r\n      let id: string\r\n      do {\r\n        unique = true\r\n        id = group + \"-\" + i\r\n        orderItems.find(existingItem =>\r\n          existingItem.id === id ? unique = false : null\r\n        )\r\n        i++\r\n      } while (!unique)\r\n      return id\r\n    }\r\n  }\r\n)\r\n\r\nexport const selectCurrentItemName = createSelector(\r\n  selectSpecialtyModified,\r\n  selectSelectedSpecialty,\r\n  selectCurrentItemGroup,\r\n  selectCurrentItemState,\r\n  (modified, specialty, group, currentItem): string => {\r\n    // if there's already a name, just return that\r\n    if (currentItem.name) { return currentItem.name } else {\r\n      // TODO: check to ensure specialties are properly cleared\r\n      let name: string =\r\n        specialty\r\n          ? modified\r\n            ? 'Custom ' + specialty.name\r\n            : specialty.name\r\n          : 'Custom ' + group\r\n      return name\r\n    }\r\n  }\r\n)\r\n","import { createAction, props } from '@ngrx/store';\r\n\r\n\r\nexport const updateHeader = createAction(\r\n  '[Component] Update Header',\r\n  props<{ header: string }>()\r\n)\r\n\r\n\r\n\r\n\r\n","import { HttpRequest, HttpEvent, HttpHandler, HttpInterceptor, HttpResponse } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { selectCartTotal } from \"../modules/order/state/cart/cart.selectors\";\r\nimport { trxnResult } from \"../modules/payment/models/TrxnResult\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MockPaymentInterceptor implements HttpInterceptor {\r\n  constructor(private store: Store<{}>) { }\r\n\r\n  public intercept(req: HttpRequest<any>, next: HttpHandler):\r\n    Observable<HttpEvent<any>> {\r\n    if (req.method === 'GET' && req.url == 'https://localhost:3000/api/pay') {\r\n      const result = this.getPayResultsMockData()\r\n      const response = new HttpResponse({\r\n        body: result\r\n      })\r\n      return of(response)\r\n    }\r\n    return next.handle(req)\r\n  }\r\n\r\n\r\n  public getPayResultsMockData(): trxnResult {\r\n    let randResult: boolean = Math.round(Math.random()) == 0 ? true : false\r\n    let date = new Date(Date.now()).toString()\r\n    let rand = Math.round(Math.random() * 10000).toFixed(0)\r\n    let transactionId = 'abc' + rand\r\n    let amount: number\r\n    this.store.select(selectCartTotal).subscribe(total =>\r\n      amount = total\r\n    )\r\n\r\n    return randResult\r\n      ? {\r\n        transactionId: transactionId,\r\n        status: 'approved',\r\n        dateTime: date,\r\n        amount: amount\r\n      }\r\n      : {\r\n        transactionId: transactionId,\r\n        status: 'declined',\r\n        dateTime: date,\r\n        amount: amount\r\n      }\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { catchError, map, concatMap } from 'rxjs/operators';\r\nimport { EMPTY, of } from 'rxjs';\r\n\r\nimport * as OrderActions from './order.actions';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class OrderEffects {\r\n\r\n  loadOrders$ = createEffect(() => {\r\n    return this.actions$.pipe(\r\n\r\n      ofType(OrderActions.loadOrders),\r\n      concatMap(() =>\r\n        /** An EMPTY observable only emits completion. Replace with your own observable API request */\r\n        EMPTY.pipe(\r\n          map(data => OrderActions.loadOrdersSuccess({ data })),\r\n          catchError(error => of(OrderActions.loadOrdersFailure({ error }))))\r\n      )\r\n    );\r\n  });\r\n\r\n\r\n\r\n  constructor(private actions$: Actions) { }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PaymentComponent } from './components/payment/payment.component';\r\nimport { PayComponent } from './components/pay/pay.component';\r\nimport { PayTxResultComponent } from './components/pay-tx-result/pay-tx-result.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'pay', component: PayComponent,\r\n    children: [\r\n      { path: 'payment', component: PaymentComponent },\r\n      { path: 'post-pay', component: PayTxResultComponent },\r\n      { path: '', redirectTo: 'payment', pathMatch: 'full' },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class PaymentRoutingModule { }\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { selectCartTotal } from '../../../order/state/cart/cart.selectors';\r\nimport { updateHeader } from '../../../shared/state/shared.actions';\r\nimport { ccData } from '../../models/CCData';\r\nimport { clearPaymentInfo, postPayment, updateCCInfo } from '../../state/payment.actions';\r\nimport { selectPaymentState } from '../../state/payment.selectors';\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  templateUrl: './payment.component.html',\r\n  styleUrls: ['./payment.component.scss']\r\n})\r\nexport class PaymentComponent implements OnInit {\r\n  confirmFlag: boolean = false\r\n  popupFlag: boolean = false\r\n  total$: Observable<number>\r\n  paymentForm = this.fb.group({\r\n    name: ['', Validators.required],\r\n    number: ['', [\r\n      Validators.required,\r\n      Validators.pattern(\"[0-9]{10}\")\r\n    ]],\r\n    cvv: ['', [\r\n      Validators.required,\r\n      Validators.pattern(\"[0-9]{3}\")\r\n    ]],\r\n    exp: ['', [Validators.required]]\r\n  })\r\n\r\n  constructor(\r\n    private store: Store<{}>,\r\n    private fb: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      this.store.dispatch(updateHeader({ header: 'Payment' }))\r\n    })\r\n    this.total$ = this.store.select(selectCartTotal)\r\n    this.store.select(selectPaymentState).subscribe(state => {\r\n      if (state.name) {\r\n        this.paymentForm.controls['name'].setValue(state.name)\r\n      }\r\n      if (state.number) {\r\n        this.paymentForm.controls['number'].setValue(state.number)\r\n      }\r\n      if (state.cvv) {\r\n        this.paymentForm.controls['cvv'].setValue(state.cvv)\r\n      }\r\n      if (state.exp) {\r\n        this.paymentForm.controls['exp'].setValue(state.exp)\r\n      }\r\n    })\r\n  }\r\n\r\n  public openCancelConfirm() {\r\n    this.popupFlag = true\r\n    this.confirmFlag = true\r\n  }\r\n\r\n  public confirmCancel() {\r\n    this.store.dispatch(clearPaymentInfo())\r\n  }\r\n\r\n  public closePopup() {\r\n    this.popupFlag = false\r\n    this.confirmFlag = false\r\n  }\r\n\r\n  public submit() {\r\n    // this.store.dispatch(updatePaymentForm({ paymentForm: this.paymentForm }))\r\n    let amount: number\r\n    this.store.select(selectCartTotal).subscribe(total =>\r\n      amount = total\r\n    )\r\n    let ccInfo: ccData = {\r\n      name: this.paymentForm.controls['name'].value,\r\n      number: this.paymentForm.controls['number'].value,\r\n      cvv: this.paymentForm.controls['cvv'].value,\r\n      exp: this.paymentForm.controls['exp'].value,\r\n      amount: amount\r\n    }\r\n    this.store.dispatch(updateCCInfo({ data: ccInfo }))\r\n    this.store.dispatch(postPayment({ data: ccInfo }))\r\n  }\r\n\r\n}\r\n","<div [formGroup]=paymentForm class=\"paywrap\">\r\n  <button type=\"button\" class=\"edit btn-primary  \"\r\n  routerLink=\"/order/order-list\">Edit/View Order</button>\r\n  <label class=\"total form-control\" >${{total$ |async |number: '1.2'}}</label>\r\n  <form class=\"form container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n          <input formControlName=\"name\" type=\"text\" placeholder=\"Name\" class=\"form-control col\">\r\n          <input formControlName=\"number\" type=\"text\" placeholder=\"Credit Card #\"class=\"form-control col\">\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <input formControlName=\"cvv\" type=\"text\" placeholder=\"3-Digit Security Code\" class=\"form-control col\">\r\n          <input formControlName=\"exp\" type=\"date\" placeholder=\"Exp Date\"class=\"form-control col\">\r\n        </div>\r\n      </div>\r\n  </form>\r\n  <button type=\"submit\" class=\"submit btn-success  \"\r\n  (click)=\"submit()\" [disabled]=\"!paymentForm.valid\"\r\n  routerLink=\"../post-pay\">\r\n    Pay ${{total$ |async |number: '1.2'}}\r\n  </button>\r\n  <hr>\r\n  <button type=\"button\" class=\"cancel-btn btn-danger  \"\r\n  (click)=\"openCancelConfirm()\">\r\n    Cancel\r\n  </button>\r\n\r\n\r\n  <!-- POPUPS -->\r\n\r\n  <div class=\"popup-screen-cover\" *ngIf=\"popupFlag\">\r\n    <div class=\"popup-window\">\r\n\r\n      <!-- POPUP: CONFIRM -->\r\n      <ng-container *ngIf=\"confirmFlag\">\r\n        <div class=\"popup-contents\">\r\n          <div class=\"msg\">\r\n            <div class=\"cancel\">Do you <em>really</em> want to cancel this transaction?</div>\r\n          </div>\r\n        </div>\r\n        <button type=\"button\" class=\"cancel-btn-pop btn-danger  \"\r\n        (click)=\"confirmCancel()\"\r\n        routerLink=\"/order/order-list\">\r\n          Cancel Payment\r\n        </button>\r\n      </ng-container> <!-- confirm popup -->\r\n\r\n\r\n      <!-- CLOSE BUTTON-->\r\n      <button (click)=\"closePopup()\" class= \" btn-primary close-btn  \">\r\n        Close\r\n      </button><!-- POPUP: CLOSE BUTTON -->\r\n    </div> <!-- popup window -->\r\n  </div> <!-- popup cover -->\r\n\r\n</div>\r\n","import { OrderModule } from \"../modules/order/order.module\";\r\nimport { PagesModule } from \"../modules/pages/pages.module\";\r\nimport { PaymentModule } from \"../modules/payment/payment.module\";\r\nimport { SharedModule } from \"../modules/shared/shared.module\";\r\n\r\nexport const AppModules = [\r\n  OrderModule,\r\n  PaymentModule,\r\n  SharedModule,\r\n  PagesModule\r\n]\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport * as CartActions from './cart.actions';\r\n\r\nexport const cartFeatureKey = 'cart';\r\n\r\nexport interface State {\r\n  orderItemIds: string[]\r\n  total: number\r\n}\r\n\r\nexport const initialState: State = {\r\n  orderItemIds: [],\r\n  total: 0,\r\n};\r\n\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n\r\n  on(CartActions.addCartItem, (state, action) => {\r\n    let ids = state.orderItemIds.slice(0)\r\n    ids.push(action.id)\r\n    return {\r\n      ...state, orderItemIds: ids\r\n    }\r\n  }),\r\n  on(CartActions.removeCartItem, (state, action) => ({\r\n    ...state,\r\n    orderItemIds: action.orderItemIds\r\n  })),\r\n  on(CartActions.updateTotal, (state, action) => ({\r\n    ...state, total: action.total\r\n  })),\r\n  on(CartActions.clearCart,\r\n    () => (initialState))\r\n\r\n);\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  useMocking: true\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { createAction, createSelector, props } from '@ngrx/store';\r\nimport { Ingredients } from 'src/app/modules/order/models/Ingredient';\r\nimport { ItemGroup } from 'src/app/modules/order/models/ItemGroup';\r\nimport { OrderItem } from '../../models/Item';\r\n\r\n\r\nexport const setItemGroup = createAction(\r\n  '[Specialty] Set Item Group',\r\n  props<{ currentItemGroup: ItemGroup }>()\r\n);\r\n\r\nexport const updateSpecialtyId = createAction(\r\n  '[Specialty] Update Selected Specialty ID',\r\n  props<{ selectedSpecialtyId: string }>()\r\n)\r\n\r\nexport const loadItemToBuilder = createAction(\r\n  '[OrderForm] Load Cart Item to Current Item',\r\n  props<{ orderItem: OrderItem }>()\r\n)\r\n\r\nexport const clearCurrentItem = createAction(\r\n  '[Builder Confirm Popup] Clear Current Item'\r\n);\r\n\r\nexport const updateIngredients = createAction(\r\n  '[Builder Form] Update ingredients on the current item',\r\n  props<{ ingredients: Ingredients }>()\r\n);\r\n\r\nexport const updateCurrentItemId = createAction(\r\n  '[Builder onInit] Update Current Item ID',\r\n  props<{ id: string }>()\r\n)\r\n\r\nexport const updateCurrentItemName = createAction(\r\n  '[Builder onInit] Update Current Item Name',\r\n  props<{ name: string }>()\r\n)\r\n\r\nexport const updateCurrentItemPriceAndSubtotal = createAction(\r\n  '[Builder onInit] Update Current Item Price',\r\n  props<{ price: number }>()\r\n)\r\n\r\n","import { Action, ActionReducer, combineReducers, createReducer, MetaReducer, on, ActionReducerMap, StoreModule } from '@ngrx/store';\r\nimport * as fromCart from 'src/app/modules/order/state/cart/cart.reducer';\r\nimport * as fromOrder from '../modules/order/state/order.reducer';\r\nimport * as fromOrderStaticData from './reducers/order-static-data.reducer';\r\nimport { environment } from 'src/environments/environment';\r\nimport * as fromOrderItems from '../modules/order/state/order-items/order-items.reducer';\r\nimport * as fromPayment from '../modules/payment/state/payment.reducer';\r\n\r\nexport const orderFeatureKey = 'order';\r\n\r\nexport interface AppState {\r\n\r\n  [fromCart.cartFeatureKey]: fromCart.State;\r\n  [fromOrderItems.orderItemsFeatureKey]: fromOrderItems.State;\r\n  [fromOrder.orderFeatureKey]: fromOrder.State;\r\n  [fromOrderStaticData.orderStaticDataFeatureKey]: fromOrderStaticData.State;\r\n  [fromPayment.paymentFeatureKey]: fromPayment.State\r\n}\r\n\r\nexport const reducers: ActionReducerMap<AppState> = {\r\n  [fromCart.cartFeatureKey]: fromCart.reducer,\r\n  [fromOrderItems.orderItemsFeatureKey]: fromOrderItems.reducer,\r\n  [fromOrder.orderFeatureKey]: fromOrder.reducer,\r\n  [fromOrderStaticData.orderStaticDataFeatureKey]: fromOrderStaticData.reducer,\r\n  [fromPayment.paymentFeatureKey]: fromPayment.reducer\r\n};\r\n\r\n\r\nexport const metaReducers: MetaReducer<AppState>[] =\r\n  !environment.production\r\n    ? [debug]\r\n    : [];\r\n\r\nexport function debug(reducer: ActionReducer<any>): ActionReducer<any> {\r\n  return function (state, action) {\r\n    console.log('state', state);\r\n    console.log('action', action);\r\n\r\n    return reducer(state, action)\r\n  }\r\n}\r\n\r\n","import { createAction, props } from '@ngrx/store';\r\n\r\nexport const addCartItem = createAction(\r\n  '[Builder] Add Cart Item',\r\n  props<{ id: string }>()\r\n);\r\n\r\nexport const removeCartItem = createAction(\r\n  '[Builder] Remove Cart Item',\r\n  props<{ orderItemIds: string[] }>()\r\n);\r\n\r\nexport const updateTotal = createAction(\r\n  '[Order List] Update Total',\r\n  props<{ total: number }>()\r\n);\r\n\r\nexport const loadCartsSuccess = createAction(\r\n  '[Cart] Load Carts Success',\r\n  props<{ data: any }>()\r\n);\r\n\r\nexport const loadCartsFailure = createAction(\r\n  '[Cart] Load Carts Failure',\r\n  props<{ error: any }>()\r\n);\r\n\r\nexport const clearCart = createAction(\r\n  '[Cart] Clear Cart'\r\n);\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { clearCurrentItem, setItemGroup } from 'src/app/modules/order/state/current-item/current-item.actions';\r\nimport { updateHeader } from '../../../shared/state/shared.actions';\r\nimport { ItemGroup } from '../../models/ItemGroup';\r\n\r\n@Component({\r\n  selector: 'app-ssselctor',\r\n  templateUrl: './ssselctor.component.html',\r\n  styleUrls: ['./ssselctor.component.scss']\r\n})\r\nexport class SsselctorComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private store: Store<any>\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.clearCurrentSpecialty()\r\n    setTimeout(() => {\r\n      this.store.dispatch(updateHeader({ header: 'Specialty or BYO?' }))\r\n    })\r\n  }\r\n\r\n  //#region Methods\r\n  public setItemGroup(currentItemGroup: ItemGroup) {\r\n    this.store.dispatch(setItemGroup({ currentItemGroup }))\r\n  }\r\n\r\n  public clearCurrentSpecialty() {\r\n    this.store.dispatch(clearCurrentItem())\r\n  }\r\n  //#endregion Methods\r\n}\r\n","<div class=\"ssselector-wrap\">\r\n  <!-- SALAD -->\r\n  <div class=\"salad\">\r\n    <div class=\"fill\">\r\n      <img src=\"./assets/images/specialty_salad.png\">\r\n    </div>\r\n    <button class=\"salad-specialty btn-primary  \"\r\n    (click)=\"setItemGroup('salad')\"\r\n    routerLink=\"/order/specialty\">\r\n      Specialty Salad!\r\n    </button>\r\n    <button class=\"salad-byo btn-primary  \"\r\n    (click)=\"setItemGroup('salad')\"\r\n    routerLink=\"../builder\">\r\n      BMO Salad!\r\n    </button>\r\n  </div> <!-- salad -->\r\n\r\n  <!-- SANDWICH -->\r\n  <div class=\"sandwich\">\r\n    <div class=\"fill\">\r\n      <img src=\"./assets/images/specialty_sandwich.png\">\r\n    </div>\r\n    <button class=\"sandwich-specialty btn-primary  \"\r\n    (click)=\"setItemGroup('sandwich')\"\r\n    routerLink=\"/order/specialty\">\r\n      Specialty Sandwich!\r\n    </button>\r\n    <button class=\"sandwich-byo btn-primary  \"\r\n    (click)=\"setItemGroup('sandwich')\"\r\n    routerLink=\"../builder\">\r\n      BMO Sandwich!\r\n    </button>\r\n  </div> <!-- sandwich -->\r\n\r\n  <!-- OTHER -->\r\n  <div class=\"other\">\r\n    <div class=\"fill-other\">\r\n      <img src=\"./assets/images/specialty_other.png\">\r\n    </div>\r\n    <button class=\"sides btn-primary  \"\r\n    (click)=\"setItemGroup('side')\"\r\n    routerLink=\"/order/other\">\r\n      Sides!\r\n    </button>\r\n    <button class=\"desserts btn-primary  \"\r\n    (click)=\"setItemGroup('dessert')\"\r\n    routerLink=\"/order/other\">\r\n      Desserts!\r\n    </button>\r\n    <button class=\"drinks btn-primary  \"\r\n    (click)=\"setItemGroup('drink')\"\r\n    routerLink=\"/order/other\">\r\n      Drinks!\r\n    </button>\r\n  </div> <!-- other -->\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { MainPanelComponent } from './main-panel/main-panel.component';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport * as fromShared from './state/shared.reducer';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    StoreModule.forFeature(fromShared.sharedFeatureKey, fromShared.reducer)\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { HttpRequest, HttpEvent, HttpHandler, HttpInterceptor, HttpResponse } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { OrderStaticData } from \"../modules/order/models/OrderStaticData\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MockOrderStaticDataInterceptor implements HttpInterceptor {\r\n  constructor(private store: Store<{}>) { }\r\n\r\n  public intercept(req: HttpRequest<any>, next: HttpHandler):\r\n    Observable<HttpEvent<any>> {\r\n    if (req.method === 'GET' && req.url == 'https://localhost:3000/api/order-static-data/') {\r\n      const staticData = this.getOrderStaticDataData()\r\n      const response = new HttpResponse({\r\n        body: staticData\r\n      })\r\n      return of(response)\r\n    }\r\n    return next.handle(req)\r\n  }\r\n\r\n\r\n  public getOrderStaticDataData(): OrderStaticData {\r\n    return {\r\n      \"specialties\": [\r\n        {\r\n          \"id\": \"ham_sourdough\",\r\n          \"name\": \"Ham on Sourdough\",\r\n          \"ingredients\": [\"ham\", \"sourdough\", \"cheddar\"],\r\n          \"itemGroup\": \"sandwich\",\r\n          \"img\": \"./assets/images/specialties/ham_sourdough.png\",\r\n          \"description\": \"This is some sample text describing a sandwich. You should think about this sandwich when you're hungry. But if you have no way of getting this sandwich, maybe don't.\",\r\n          \"price\": null\r\n        },\r\n        {\r\n          \"id\": \"turkey_sandwich\",\r\n          \"name\": \"Turkey on White\",\r\n          \"ingredients\": [\r\n            \"turkey\",\r\n            \"kaiser_roll\",\r\n            \"provolone\",\r\n            \"mustard\",\r\n            \"lettuce\"\r\n          ],\r\n          \"itemGroup\": \"sandwich\",\r\n          \"img\": \"./assets/images/specialties/turkey_sandwich.png\",\r\n          \"description\": \"This is some sample text describing a sandwich. You should think about this sandwich when you're hungry. But if you have no way of getting this sandwich, maybe don't.\",\r\n          \"price\": null\r\n        },\r\n        {\r\n          \"id\": \"cobb\",\r\n          \"name\": \"Cobb Salad\",\r\n          \"ingredients\": [\r\n            \"ham\",\r\n            \"turkey\",\r\n            \"mixed_greens\",\r\n            \"tomatoes\",\r\n            \"cheddar\",\r\n            \"cucumbers\",\r\n            \"ranch\"\r\n          ],\r\n          \"itemGroup\": \"salad\",\r\n          \"img\": \"./assets/images/specialties/cobb.png\",\r\n          \"description\": \"This is some sample text describing a sandwich. You should think about this sandwich when you're hungry. But if you have no way of getting this sandwich, maybe don't.\",\r\n          \"price\": null\r\n        },\r\n        {\r\n          \"id\": \"svens_salad\",\r\n          \"name\": \"Sven's Salad\",\r\n          \"ingredients\": [\r\n            \"red_lettuce\",\r\n            \"vinaigrette\",\r\n            \"almonds\",\r\n            \"cranberries\",\r\n            \"ham\"\r\n          ],\r\n          \"itemGroup\": \"salad\",\r\n          \"img\": \"./assets/images/specialties/svens_salad.png\",\r\n          \"description\": \"This is some sample text describing a sandwich. You should think about this sandwich when you're hungry. But if you have no way of getting this sandwich, maybe don't.\",\r\n          \"price\": null\r\n        }\r\n      ],\r\n      \"ingredients\": [\r\n        {\r\n          \"id\": \"ham\",\r\n          \"name\": \"Ham\",\r\n          \"image\": \".assets/images/ingredients/ham.png\",\r\n          \"itemGroup\": \"sal/sand\",\r\n          \"type\": \"Meat\"\r\n        },\r\n        {\r\n          \"id\": \"turkey\",\r\n          \"name\": \"Turkey\",\r\n          \"image\": \".assets/images/ingredients/turkey.png\",\r\n          \"itemGroup\": \"sal/sand\",\r\n          \"type\": \"Meat\"\r\n        },\r\n        {\r\n          \"id\": \"roast_beef\",\r\n          \"name\": \"Roast Beef\",\r\n          \"image\": \".assets/images/ingredients/roast_beef.png\",\r\n          \"itemGroup\": \"sandwich\",\r\n          \"type\": \"Meat\"\r\n        },\r\n        {\r\n          \"id\": \"red_lettuce\",\r\n          \"name\": \"Red Lettuce\",\r\n          \"image\": \".assets/images/ingredients/red_lettuce.png\",\r\n          \"itemGroup\": \"sal/sand\",\r\n          \"type\": \"Greens\"\r\n        },\r\n        {\r\n          \"id\": \"green_lettuce\",\r\n          \"name\": \"Green Lettuce\",\r\n          \"image\": \".assets/images/ingredients/green_lettuce.png\",\r\n          \"itemGroup\": \"sal/sand\",\r\n          \"type\": \"Greens\"\r\n        },\r\n        {\r\n          \"id\": \"mixed_greens\",\r\n          \"name\": \"Mixed Greens\",\r\n          \"image\": \".assets/images/ingredients/mixed_greens.png\",\r\n          \"itemGroup\": \"salad\",\r\n          \"type\": \"Greens\"\r\n        },\r\n        {\r\n          \"id\": \"lettuce\",\r\n          \"name\": \"Lettuce\",\r\n          \"image\": \".assets/images/ingredients/lettuce.png\",\r\n          \"itemGroup\": \"salad\",\r\n          \"type\": \"Veggies\"\r\n        },\r\n        {\r\n          \"id\": \"tomatoes\",\r\n          \"name\": \"Tomatoes\",\r\n          \"image\": \".assets/images/ingredients/tomatoes.png\",\r\n          \"itemGroup\": \"sal/sand\",\r\n          \"type\": \"Veggies\"\r\n        },\r\n        {\r\n          \"id\": \"pickles\",\r\n          \"name\": \"Pickles\",\r\n          \"image\": \".assets/images/ingredients/Pickles.png\",\r\n          \"itemGroup\": \"sandwich\",\r\n          \"type\": \"Veggies\"\r\n        },\r\n        {\r\n          \"id\": \"onions\",\r\n          \"name\": \"Onions\",\r\n          \"image\": \".assets/images/ingredients/onions.png\",\r\n          \"itemGroup\": \"sal/sand\",\r\n          \"type\": \"Veggies\"\r\n        },\r\n        {\r\n          \"id\": \"cucumbers\",\r\n          \"name\": \"Cucumbers\",\r\n          \"image\": \".assets/images/ingredients/cucumbers.png\",\r\n          \"itemGroup\": \"salad\",\r\n          \"type\": \"Veggies\"\r\n        },\r\n        {\r\n          \"id\": \"cheddar\",\r\n          \"name\": \"Cheddar\",\r\n          \"image\": \".assets/images/ingredients/cheddar.png\",\r\n          \"itemGroup\": \"sal/sand\",\r\n          \"type\": \"Cheese\"\r\n        },\r\n        {\r\n          \"id\": \"provolone\",\r\n          \"name\": \"Provolone\",\r\n          \"image\": \".assets/images/ingredients/provolone.png\",\r\n          \"itemGroup\": \"sandwich\",\r\n          \"type\": \"Cheese\"\r\n        },\r\n        {\r\n          \"id\": \"blue_cheese\",\r\n          \"name\": \"Blue Cheese\",\r\n          \"image\": \".assets/images/ingredients/blue_cheese.png\",\r\n          \"itemGroup\": \"salad\",\r\n          \"type\": \"Cheese\"\r\n        },\r\n        {\r\n          \"id\": \"sourdough\",\r\n          \"name\": \"Sourdough\",\r\n          \"image\": \".assets/images/ingredients/sourdough.png\",\r\n          \"itemGroup\": \"sandwich\",\r\n          \"type\": \"Bread\"\r\n        },\r\n        {\r\n          \"id\": \"kaiser_roll\",\r\n          \"name\": \"Kaiser Roll\",\r\n          \"image\": \".assets/images/ingredients/kaiser_roll.png\",\r\n          \"itemGroup\": \"sandwich\",\r\n          \"type\": \"Bread\"\r\n        },\r\n        {\r\n          \"id\": \"mustard\",\r\n          \"name\": \"Mustard\",\r\n          \"image\": \".assets/images/ingredients/mustard.png\",\r\n          \"itemGroup\": \"sandwich\",\r\n          \"type\": \"Condiments\"\r\n        },\r\n        {\r\n          \"id\": \"mayo\",\r\n          \"name\": \"Mayo\",\r\n          \"image\": \".assets/images/ingredients/mayo.png\",\r\n          \"itemGroup\": \"sandwich\",\r\n          \"type\": \"Condiments\"\r\n        },\r\n        {\r\n          \"id\": \"ranch\",\r\n          \"name\": \"Ranch\",\r\n          \"image\": \".assets/images/ingredients/ranch.png\",\r\n          \"itemGroup\": \"salad\",\r\n          \"type\": \"Dressings\"\r\n        },\r\n        {\r\n          \"id\": \"almonds\",\r\n          \"name\": \"Almonds\",\r\n          \"image\": \".assets/images/ingredients/almonds.png\",\r\n          \"itemGroup\": \"salad\",\r\n          \"type\": \"Nuts/Fruit\"\r\n        },\r\n        {\r\n          \"id\": \"cranberries\",\r\n          \"name\": \"Cranberries\",\r\n          \"image\": \".assets/images/ingredients/cranberries.png\",\r\n          \"itemGroup\": \"salad\",\r\n          \"type\": \"Nuts/Fruit\"\r\n        },\r\n        {\r\n          \"id\": \"vinaigrette\",\r\n          \"name\": \"Vinaigrette\",\r\n          \"image\": \".assets/images/ingredients/vinaigrette.png\",\r\n          \"itemGroup\": \"salad\",\r\n          \"type\": \"Dressings\"\r\n        }\r\n      ],\r\n      \"ingredientTypes\": {\r\n        \"Condiments\": {\r\n          \"selectType\": \"multiple\",\r\n          \"price\": \"0.25\"\r\n        },\r\n        \"Bread\": {\r\n          \"selectType\": \"single\",\r\n          \"price\": \"3.00\"\r\n        },\r\n        \"Cheese\": {\r\n          \"selectType\": \"multiple\",\r\n          \"price\": \"2.00\"\r\n        },\r\n        \"Meat\": {\r\n          \"selectType\": \"multiple\",\r\n          \"price\": \"3.20\"\r\n        },\r\n        \"Veggies\": {\r\n          \"selectType\": \"multiple\",\r\n          \"price\": \"1.70\"\r\n        },\r\n        \"Greens\": {\r\n          \"selectType\": \"single\",\r\n          \"price\": \"2.80\"\r\n        },\r\n        \"Dressings\": {\r\n          \"selectType\": \"multiple\",\r\n          \"price\": \"1.50\"\r\n        },\r\n        \"Nuts/Fruit\": {\r\n          \"selectType\": \"multiple\",\r\n          \"price\": \"2.20\"\r\n        }\r\n      },\r\n      \"desserts\": [],\r\n      \"drinks\": [],\r\n      \"sides\": []\r\n    }\r\n\r\n\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { updateHeader } from '../../shared/state/shared.actions';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(private store: Store<{}>) { }\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      this.store.dispatch(updateHeader({ header: 'Salad, Sandwich, & Sven!' }))\r\n    })\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"home-wrap\">\r\n  <div class=\" background-img-area \">\r\n    <img class=\"splash-img\" src=\"./assets/images/home-splash.jpg\" alt=\"\">\r\n  </div>\r\n  <div class=\" button-holder\">\r\n    <button class= \"   btn-success menu-btn\">Menu</button>\r\n    <button class= \"   btn-success order-btn\"\r\n    routerLink=\"/order\">Start Order</button>\r\n    <button class= \"   btn-success signup-btn\">Sign Up</button>\r\n    <button class= \"   btn-success location-btn\">Find Nearest Location</button>\r\n  </div>\r\n  <div class=\"store-bg-img-area\">\r\n    <img class =\"store-img\" src=\"./assets/images/store_img.png\" alt=\"\">\r\n  </div> <!-- store image -->\r\n  <div class=\"quote \">\r\n    <div class=\"d-flex font-italic\">\r\n        \"It's not actually 'us,' it's really just me... and it's for pretend.\"\r\n    </div>\r\n  </div> <!-- quote -->\r\n  <div class=\"profile \">\r\n    <div class=\"profile-img-area\">\r\n      <img src=\"./assets/images/sven_headshot.png\" class=\"profile-img\" alt=\"\">\r\n    </div>\r\n    <div class=\"profile-copy  \">\r\n      I try to serve the freshest salads and sandwiches possible... because I'm the only one that eats them. I go to great lengths to make sure that what I fix myself isn't bad, and I think that for the most part, I do a fine job. No one has ever given me an award for my food because no one else has tried it. I've eaten it all. And that's right, I charge myself for it.\r\n    </div>\r\n  </div> <!-- profile section -->\r\n</div>\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { selectAllIngredients } from 'src/app/stores/selectors/order-static-data.selectors';\r\nimport { OrderItem } from '../../models/Item';\r\nimport * as fromOrderItems from './order-items.reducer';\r\n\r\nexport const selectOrderItemsState = createFeatureSelector<fromOrderItems.State>(\r\n  fromOrderItems.orderItemsFeatureKey\r\n);\r\n\r\nexport const selectOrderItemIds = createSelector(\r\n  selectOrderItemsState,\r\n  (state) => state.ids\r\n)\r\n\r\nexport const selectOrderItemEntities = createSelector(\r\n  selectOrderItemsState,\r\n  (state): { [key: string]: OrderItem } => state.entities\r\n)\r\n\r\nexport const selectOrderItemArray = createSelector(\r\n  selectOrderItemEntities,\r\n  (entities): OrderItem[] => {\r\n    let orderItems: OrderItem[] = []\r\n    for (let key in entities) {\r\n      orderItems.push(entities[key])\r\n    }\r\n    return orderItems\r\n  }\r\n)\r\n\r\nexport const selectOrderItemNames = createSelector(\r\n  selectAllIngredients,\r\n  selectOrderItemEntities,\r\n  (allIngredients, orderItems): { [key: string]: string[] } => {\r\n    // let ingredientNames: Array<{ [id: string]: string[] }> = []\r\n    let item: { [key: string]: string[] } = {}\r\n    // loop through each order item ingredient list (by id)\r\n    // for each ingredient id ...\r\n    // look up the name in allIngredients\r\n    // set id as the index set name as the value\r\n    for (let itemId in orderItems) {\r\n      let nameList: string[] = []\r\n      // get list of ingredients from the item\r\n      orderItems[itemId].ingredients.forEach(ingredientId => {\r\n        nameList.push(allIngredients.find(ingredient =>\r\n          ingredient.id == ingredientId).name)\r\n      })\r\n      item[itemId] = nameList\r\n      // ingredientNames.push(item)\r\n    }\r\n    return item\r\n  }\r\n)\r\n","import { state } from '@angular/animations';\r\nimport { createReducer, on } from '@ngrx/store';\r\nimport { OrderItem, OrderItems } from '../../models/Item';\r\nimport * as OrderItemsActions from './order-items.actions';\r\n\r\nexport const orderItemsFeatureKey = 'orderItems';\r\n\r\nexport interface State {\r\n  entities: { [key: string]: OrderItem }\r\n  ids: string[]\r\n}\r\n\r\nexport const initialState: State = {\r\n  entities: {},\r\n  ids: []\r\n};\r\n\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n\r\n  on(OrderItemsActions.loadOrderItems,\r\n    (state) => state\r\n  ),\r\n  on(OrderItemsActions.addOrderItem,\r\n    (state, action) => {\r\n      let ids = state.ids.slice(0)\r\n      ids.push(action.orderItem.id)\r\n      ids.sort()\r\n      return {\r\n        ids,\r\n        entities: {\r\n          ...state.entities,\r\n          [action.orderItem.id]: action.orderItem\r\n        }\r\n      }\r\n    }\r\n  ),\r\n  on(OrderItemsActions.removeOrderItem,\r\n    (state, action) => ({\r\n      ...state,\r\n      ids: action.ids,\r\n      entities: action.entities\r\n    })\r\n  ),\r\n  on(OrderItemsActions.toggleDetail,\r\n    (state, action) => {\r\n      let ids = state.ids.slice(0)\r\n      let orderItem: OrderItem\r\n        = Object.assign({}, state.entities[action.id])\r\n      orderItem.viewDetail = !orderItem.viewDetail\r\n\r\n      return {\r\n        ids,\r\n        entities: {\r\n          ...state.entities,\r\n          [action.id]: orderItem\r\n        }\r\n      }\r\n    }\r\n  ),\r\n  on(OrderItemsActions.clearOrderItems,\r\n    () => ({\r\n      ...state,\r\n      ids: [],\r\n      entities: {}\r\n    })\r\n  ),\r\n  on(OrderItemsActions.updateQuantityAndSubtotal,\r\n    (state, action) => {\r\n      let ids = state.ids.slice(0)\r\n      let orderItem: OrderItem\r\n        = Object.assign({}, state.entities[action.id])\r\n      orderItem.quantity = action.quantity\r\n      orderItem.subtotal = action.quantity * orderItem.price\r\n\r\n      return {\r\n        ids,\r\n        entities: {\r\n          ...state.entities,\r\n          [action.id]: orderItem\r\n        }\r\n      }\r\n    }\r\n  ),\r\n);\r\n\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { BuilderComponent } from \"./components/builder/builder.component\";\r\nimport { OrderListComponent } from \"./components/order-list/order-list.component\";\r\nimport { OrderComponent } from \"./order.component\";\r\nimport { SpecialtyComponent } from \"./components/specialty/specialty.component\";\r\nimport { SsselctorComponent } from \"./components/ssselctor/ssselctor.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'order', component: OrderComponent,\r\n    children: [\r\n      { path: 'ss-selector', component: SsselctorComponent },\r\n      { path: 'specialty', component: SpecialtyComponent },\r\n      { path: 'builder', component: BuilderComponent },\r\n      { path: 'order-list', component: OrderListComponent },\r\n      { path: '', redirectTo: 'ss-selector', pathMatch: 'full' },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class OrderRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { OrderItemDetailed } from 'src/app/modules/order/models/Item';\r\nimport { selectCartItemsWithIngredientInfo } from 'src/app/modules/order/state/cart/cart.selectors';\r\nimport { selectOrderItemEntities, selectOrderItemIds } from 'src/app/modules/order/state/order-items/order-items.selectors';\r\nimport { updateHeader } from '../../../shared/state/shared.actions';\r\nimport { trxnResult } from '../../models/TrxnResult';\r\nimport { selectPayResult } from '../../state/payment.selectors';\r\nimport * as _ from 'lodash'\r\nimport { addOrderItem, clearOrderItems } from 'src/app/modules/order/state/order-items/order-items.actions';\r\nimport { addCartItem, clearCart } from 'src/app/modules/order/state/cart/cart.actions';\r\nimport { clearPaymentInfo, postPayment, updateCCInfo } from '../../state/payment.actions';\r\nimport { ccData } from '../../models/CCData';\r\nimport { clearCurrentItem } from 'src/app/modules/order/state/current-item/current-item.actions';\r\n\r\n@Component({\r\n  selector: 'app-pay-tx-result',\r\n  templateUrl: './pay-tx-result.component.html',\r\n  styleUrls: ['./pay-tx-result.component.scss']\r\n})\r\nexport class PayTxResultComponent implements OnInit {\r\n  items$: Observable<OrderItemDetailed[]>\r\n  payResult$: Observable<trxnResult>\r\n  result: trxnResult\r\n\r\n  paySuccessFlag: boolean = false;\r\n  confirmFlag: boolean = false\r\n  popupFlag: boolean = false\r\n  timeReady: Date\r\n\r\n\r\n  constructor(\r\n    private store: Store<{}>,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      this.paySuccessFlag\r\n        ? this.store.dispatch(updateHeader({ header: 'Success!' }))\r\n        : this.store.dispatch(updateHeader({ header: 'Oops!' }))\r\n    })\r\n\r\n    this.payResult$ = this.store.select(selectPayResult)\r\n    this.payResult$.subscribe(result => {\r\n      if (result) {\r\n        this.paySuccessFlag = result.status == 'approved'\r\n          ? true\r\n          : false\r\n        this.timeReady = this.orderReadyTime(result.dateTime)\r\n      }\r\n    })\r\n    this.items$ = this.store.select(selectCartItemsWithIngredientInfo)\r\n  }\r\n\r\n  public openCancelConfirm() {\r\n    this.popupFlag = true\r\n    this.confirmFlag = true\r\n  }\r\n\r\n  private orderReadyTime(time: string): Date {\r\n    let processTime = new Date(time)\r\n    let readyTime = processTime.getTime() + 10 * 60000\r\n\r\n    return new Date(readyTime)\r\n  }\r\n\r\n  public confirmCancel() {\r\n    this.store.dispatch(clearPaymentInfo())\r\n  }\r\n\r\n  public closePopup() {\r\n    this.popupFlag = false\r\n    this.confirmFlag = false\r\n  }\r\n\r\n  // dev\r\n  public flipResults() {\r\n    this.paySuccessFlag = !this.paySuccessFlag\r\n  }\r\n\r\n  clearMemory() {\r\n    this.store.dispatch(clearCart())\r\n    this.store.dispatch(clearOrderItems())\r\n    this.store.dispatch(clearPaymentInfo())\r\n  }\r\n}\r\n","<div class=\"post-pay-wrap\" *ngIf=\"payResult$ |async as result\">\r\n  <!-- SUCCESS -->\r\n  <ng-container *ngIf=\"paySuccessFlag\">\r\n    <div class=\"result\">\r\n      <img src=\"./assets/images/thanks.png\" alt=\"\">\r\n    </div>\r\n    <div class=\"order-form\">\r\n      <div class=\"order-meta\">\r\n        <div class=\"order-num\"><b>Order#: </b>{{result.transactionId}}</div>\r\n        <div class=\"order-id \"><b>Transaction Id:</b> {{result.transactionId}} </div>\r\n      </div>\r\n      <div class=\"date\"> {{result.dateTime |date: 'mediumDate' }} {{result.dateTime |date: 'h:mm:ss a' }} </div>\r\n      <div class=\"order-items\">\r\n        <div class=\"receipt-data\">\r\n          <ng-container *ngFor=\"let item of items$ |async\">\r\n            <tr class=\"table-rows\">\r\n              <td class=\" qty-price\">{{item.quantity}} @ ${{item.price |number: '1.2'}}</td>\r\n              <td class=\"description\">{{item.name}}</td>\r\n              <td class=\"dollar\">$</td>\r\n              <td class=\"amount\">{{item.subtotal |number: '1.2'}}</td>\r\n            </tr>\r\n          </ng-container>\r\n          <tr>\r\n            <td class=\"qty-price\"></td>\r\n            <td class=\"total\"><b>Total: </b></td>\r\n            <td class=\"dollar\">$</td>\r\n            <td class=\"amount\"><b>{{result.amount | number: '1.2'}}</b></td>\r\n          </tr>\r\n        </div>\r\n      </div> <!-- order form -->\r\n    </div>\r\n    <div class=\"post-msg\">Pick it up around: <br>\r\n    {{timeReady |date: 'shortTime'}}</div>\r\n    <button type=\"button\" class=\"btn1 btn-primary  \">Email me my receipt</button>\r\n    <button type=\"button\" class=\"btn2 btn-success  \"\r\n      (click)=\"clearMemory()\"\r\n      routerLink=\"/\">Done</button>\r\n  </ng-container> <!-- /success-->\r\n\r\n    <!-- FAIL -->\r\n  <ng-container *ngIf=\"!paySuccessFlag\">\r\n      <div class=\"result\">\r\n        <img src=\"./assets/images/transaction_fail.png\" alt=\"\">\r\n      </div>\r\n      <div class=\"order-form\">\r\n        <div class=\"order-meta\">\r\n          <div class=\"order-num\">\r\n            <b>Order#: </b>{{result.transactionId}}</div>\r\n          <div class=\"order-id \">\r\n            <b>Transaction Id:</b> {{result.transactionId}}\r\n        </div>\r\n        </div>\r\n        <div class=\"date\">\r\n          {{result.dateTime |date: 'mediumDate' }} {{result.dateTime |date: 'h:mm:ss a' }}\r\n        </div>\r\n      </div> <!-- order form -->\r\n      <div class=\"post-msg failed\">Payment Incomplete!</div>\r\n      <button type=\"button\" class=\"btn1 btn-success  \"\r\n      routerLink=\"/pay/payment\">Try Again</button>\r\n      <button type=\"button\" class=\"btn2 btn-danger  \"\r\n      (click)=\"openCancelConfirm()\">Cancel</button>\r\n    </ng-container>\r\n    <!-- /fail -->\r\n\r\n</div>\r\n\r\n<!-- CANCEL POPUP -->\r\n  <div class=\"popup-screen-cover\" *ngIf=\"popupFlag\">\r\n    <div class=\"popup-window\">\r\n\r\n      <ng-container *ngIf=\"confirmFlag\">\r\n        <div class=\"popup-contents\">\r\n          <div class=\"msg\">\r\n            <div class=\"cancel\">\r\n              <p>Do you <em>really</em> want to cancel this transaction?</p>\r\n             <p>Your payment info will be cleared.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button type=\"button\" class=\"cancel-btn btn-danger  \"\r\n        (click)=\"confirmCancel()\"\r\n        routerLink=\"/order/order-list\">\r\n          Cancel Payment\r\n        </button>\r\n      </ng-container> <!-- confirm popup -->\r\n\r\n      <!-- CLOSE BUTTON-->\r\n      <button (click)=\"closePopup()\" class= \" btn-primary close-btn  \">\r\n        Never mind\r\n      </button><!-- POPUP: CLOSE BUTTON -->\r\n    </div> <!-- popup window -->\r\n  </div> <!-- popup cover -->\r\n\r\n","import { state } from '@angular/animations';\r\nimport { createReducer, on } from '@ngrx/store';\r\nimport { IngredientList } from 'src/app/modules/order/models/Ingredient';\r\nimport { Specialty } from 'src/app/modules/order/models/Specialty';\r\nimport { OrderItem } from '../../models/Item';\r\nimport { ItemGroup } from '../../models/ItemGroup';\r\nimport * as CurrentItemActions from './current-item.actions';\r\n\r\nexport const currentItemFeatureKey = 'currentItem';\r\n\r\nexport interface State extends OrderItem {\r\n  selectedSpecialtyId: string,\r\n}\r\n\r\nexport const initialState: State = {\r\n  id: '',\r\n  name: '',\r\n  itemGroup: null,\r\n  quantity: 1,\r\n  price: 0,\r\n  subtotal: 0,\r\n  selectedSpecialtyId: null,\r\n  ingredients: [],\r\n  viewDetail: false\r\n};\r\n\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n\r\n  on(CurrentItemActions.setItemGroup,\r\n    (state, action) => (\r\n      { ...state, itemGroup: action.currentItemGroup })\r\n  ),\r\n  on(CurrentItemActions.updateSpecialtyId,\r\n    (state, action) => (\r\n      { ...state, selectedSpecialtyId: action.selectedSpecialtyId }\r\n    )\r\n  ),\r\n  on(CurrentItemActions.updateIngredients,\r\n    (state, action) => (\r\n      { ...state, ingredients: action.ingredients })\r\n  ),\r\n  on(CurrentItemActions.loadItemToBuilder,\r\n    (state, action) => (\r\n      {\r\n        ...state,\r\n        id: action.orderItem.id,\r\n        name: action.orderItem.name,\r\n        itemGroup: action.orderItem.itemGroup,\r\n        quantity: action.orderItem.quantity,\r\n        price: action.orderItem.price,\r\n        subtotal: action.orderItem.subtotal,\r\n        selectedSpecialtyId: null,\r\n        ingredients: action.orderItem.ingredients,\r\n        viewDetail: false\r\n      })\r\n  ),\r\n  on(CurrentItemActions.clearCurrentItem,\r\n    () => (\r\n      { ...initialState })\r\n  ),\r\n  on(CurrentItemActions.updateCurrentItemId,\r\n    (state, action) => ({\r\n      ...state,\r\n      id: action.id\r\n    })\r\n  ),\r\n  on(CurrentItemActions.updateCurrentItemName,\r\n    (state, action) => ({\r\n      ...state,\r\n      name: action.name\r\n    })\r\n  ),\r\n  on(CurrentItemActions.updateCurrentItemPriceAndSubtotal,\r\n    (state, action) => ({\r\n      ...state,\r\n      price: action.price,\r\n      subtotal: action.price * state.quantity\r\n    })\r\n  ),\r\n\r\n);\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { loadStaticOrderData } from 'src/app/stores/actions/order-static-data.actions';\r\nimport { OrderStaticData } from './models/OrderStaticData';\r\n\r\n@Component({\r\n  selector: 'app-order',\r\n  templateUrl: './order.component.html',\r\n  styleUrls: ['./order.component.scss']\r\n})\r\nexport class OrderComponent implements OnInit {\r\n\r\n  constructor(\r\n    public store: Store<OrderStaticData>\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.store.dispatch(loadStaticOrderData())\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'salad-plus';\r\n}\r\n","<app-header class=\"sticky\"></app-header>\r\n<app-main-panel></app-main-panel>\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { catchError, map, concatMap } from 'rxjs/operators';\r\nimport { EMPTY, of } from 'rxjs';\r\n\r\nimport * as CartActions from './cart.actions';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class CartEffects {\r\n\r\n  // loadCarts$ = createEffect(() => {\r\n  //   return this.actions$.pipe(\r\n\r\n  //     ofType(CartActions.loadCarts),\r\n  //     concatMap(() =>\r\n  //       /** An EMPTY observable only emits completion. Replace with your own observable API request */\r\n  //       EMPTY.pipe(\r\n  //         map(data => CartActions.loadCartsSuccess({ data })),\r\n  //         catchError(error => of(CartActions.loadCartsFailure({ error }))))\r\n  //     )\r\n  //   );\r\n  // });\r\n\r\n\r\n\r\n  constructor(private actions$: Actions) { }\r\n\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { trxnResult } from \"./models/TrxnResult\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class PaymentService {\r\n  constructor(private http: HttpClient) { }\r\n  baseUrl = 'https://localhost:3000/'\r\n\r\n\r\n\r\n  public getPayResultsDB(data): Observable<trxnResult> {\r\n    const url = this.baseUrl + 'api/pay'\r\n    return this.http.get<trxnResult>(url)\r\n  }\r\n}\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { OrderStaticData } from 'src/app/modules/order/models/OrderStaticData';\r\n\r\nexport const loadStaticOrderData = createAction(\r\n  '[StaticOrderData] Load StaticOrderData'\r\n);\r\n\r\nexport const loadStaticOrderDataSuccess = createAction(\r\n  '[StaticOrderData] Load StaticOrderData Success',\r\n  props<{ data: OrderStaticData }>()\r\n);\r\n\r\nexport const loadStaticOrderDataFailure = createAction(\r\n  '[StaticOrderData] Load StaticOrderData Failure',\r\n  props<{ error: any }>()\r\n);\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { OrderItem, OrderItemEntity, OrderItems } from '../../models/Item';\r\n\r\nexport const loadOrderItems = createAction(\r\n  '[OrderItems] Load OrderItems'\r\n);\r\n\r\nexport const addOrderItem = createAction(\r\n  '[OrderItems] Add OrderItem',\r\n  props<{ orderItem: OrderItem }>()\r\n);\r\n\r\nexport const removeOrderItem = createAction(\r\n  '[OrderItems] Delete OrderItem',\r\n  props<{ ids: string[], entities: OrderItemEntity }>()\r\n);\r\n\r\nexport const updateQuantityAndSubtotal = createAction(\r\n  '[OrderItems Form] Update Quantity and Subtotal',\r\n  props<{ quantity: number, id: string }>()\r\n);\r\n\r\nexport const toggleDetail = createAction(\r\n  '[OrderItems] Toggle Order Item Detail View',\r\n  props<{ id: string }>()\r\n)\r\n\r\nexport const clearOrderItems = createAction(\r\n  '[Cart] Clear all order items')\r\n","import { Action, createReducer, on } from '@ngrx/store';\r\nimport * as SharedActions from './shared.actions';\r\n\r\nexport const sharedFeatureKey = 'shared';\r\n\r\nexport interface State {\r\n  headerMessage: string\r\n}\r\n\r\nexport const initialState: State = {\r\n  headerMessage: 'The Header Is Broken'\r\n};\r\n\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n\r\n  on(SharedActions.updateHeader, (state, action) => ({\r\n    ...state,\r\n    headerMessage: action.header\r\n  })),\r\n\r\n);\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { selectHeaderMessage, selectSharedState } from '../state/shared.selectors';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  headerMessage$: Observable<string>\r\n\r\n  constructor(private store: Store<{}>) { }\r\n\r\n  ngOnInit(): void {\r\n    this.headerMessage$ = this.store.select(selectHeaderMessage)\r\n  }\r\n\r\n}\r\n","<div class =\"header\">\r\n    {{headerMessage$ | async}}\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app/app.component';\r\nimport { AppComponents } from './barrels/app-components';\r\nimport { AppModules } from './barrels/app-modules';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { environment } from '../environments/environment';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\r\nimport { OrderStaticDataEffects } from './stores/effects/order-static-data.effects';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppMockInterceptors } from './barrels/app-mocks';\r\nimport { reducers, metaReducers } from './stores';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ...AppComponents,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ...AppModules,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    StoreModule.forRoot(reducers, {}),\r\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\r\n    EffectsModule.forRoot([OrderStaticDataEffects]),\r\n    StoreRouterConnectingModule.forRoot()\r\n  ],\r\n  providers: [\r\n    ...(environment.useMocking ? AppMockInterceptors : [])\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { ccData } from '../models/CCData';\r\n\r\nexport const updateCCInfo = createAction(\r\n  '[Payment] Update Payment Form',\r\n  props<{ data: ccData }>()\r\n);\r\nexport const updateName = createAction(\r\n  '[Payment] Update Payment Form',\r\n  props<{ name: string }>()\r\n);\r\n\r\nexport const clearPaymentInfo = createAction(\r\n  '[Payment Results] Clear All Payment Info'\r\n);\r\n\r\nexport const postPayment = createAction(\r\n  '[Payment] Payment to Server',\r\n  props<{ data: any }>()\r\n);\r\n\r\nexport const postPaymentSuccess = createAction(\r\n  '[Payment] Payment Success',\r\n  props<{ data: any }>()\r\n);\r\n\r\nexport const postPaymentFailure = createAction(\r\n  '[Payment] Payment Failure',\r\n  props<{ error: any }>()\r\n);\r\n\r\n\r\n\r\n// boilerplate\r\n\r\nexport const loadPayments = createAction(\r\n  '[Payment] Load Payments'\r\n);\r\n\r\nexport const loadPaymentsSuccess = createAction(\r\n  '[Payment] Load Payments Success',\r\n  props<{ data: any }>()\r\n);\r\n\r\nexport const loadPaymentsFailure = createAction(\r\n  '[Payment] Load Payments Failure',\r\n  props<{ error: any }>()\r\n);\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { IngredientList, IngredientTypes } from 'src/app/modules/order/models/Ingredient';\r\nimport * as fromOrderStaticData from '../reducers/order-static-data.reducer';\r\n\r\nexport const selectOrderStaticDataState = createFeatureSelector<fromOrderStaticData.State>(\r\n  fromOrderStaticData.orderStaticDataFeatureKey\r\n);\r\n\r\nexport const selectSpecialties = createSelector(\r\n  selectOrderStaticDataState,\r\n  (state) => state.specialties\r\n)\r\n\r\nexport const selectAllIngredients = createSelector(\r\n  selectOrderStaticDataState,\r\n  (state): IngredientList => state.ingredients\r\n)\r\n\r\nexport const selectDrinks = createSelector(\r\n  selectOrderStaticDataState,\r\n  (state) => state.drinks\r\n)\r\n\r\nexport const selectIngredientTypes = createSelector(\r\n  selectOrderStaticDataState,\r\n  (state) => state.ingredientTypes\r\n)\r\n\r\nexport const selectSides = createSelector(\r\n  selectOrderStaticDataState,\r\n  (state) => state.sides\r\n)\r\n\r\nexport const selectAllIngredientIds = createSelector(\r\n  selectAllIngredients,\r\n  (allIngredients) => allIngredients.map(ingredient => ingredient.id)\r\n)\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map, reduce } from 'rxjs/operators';\r\nimport { IngredientList, Ingredients, IngredientTypes } from '../modules/order/models/Ingredient';\r\nimport { Item, OrderItem, OrderItemEntity, OrderItems } from '../modules/order/models/Item';\r\nimport { ItemGroup } from '../modules/order/models/ItemGroup';\r\nimport { Specialty } from '../modules/order/models/Specialty';\r\nimport { addCartItem, removeCartItem, updateTotal } from '../modules/order/state/cart/cart.actions';\r\nimport { State } from '../modules/order/state/cart/cart.reducer';\r\nimport { selectCartIds, selectCartState, selectCartTotal } from '../modules/order/state/cart/cart.selectors';\r\nimport { selectCurrentItemIngredientIds, selectCurrentItemPrice, selectCurrentItemState, selectCurrentItemGroup, selectSelectedSpecialty, selectSelectedSpecialtyId, selectSpecialtyIngredients, selectSpecialtyModified, selectCurrentItemQuantity, selectCurrentItemSubtotal } from '../modules/order/state/current-item/current-item.selectors';\r\nimport * as _ from 'lodash'\r\nimport { selectOrderItemArray, selectOrderItemsState } from '../modules/order/state/order-items/order-items.selectors';\r\nimport { addOrderItem, removeOrderItem } from '../modules/order/state/order-items/order-items.actions';\r\nimport { clearCurrentItem } from '../modules/order/state/current-item/current-item.actions';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n  items: OrderItems\r\n  cart: State\r\n  specialty: Specialty\r\n  group: ItemGroup\r\n\r\n  constructor(\r\n    private store: Store<{}>\r\n  ) {\r\n    this.store.select(selectSelectedSpecialty).subscribe(itemSpecialty =>\r\n      this.specialty = itemSpecialty\r\n    )\r\n    this.store.select(selectCurrentItemGroup).subscribe(itemGroup =>\r\n      this.group = itemGroup)\r\n  }\r\n\r\n  public updateTotal(): void {\r\n    let total: number = 0\r\n    this.store.select(selectCartTotal).subscribe(cartTotal =>\r\n      total = cartTotal)\r\n    this.store.dispatch(updateTotal({ total }))\r\n  }\r\n\r\n  public removeCartItem(id: string): void {\r\n    // get the current cart item list\r\n    let orderItemIds: string[]\r\n    this.store.select(selectCartIds).subscribe(ids =>\r\n      // and remove the selected id\r\n      orderItemIds = ids.filter(cartId => cartId != id)\r\n    )\r\n    // tell the store\r\n    this.store.dispatch(removeCartItem({ orderItemIds }))\r\n    // update total\r\n    this.updateTotal()\r\n  }\r\n\r\n  public addOrderItem(): void {\r\n    // build item... probably delete (done in reducer)\r\n    let orderItem: OrderItem\r\n\r\n    this.store.select(selectCurrentItemState).subscribe(state =>\r\n      orderItem = Object.assign({},\r\n        {\r\n          id: state.id,\r\n          name: state.name,\r\n          ingredients: state.ingredients,\r\n          itemGroup: state.itemGroup,\r\n          price: state.price,\r\n          quantity: state.quantity,\r\n          subtotal: state.subtotal,\r\n          viewDetail: false\r\n        }\r\n      )\r\n    )\r\n    this.store.dispatch(addOrderItem({ orderItem }))\r\n    this.store.dispatch(addCartItem({ id: orderItem.id }))\r\n    this.store.dispatch(clearCurrentItem())\r\n\r\n  }\r\n\r\n  public removeOrderItem(id: string): void {\r\n    let ids: string[] = []\r\n    let entities: OrderItemEntity = {}\r\n    this.store.select(selectOrderItemsState).subscribe(state => {\r\n      ids = state.ids.filter(itemId => itemId != id)\r\n      for (let entityId in state.entities) {\r\n        if (entityId != id) {\r\n          entities[entityId] = state.entities[entityId]\r\n        }\r\n      }\r\n    })\r\n    this.store.dispatch(removeOrderItem({ ids, entities }))\r\n  }\r\n}\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { Ingredient, IngredientList } from 'src/app/modules/order/models/Ingredient';\r\n\r\n// get ingredient infos\r\nexport const updateTempIngredientsOfType = createAction(\r\n  '[Builder Form] Load Ingredients of Selected Type from Current Item to Temp List',\r\n  props<{ selectedIngredientsOfType: IngredientList }>()\r\n)\r\n\r\n// export const updateAllIngredientsOfType = createAction(\r\n//   '[Builder Form] Update Ingredient Select Popup List',\r\n//   props<{ allIngredientsOfType: IngredientList }>()\r\n// );\r\n\r\nexport const updateEditIngredientType = createAction(\r\n  '[Builder Form] Update Edited Ingredient Type',\r\n  props<{ ingredientType: string }>()\r\n)\r\n\r\n// popup open/close\r\nexport const openIngredientSelectorPopup = createAction(\r\n  '[Builder Form] Open Ingredient Sector Popup (Builder)'\r\n);\r\n\r\nexport const closeIngredientSelectorPopup = createAction(\r\n  '[Builder Popup] Close Ingredient Sector Popup (Builder)'\r\n);\r\n\r\n// add/remove (de)selected ingredients\r\nexport const clearSelectedIngredients = createAction(\r\n  '[Builder Popup] Clear All Selected From Temp List'\r\n)\r\n\r\nexport const addSelectedIngredient = createAction(\r\n  '[Builder Popup] Add Selected to Temp List',\r\n  props<{ ingredients: IngredientList }>()\r\n)\r\n\r\nexport const removeSelectedIngredient = createAction(\r\n  '[Builder Popup] Remove Selected From Temp List',\r\n  props<{ ingredients: IngredientList }>()\r\n)\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs\";\r\nimport { find } from \"rxjs/operators\";\r\nimport { selectCurrentItemIngredients, selectCurrentItemState } from \"src/app/modules/order/state/current-item/current-item.selectors\";\r\nimport { selectAllIngredientsOfType, selectIngredientType, selectSelectedIngredientsOfType } from \"src/app/modules/order/state/item-edit/item-edit.selectors\";\r\nimport { selectAllIngredients, selectOrderStaticDataState, selectSpecialties } from \"src/app/stores/selectors/order-static-data.selectors\";\r\nimport { Ingredient, IngredientList, Ingredients } from \"../models/Ingredient\";\r\nimport { Specialties, Specialty } from \"../models/Specialty\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CurrentItemService {\r\n  specialties$: Observable<Specialties>\r\n\r\n  constructor(\r\n    private store: Store<any>,\r\n    private router: Router\r\n  ) { }\r\n\r\n  public ingredientMultiSelectType(id: string): string {\r\n    let selectType: string\r\n    this.store.select(selectOrderStaticDataState).subscribe(state =>\r\n      selectType = state.ingredientTypes[id].selectType)\r\n    return selectType\r\n  }\r\n\r\n  public getIngredient(type: string): IngredientList {\r\n    let ingredients: IngredientList\r\n    this.store.select(selectAllIngredients).subscribe(allIngredients =>\r\n      ingredients = allIngredients.filter(ingredient =>\r\n        ingredient.type === type\r\n      )\r\n    )\r\n    return ingredients\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-main-panel',\r\n  templateUrl: './main-panel.component.html',\r\n  styleUrls: ['./main-panel.component.scss']\r\n})\r\nexport class MainPanelComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"main-panel\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { catchError, map, concatMap } from 'rxjs/operators';\r\nimport { EMPTY, of } from 'rxjs';\r\n\r\nimport * as StaticOrderDataActions from '../actions/order-static-data.actions';\r\nimport { OrderStaticDataService } from 'src/app/app/services/OrderStaticData.service';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class OrderStaticDataEffects {\r\n\r\n  loadOrderStaticData$ = createEffect(() => {\r\n    return this.actions$.pipe(\r\n\r\n      ofType(StaticOrderDataActions.loadStaticOrderData),\r\n      concatMap(() =>\r\n        /** An EMPTY observable only emits completion. Replace with your own observable API request */\r\n        this.service.getOrderStaticData().pipe(\r\n          map(data => StaticOrderDataActions.loadStaticOrderDataSuccess({ data })),\r\n          catchError(error => of(StaticOrderDataActions.loadStaticOrderDataFailure({ error }))))\r\n      )\r\n    );\r\n  });\r\n\r\n\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private service: OrderStaticDataService) { }\r\n\r\n}\r\n","import { createAction, props } from '@ngrx/store';\r\n\r\nexport const loadOrders = createAction(\r\n  '[Order] Load Orders'\r\n);\r\n\r\nexport const loadOrdersSuccess = createAction(\r\n  '[Order] Load Orders Success',\r\n  props<{ data: any }>()\r\n);\r\n\r\nexport const loadOrdersFailure = createAction(\r\n  '[Order] Load Orders Failure',\r\n  props<{ error: any }>()\r\n);\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { updateHeader } from '../../../shared/state/shared.actions';\r\nimport { clearCart } from '../../state/cart/cart.actions';\r\nimport { State } from '../../state/cart/cart.reducer';\r\nimport { selectCartState, selectCartTotal } from '../../state/cart/cart.selectors';\r\nimport { clearCurrentItem } from '../../state/current-item/current-item.actions';\r\nimport { clearOrderItems } from '../../state/order-items/order-items.actions';\r\n\r\n@Component({\r\n  selector: 'app-order-list',\r\n  templateUrl: './order-list.component.html',\r\n  styleUrls: ['./order-list.component.scss']\r\n})\r\nexport class OrderListComponent implements OnInit {\r\n  confirmFlag: boolean = false\r\n  popupFlag: boolean = false\r\n  total$: Observable<number>\r\n\r\n  constructor(\r\n    private store: Store<{}>,\r\n    private cartService: CartService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      this.store.dispatch(updateHeader({ header: 'Review & Order More' }))\r\n    });\r\n    this.total$ = this.store.select(selectCartTotal)\r\n  }\r\n\r\n  public openCancelConfirm() {\r\n    this.popupFlag = true\r\n    this.confirmFlag = true\r\n  }\r\n\r\n  public confirmCancel() {\r\n    this.store.dispatch(clearOrderItems())\r\n    this.store.dispatch(clearCurrentItem())\r\n    this.store.dispatch(clearCart())\r\n  }\r\n\r\n  public closePopup() {\r\n    this.popupFlag = false\r\n    this.confirmFlag = false\r\n  }\r\n}\r\n","<div class=\"order-list-wrap\">\r\n  <label class=\"total form-control\">${{total$ |async | number: '1.2'}}</label>\r\n  <app-order-form class=\"order-form \"></app-order-form>\r\n  <button type=\"button\" class=\"pay btn-success\"\r\n  routerLink=\"/pay\">Pay</button>\r\n  <div class=\"divider\">\r\n    <hr>\r\n  </div>\r\n  <button type=\"button\" class=\"cancel btn-danger\"\r\n  (click)=\"openCancelConfirm()\">Cancel</button>\r\n\r\n\r\n  <!-- CANCEL POPUP -->\r\n  <div class=\"popup-screen-cover\" *ngIf=\"popupFlag\">\r\n    <div class=\"popup-window\">\r\n\r\n      <ng-container *ngIf=\"confirmFlag\">\r\n        <div class=\"popup-contents\">\r\n          <div class=\"contents\">\r\n            <div class=\"cancel-pop\">\r\n              <div class=\"msg\">Do you <em>really</em> want to cancel this order?\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button type=\"button\" class=\"cancel-btn-pop btn-danger  \"\r\n        (click)=\"confirmCancel()\"\r\n        routerLink=\"/\">\r\n          Cancel Order\r\n        </button>\r\n      </ng-container> <!-- confirm popup -->\r\n\r\n      <!-- CLOSE BUTTON-->\r\n      <button (click)=\"closePopup()\" class= \" btn-primary close-btn  \">\r\n        Close\r\n      </button><!-- POPUP: CLOSE BUTTON -->\r\n    </div> <!-- popup window -->\r\n  </div> <!-- popup cover -->\r\n\r\n</div>\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { IngredientList, Ingredients } from 'src/app/modules/order/models/Ingredient';\r\nimport { selectAllIngredients } from 'src/app/stores/selectors/order-static-data.selectors';\r\nimport * as fromItemEdit from './item-edit.reducer';\r\n\r\nexport const selectItemEditState = createFeatureSelector<fromItemEdit.State>(\r\n  fromItemEdit.itemEditFeatureKey\r\n);\r\n\r\n\r\n\r\n// export const selectAllIngredientsOfType2 = createSelector(\r\n//   selectItemEditState,\r\n//   (state): IngredientList => state.allIngredientsOfType\r\n// )\r\n\r\nexport const selectIngredientType = createSelector(\r\n  selectItemEditState,\r\n  (state): string => state.ingredientType\r\n)\r\n\r\nexport const selectAllIngredientsOfType = createSelector(\r\n  selectAllIngredients,\r\n  selectIngredientType,\r\n  (allIngredients, type): IngredientList => allIngredients.filter(ingredient => ingredient.type === type)\r\n)\r\n\r\nexport const selectSelectedIngredientsOfType = createSelector(\r\n  selectItemEditState,\r\n  (state): IngredientList => state.selectedIngredientsOfType\r\n)\r\n\r\nexport const selectSelectorFlag = createSelector(\r\n  selectItemEditState,\r\n  (state): boolean => state.selectorFlag\r\n)\r\n\r\nexport const selectSelectedIngredientsOfTypeIds = createSelector(\r\n  selectAllIngredientsOfType,\r\n  (state): Ingredients => {\r\n    let ids: string[] = []\r\n    for (let ingredient of state) {\r\n      ids.push(ingredient.id)\r\n    }\r\n    return ids\r\n  }\r\n)\r\n\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport { trxnResult } from '../models/TrxnResult';\r\nimport * as PaymentActions from './payment.actions';\r\n\r\nexport const paymentFeatureKey = 'payment';\r\n\r\nexport interface State {\r\n  name: string,\r\n  number: string,\r\n  cvv: string,\r\n  exp: string,\r\n  amount: number,\r\n  result: trxnResult\r\n}\r\n\r\nexport const initialState: State = {\r\n  name: null,\r\n  number: null,\r\n  cvv: null,\r\n  exp: null,\r\n  amount: null,\r\n  result: undefined\r\n};\r\n\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n  on(PaymentActions.updateCCInfo,\r\n    (state, action) => ({\r\n      ...state,\r\n      name: action.data.name,\r\n      number: action.data.number,\r\n      exp: action.data.exp,\r\n      cvv: action.data.cvv\r\n    })\r\n  ),\r\n  on(PaymentActions.clearPaymentInfo,\r\n    () => ({ ...initialState })\r\n  ),\r\n  on(PaymentActions.postPaymentSuccess,\r\n    (state, action) => ({ ...state, result: action.data })\r\n  ),\r\n  on(PaymentActions.postPaymentFailure,\r\n    (state, action) => ({ ...state, error: action.error })\r\n  )\r\n\r\n);\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { closeIngredientSelectorPopup } from 'src/app/modules/order/state/item-edit/item-edit.actions';\r\nimport { selectAllIngredientsOfType, selectSelectorFlag } from 'src/app/modules/order/state/item-edit/item-edit.selectors';\r\nimport { Ingredient, IngredientList, Ingredients } from '../../models/Ingredient';\r\nimport * as fromItemEdit from 'src/app/modules/order/state/item-edit/item-edit.selectors'\r\nimport { updateCurrentItemId, updateCurrentItemName, updateCurrentItemPriceAndSubtotal, updateIngredients } from 'src/app/modules/order/state/current-item/current-item.actions';\r\nimport { updateHeader } from '../../../shared/state/shared.actions';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { OrderItem } from '../../models/Item';\r\nimport { selectCurrentItemId, selectCurrentItemIngredientIds, selectCurrentItemName, selectCurrentItemPrice, selectSelectedIngredientSelectType } from '../../state/current-item/current-item.selectors';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-builder',\r\n  templateUrl: './builder.component.html',\r\n  styleUrls: ['./builder.component.scss']\r\n})\r\nexport class BuilderComponent implements OnInit {\r\n  selectorFlag$: Observable<boolean>\r\n  confirmFlag: boolean = false\r\n  ingredientsOfType$: Observable<Ingredient[]>\r\n  popupIngredientList: IngredientList\r\n  currentItem: OrderItem\r\n\r\n  constructor(\r\n    private store: Store<{}>,\r\n    private cartService: CartService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      this.store.dispatch(updateHeader({ header: 'Customize!' }))\r\n    })\r\n\r\n    // ensure page starts with popup closed\r\n    this.store.dispatch(closeIngredientSelectorPopup())\r\n    this.selectorFlag$ = this.store.select(selectSelectorFlag)\r\n\r\n    // returns the ingredients currently on the item of the chosen type\r\n    // used to pre-select items on the ingredient selector popup:\r\n    this.store.select(fromItemEdit.selectSelectedIngredientsOfType)\r\n      .subscribe(ingredients => this.popupIngredientList = ingredients)\r\n    this.ingredientsOfType$ = this.store.select(selectAllIngredientsOfType)\r\n\r\n    // clear the id/name (if any)\r\n    this.store.select(selectCurrentItemId).pipe(take(1)).subscribe(id =>\r\n      this.store.dispatch(updateCurrentItemId({ id }))\r\n    )\r\n    this.store.select(selectCurrentItemName).pipe(take(1)).subscribe(name =>\r\n      this.store.dispatch(updateCurrentItemName({ name }))\r\n    )\r\n    // update price\r\n    this.store.select(selectCurrentItemPrice).pipe(take(1)).subscribe(price =>\r\n      this.store.dispatch(updateCurrentItemPriceAndSubtotal({ price }))\r\n    )\r\n\r\n    // update the name/id\r\n  }\r\n\r\n  // #region Methods\r\n\r\n  public isSelected(id: string): boolean {\r\n    let ingredientIds: string[]\r\n    this.store.select(selectCurrentItemIngredientIds).subscribe(\r\n      currentIngredientIds => ingredientIds = currentIngredientIds\r\n    )\r\n    if (this.popupIngredientList) {\r\n      return ingredientIds.find(ingredientId =>\r\n        ingredientId === id) ? true : false\r\n    } else\r\n      return false\r\n  }\r\n\r\n  submit() {\r\n    this.cartService.addOrderItem()\r\n    this.cartService.updateTotal()\r\n  }\r\n  //#region Popups\r\n\r\n  //#region Select Ingredient\r\n  public selectIngredient(selectedIngredientId: string) {\r\n    // (1) deselect if selected\r\n    //else\r\n    // (2.1) if single-select type, deselect any from the popup list from current selected\r\n    // (2.2) select if not selected\r\n\r\n    let ingredients: string[]\r\n    // (1)\r\n    this.store.select(selectCurrentItemIngredientIds).subscribe(currentIngredientIds => {\r\n      if (currentIngredientIds.includes(selectedIngredientId)) {\r\n        ingredients = currentIngredientIds.filter(id =>\r\n          id != selectedIngredientId)\r\n      } else {\r\n        // (2.1)\r\n        let selectType: string\r\n        let popupIngredientIds: Ingredients\r\n\r\n        this.store.select(selectSelectedIngredientSelectType).subscribe(type =>\r\n          selectType = type\r\n        )\r\n        this.store.select(fromItemEdit.selectSelectedIngredientsOfTypeIds).subscribe(ids =>\r\n          popupIngredientIds = ids\r\n        )\r\n\r\n        if (selectType === 'single') {\r\n          // remove all popup ingredients from current item (clear list of type)\r\n          currentIngredientIds = currentIngredientIds.filter(ingredientId =>\r\n            !popupIngredientIds.includes(ingredientId)\r\n          )\r\n        }\r\n        // (2.2)\r\n        ingredients = Object.assign([], currentIngredientIds)\r\n        ingredients.push(selectedIngredientId)\r\n      }\r\n    })\r\n\r\n    this.store.dispatch(updateIngredients({ ingredients }))\r\n  }\r\n\r\n  public closeSelectIngredient() {\r\n    this.store.dispatch(closeIngredientSelectorPopup())\r\n    this.store.select(selectCurrentItemPrice).pipe(take(1)).subscribe(price =>\r\n      this.store.dispatch(updateCurrentItemPriceAndSubtotal({ price }))\r\n    )\r\n  }\r\n  //#endregion Select Ingredient\r\n\r\n  public openCancelConfirm() {\r\n    this.confirmFlag = true\r\n  }\r\n\r\n  // //#region Confirm Cancel\r\n  public confirmCancel() {\r\n    this.confirmFlag = false\r\n    // current item is cleared on /order onInit\r\n    this.router.navigate(['/order'])\r\n  }\r\n\r\n  public closeConfirmCancel() {\r\n    this.confirmFlag = false\r\n  }\r\n  // //#endregion Confirm Cancel\r\n  //#endregion popups\r\n  //#endregion methods\r\n\r\n}\r\n","<div class=\"builder-wrap\">\r\n  <!-- <div class=\"fill\">\r\n    <img src=\"/assets/images/temp_img.png\" alt=\"\">\r\n  </div> -->\r\n\r\n  <app-builder-form class=\"builder\"></app-builder-form>\r\n\r\n  <button type=\"button\" class=\"done btn-success\" routerLink=\"../order-list\"\r\n  (click)=\"submit()\">Done</button>\r\n    <hr class=\"divider1\"> <!-- go to order-list -->\r\n  <button type=\"button\" class=\"cancel btn-danger\" (click)=\"openCancelConfirm()\">\r\n    Cancel\r\n  </button> <!-- cancel confirm popup -->\r\n\r\n\r\n\r\n  <!-- POPUPS -->\r\n\r\n  <!-- INGREDIENT SELECTOR -->\r\n  <div class=\"popup-screen-cover\" *ngIf=\"selectorFlag$ | async\">\r\n    <div class=\"popup-window\">\r\n\r\n      <div class=\"popup-contents\">\r\n        <ng-container *ngFor=\"let ingredient of ingredientsOfType$ | async\">\r\n          <button\r\n          (click)=\"selectIngredient(ingredient.id)\"\r\n          class=\"ingredient btn\" [class.selected]=\"isSelected(ingredient.id)\"\r\n          >\r\n            {{ ingredient.name }}\r\n          </button>\r\n        </ng-container>\r\n      </div>\r\n\r\n      <!-- CLOSE BUTTON-->\r\n      <button (click)=\"closeSelectIngredient()\" class= \" btn-primary close-btn\">\r\n        Close\r\n      </button><!-- POPUP: CLOSE BUTTON (shared) -->\r\n    </div> <!-- popup window -->\r\n  </div> <!-- popup cover -->\r\n\r\n\r\n  <!-- POPUP: CONFIRM -->\r\n  <div class=\"popup-screen-cover\" *ngIf=\"confirmFlag\">\r\n    <div class=\"popup-window\">\r\n      <div class=\"popup-contents\">\r\n        <div class=\"msg\">\r\n          <div class=\"remove\">Do you <span class=\"really\">really</span> want to cancel this item?</div>\r\n        </div>\r\n      </div>\r\n      <button type=\"button\" class=\"remove-btn btn-danger\"\r\n      (click)=\"confirmCancel()\"\r\n      routerLink=\"../\">\r\n        Remove Item\r\n      </button>\r\n      <!-- CLOSE BUTTON-->\r\n      <button (click)=\"closeConfirmCancel()\" class= \" btn-primary close-btn\">\r\n        Close\r\n      </button><!-- POPUP: CLOSE BUTTON (shared) -->\r\n    </div> <!-- popup window -->\r\n  </div> <!-- confirm popup -->\r\n\r\n</div> <!-- /builder wrap -->\r\n\r\n\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport * as fromPayment from './payment.reducer';\r\n\r\nexport const selectPaymentState = createFeatureSelector<fromPayment.State>(\r\n  fromPayment.paymentFeatureKey\r\n);\r\n\r\nexport const selectPayResult = createSelector(\r\n  selectPaymentState,\r\n  (state) => state.result\r\n)\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { selectAllIngredients, selectIngredientTypes } from 'src/app/stores/selectors/order-static-data.selectors';\r\nimport { Ingredient, IngredientList, IngredientTypes } from '../../models/Ingredient';\r\nimport { Specialty } from '../../models/Specialty';\r\nimport * as fromCurrentItem from 'src/app/modules/order/state/current-item/current-item.selectors'\r\nimport * as fromItemEdit from 'src/app/modules/order/state/item-edit/item-edit.actions'\r\nimport { CurrentItemService } from '../../services/currentItems.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-builder-form',\r\n  templateUrl: './builder-form.component.html',\r\n  styleUrls: ['./builder-form.component.scss']\r\n})\r\nexport class BuilderFormComponent implements OnInit {\r\n  //#region Flags\r\n  selectorFlag: boolean = false\r\n  popupFlag: boolean = false\r\n  //#endregion flags\r\n\r\n  //#region Declarations\r\n  ingredients$: Observable<IngredientList>\r\n  specialty$: Observable<Specialty>\r\n  allIngredients: Ingredient[]\r\n  ingredientTypes$: Observable<IngredientTypes>\r\n  itemGroup$: Observable<string>\r\n  iType: IngredientTypes\r\n\r\n  //#region Ingredient Lists\r\n  breads: IngredientList\r\n  greens: IngredientList\r\n  meats: IngredientList\r\n  veggies: IngredientList\r\n  condiments: IngredientList\r\n  cheeses: IngredientList\r\n  nutsFruits: IngredientList\r\n  dressings: IngredientList\r\n  //#endregion Ingredient Lists\r\n\r\n  //#endregion declarations\r\n\r\n  ingredients = []\r\n\r\n\r\n  constructor(\r\n    private store: Store<{}>,\r\n    private service: CurrentItemService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.ingredients$ = this.store.select(fromCurrentItem.selectCurrentItemIngredients)\r\n    this.store.select(selectIngredientTypes).subscribe(ingredientType => {\r\n      this.iType = ingredientType\r\n    })\r\n    this.itemGroup$ = this.store.select(fromCurrentItem.selectCurrentItemGroup)\r\n\r\n    //#region select ingredient groups\r\n    this.breads = this.service.getIngredient('Bread')\r\n    this.greens = this.service.getIngredient('Greens')\r\n    this.meats = this.service.getIngredient('Meat')\r\n    this.cheeses = this.service.getIngredient('Cheese')\r\n    this.veggies = this.service.getIngredient('Veggies')\r\n    this.nutsFruits = this.service.getIngredient('Nuts/Fruit')\r\n    this.condiments = this.service.getIngredient('Condiments')\r\n    this.dressings = this.service.getIngredient('Dressings')\r\n    //#endregion ingredient groups\r\n  }\r\n\r\n\r\n  //#region POPUP METHODS\r\n  public confirmCancel() {\r\n    // when a user taps cancel\r\n    // a popup asks if the user is sure (cancels current item)\r\n\r\n  }\r\n\r\n  public editIngredients(type: string) {\r\n    // when a user taps either an ingredient or its header\r\n    // a popup listing the ingredients of that type appears\r\n\r\n    this.store.dispatch(fromItemEdit.updateEditIngredientType(\r\n      { ingredientType: type }\r\n    ))\r\n\r\n\r\n    // DELETE\r\n    // create list of ingredients to show in popup (type selected)\r\n    // let allIngredientsOfType: IngredientList\r\n    // this.store.select(selectAllIngredients).subscribe(all =>\r\n    //   allIngredientsOfType = all.filter(i => i.type === type)\r\n    // )\r\n    // send to the store\r\n    // this.store.dispatch(fromItemEdit.updateAllIngredientsOfType(\r\n    //   { allIngredientsOfType: allIngredientsOfType }\r\n    // ))\r\n\r\n\r\n\r\n    // create a temporary list of currently selected ingredients where items can be added/removed without affecting current item\r\n    let selectedIngredients: IngredientList\r\n    this.store.select(fromCurrentItem.selectCurrentItemIngredients)\r\n      .subscribe(ingredients =>\r\n        selectedIngredients = ingredients.filter(i => i.type === type)\r\n      )\r\n    // send to the store\r\n    this.store.dispatch(fromItemEdit.updateTempIngredientsOfType(\r\n      { selectedIngredientsOfType: selectedIngredients }\r\n    ))\r\n\r\n    // update selector flag in builder to open selector popup\r\n    this.store.dispatch(fromItemEdit.openIngredientSelectorPopup())\r\n\r\n  }\r\n\r\n  //#endregion popup methods\r\n\r\n  onSubmit() {\r\n\r\n  }\r\n\r\n  inSelected(typeId: string): boolean {\r\n    let result: boolean = false\r\n    this.ingredients$.subscribe(ingredients => {\r\n      ingredients.forEach(ingredient => {\r\n        if (ingredient.id === typeId) {\r\n          result = true\r\n          return\r\n        }\r\n      })\r\n    })\r\n    return result\r\n  }\r\n\r\n}\r\n","<ng-container *ngIf=\"itemGroup$ |async as group\">\r\n\r\n  <div class=\"bread typeContainer\" *ngIf=\"group=='sandwich'\"\r\n  (click)=\"editIngredients('Bread')\">\r\n    <div class=\"ingredient-header\">Bread<br>@ ${{iType['Bread'].price}}\r\n    </div> <!-- breads header -->\r\n    <div class=\"ingredient-list\">\r\n      <ng-container *ngFor=\"let bread of breads\">\r\n        <ng-container *ngIf=\"inSelected(bread.id)\">\r\n          <div class=\"breads ingredient\" (click)=\"editIngredients('Bread')\">\r\n                {{bread.name}}\r\n          </div>\r\n        </ng-container>\r\n      </ng-container>\r\n    </div> <!-- ingredient list -->\r\n  </div> <!-- breads -->\r\n\r\n  <div class=\"green typeContainer\" *ngIf=\"group=='salad'\"\r\n  (click)=\"editIngredients('Greens')\">\r\n    <div class=\"ingredient-header\">Greens<br>\r\n      @ ${{iType['Greens'].price}}\r\n    </div> <!-- greens header -->\r\n    <div class=\"ingredient-list\">\r\n      <ng-container *ngFor=\"let green of greens\">\r\n        <ng-container *ngIf=\"inSelected(green.id)\">\r\n          <div class=\"greens ingredient\">\r\n                {{green.name}}\r\n          </div>\r\n        </ng-container>\r\n      </ng-container>\r\n    </div> <!-- ingredient list -->\r\n  </div> <!-- greens -->\r\n\r\n  <div class=\"meat typeContainer\" (click)=\"editIngredients('Meat')\">\r\n    <div class=\"ingredient-header\">Meats<br\r\n      >@ ${{iType['Meat'].price}} each\r\n    </div> <!-- meat header -->\r\n    <div class=\"ingredient-list\">\r\n      <ng-container *ngFor=\"let meat of meats\">\r\n        <ng-container *ngIf=\"inSelected(meat.id)\">\r\n          <div class=\"meats ingredient\">\r\n            {{meat.name}}\r\n          </div>\r\n        </ng-container>\r\n      </ng-container>\r\n    </div> <!-- ingredient list -->\r\n  </div> <!-- meats-->\r\n\r\n  <div class=\"cheese typeContainer\" (click)=\"editIngredients('Cheese')\">\r\n    <div class=\"ingredient-header\">Cheeses<br\r\n      >@ ${{iType['Cheese'].price}} each\r\n    </div> <!-- cheeses header -->\r\n    <div class=\"ingredient-list\">\r\n      <ng-container *ngFor=\"let cheese of cheeses\">\r\n        <ng-container *ngIf=\"inSelected(cheese.id)\">\r\n          <div class=\"cheeses ingredient\">\r\n                {{cheese.name}}\r\n          </div>\r\n        </ng-container>\r\n      </ng-container>\r\n    </div> <!-- ingredient list -->\r\n  </div> <!-- cheeses-->\r\n\r\n  <div class=\"veggie typeContainer\" (click)=\"editIngredients('Veggies')\">\r\n    <div class=\"ingredient-header\">Veggies<br>\r\n      @ ${{iType['Veggies'].price}} each\r\n    </div>  <!-- veggie header -->\r\n    <div class=\"ingredient-list\">\r\n      <ng-container *ngFor=\"let veggie of veggies\">\r\n        <ng-container *ngIf=\"inSelected(veggie.id)\">\r\n          <div class=\"veggies ingredient\">\r\n            {{veggie.name}}\r\n          </div>\r\n        </ng-container>\r\n      </ng-container>\r\n    </div> <!-- ingredient list -->\r\n  </div> <!-- veggies-->\r\n\r\n  <div class=\"nuts-fruit typeContainer\" *ngIf=\"group=='salad'\"\r\n  (click)=\"editIngredients('Nuts/Fruit')\">\r\n    <div class=\"ingredient-header\">Nuts/Fruits<br>\r\n      @ ${{iType['Nuts/Fruit'].price}} each\r\n    </div>  <!-- nuts/fruit header -->\r\n    <div class=\"ingredient-list\">\r\n      <ng-container *ngFor=\"let nutsFruit of nutsFruits\">\r\n        <ng-container *ngIf=\"inSelected(nutsFruit.id)\">\r\n          <div class=\"nuts-fruits ingredient\">\r\n                {{nutsFruit.name}}\r\n          </div>\r\n        </ng-container>\r\n      </ng-container>\r\n    </div> <!-- ingredient list -->\r\n  </div> <!-- nuts & fruits -->\r\n\r\n  <div class=\"condiment typeContainer\" *ngIf=\"group=='sandwich'\"\r\n  (click)=\"editIngredients('Condiments')\">\r\n    <div class=\"ingredient-header\">Condiments<br>\r\n      @ ${{iType['Condiments'].price}} each\r\n    </div> <!-- condiment header -->\r\n    <div class=\"ingredient-list\">\r\n      <ng-container *ngFor=\"let condiment of condiments\">\r\n        <ng-container *ngIf=\"inSelected(condiment.id)\">\r\n          <div class=\"condiments ingredient\">\r\n                {{condiment.name}}\r\n          </div>\r\n        </ng-container>\r\n      </ng-container>\r\n    </div> <!-- ingredient list -->\r\n  </div> <!-- condiments -->\r\n\r\n  <div class=\"dressing typeContainer\" *ngIf=\"group=='salad'\"\r\n  (click)=\"editIngredients('Dressings')\">\r\n    <div class=\"ingredient-header\">\r\n      Dressings<br>\r\n      @ ${{iType['Dressings'].price}} each\r\n    </div> <!-- dressing header -->\r\n    <div class=\"ingredient-list\">\r\n      <ng-container *ngFor=\"let dressing of dressings\">\r\n        <ng-container *ngIf=\"inSelected(dressing.id)\">\r\n          <div class=\"dressings ingredient\">\r\n            {{dressing.name}}\r\n          </div>\r\n        </ng-container>\r\n      </ng-container>\r\n    </div> <!-- ingredient list -->\r\n  </div> <!-- dressings -->\r\n\r\n</ng-container>  <!-- view model -->\r\n\r\n","import { Action, createReducer, on } from '@ngrx/store';\r\nimport * as OrderActions from './order.actions';\r\n\r\nexport const orderFeatureKey = 'order';\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nexport const initialState: State = {\r\n\r\n};\r\n\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n\r\n  on(OrderActions.loadOrders, state => state),\r\n  on(OrderActions.loadOrdersSuccess, (state, action) => state),\r\n  on(OrderActions.loadOrdersFailure, (state, action) => state),\r\n\r\n);\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PaymentComponent } from './components/payment/payment.component';\r\nimport { PayComponent } from './components/pay/pay.component';\r\nimport { PaymentRoutingModule } from './payment-routing.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport * as fromPayment from './state/payment.reducer'\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { PaymentEffects } from './state/payment.effects';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { PayTxResultComponent } from './components/pay-tx-result/pay-tx-result.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PaymentComponent,\r\n    PayComponent,\r\n    PayTxResultComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PaymentRoutingModule,\r\n    ReactiveFormsModule,\r\n    EffectsModule.forFeature([PaymentEffects]),\r\n    StoreModule.forFeature(fromPayment.paymentFeatureKey, fromPayment.reducer),\r\n  ]\r\n})\r\nexport class PaymentModule { }\r\n","import { HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { MockPaymentInterceptor } from \"../mocks/payment.interceptor\";\r\nimport { MockOrderStaticDataInterceptor } from \"../mocks/staticData.interceptor\";\r\n\r\nexport const AppMockInterceptors = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: MockPaymentInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: MockOrderStaticDataInterceptor, multi: true }\r\n]\r\n","import { Action, createReducer, on } from '@ngrx/store';\r\nimport { OrderStaticData } from 'src/app/modules/order/models/OrderStaticData';\r\nimport * as OrderStaticDataActions from '../actions/order-static-data.actions';\r\n\r\nexport const orderStaticDataFeatureKey = 'orderStaticData';\r\n\r\nexport interface State extends OrderStaticData {\r\n\r\n}\r\n\r\nexport const initialState: State = {\r\n  specialties: [],\r\n  ingredients: [],\r\n  ingredientTypes: {},\r\n  desserts: [],\r\n  drinks: [],\r\n  sides: [],\r\n};\r\n\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n\r\n  on(OrderStaticDataActions.loadStaticOrderDataSuccess, (state, action) => {\r\n    return action.data\r\n  }\r\n  ),\r\n  on(OrderStaticDataActions.loadStaticOrderDataFailure, (state, action) => state),\r\n\r\n);\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>footer works!</p>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { OrderStaticData } from \"src/app/modules/order/models/OrderStaticData\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderStaticDataService {\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  baseUrl = 'https://localhost:3000/api/order-static-data/';\r\n\r\n  getOrderStaticData(): Observable<OrderStaticData> {\r\n    const url = this.baseUrl;\r\n    const body = '';\r\n    let htpOptions: {};\r\n\r\n    return this.http.get<any>(url);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { catchError, map, concatMap, mergeMap } from 'rxjs/operators';\r\nimport { EMPTY, of } from 'rxjs';\r\n\r\nimport * as PaymentActions from './payment.actions';\r\nimport { PaymentService } from '../payment.service';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class PaymentEffects {\r\n\r\n  payResult$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(PaymentActions.postPayment),\r\n      mergeMap((action) =>\r\n        this.payService.getPayResultsDB(action.data).pipe(\r\n          map(data => PaymentActions.postPaymentSuccess({ data })),\r\n          catchError(error => of(PaymentActions.postPaymentFailure({ error }))))\r\n      )\r\n    )\r\n  )\r\n\r\n  constructor(private actions$: Actions,\r\n    private payService: PaymentService) { }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pay',\r\n  templateUrl: '../pay/pay.component.html',\r\n  styleUrls: ['../pay/pay.component.scss']\r\n})\r\nexport class PayComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { OrderComponent } from './modules/order/order.component';\r\nimport { HomeComponent } from './modules/pages/home/home.component';\r\nimport { PayComponent } from './modules/payment/components/pay/pay.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  {\r\n    path: 'order', component: OrderComponent,\r\n    loadChildren: () => import('./modules/order/order.module')\r\n      .then(m => m.OrderModule)\r\n  },\r\n  {\r\n    path: 'pay', component: PayComponent,\r\n    loadChildren: () => import('./modules/payment/payment.module')\r\n      .then(m => m.PaymentModule)\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport {\r\n  updateIngredients,\r\n  updateSpecialtyId\r\n} from 'src/app/modules/order/state/current-item/current-item.actions'\r\nimport { selectSpecialtiesOfGroup, selectSpecialtyIngredientIds, selectSpecialtyIngredients } from 'src/app/modules/order/state/current-item/current-item.selectors';\r\nimport { selectAllIngredients, selectIngredientTypes } from 'src/app/stores/selectors/order-static-data.selectors';\r\nimport { updateHeader } from '../../../shared/state/shared.actions';\r\nimport { IngredientList, Ingredients, IngredientTypes } from '../../models/Ingredient';\r\n\r\nimport { Specialties, Specialty } from '../../models/Specialty';\r\nimport { CurrentItemService } from '../../services/currentItems.service';\r\n\r\n@Component({\r\n  selector: 'app-specialty',\r\n  templateUrl: './specialty.component.html',\r\n  styleUrls: ['./specialty.component.scss']\r\n})\r\nexport class SpecialtyComponent implements OnInit {\r\n  specialties$: Observable<Specialties>\r\n  myArray: Specialty[] = []\r\n\r\n  constructor(\r\n    public store: Store<Specialties>,\r\n    public service: CurrentItemService\r\n  ) {\r\n    this.specialties$ = this.store.select(selectSpecialtiesOfGroup)\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      this.store.dispatch(updateHeader({ header: 'Specialty Selector' }))\r\n    })\r\n  }\r\n  // before exiting use the selected ID to load the\r\n  // specialty as the current item\r\n\r\n  // find specialty\r\n  public loadSpecialty(selectedSpecialtyId: string): void {\r\n    let specialtyIngredients: Ingredients\r\n\r\n    // update store with specialty id\r\n    this.store.dispatch(updateSpecialtyId({ selectedSpecialtyId }))\r\n    // load specialty ingredients to the current item\r\n    this.store.select(selectSpecialtyIngredientIds).subscribe(ingredients =>\r\n      this.store.dispatch(updateIngredients({ ingredients })\r\n      ))\r\n  }\r\n\r\n  public calculateSpecialtyPrice(specialty: Specialty): string {\r\n    let totalPrice: number = 0\r\n    let price: string\r\n    let allIngredients: IngredientList\r\n    let ingredientTypes: IngredientTypes\r\n\r\n    // get all ingredients & their type info\r\n    this.store.select(selectAllIngredients).subscribe(ingredients =>\r\n      allIngredients = ingredients\r\n    )\r\n    this.store.select(selectIngredientTypes).subscribe(types =>\r\n      ingredientTypes = types\r\n    )\r\n\r\n    // look up each specialty ingredient to get type\r\n    specialty.ingredients.forEach(sIngredientId => {\r\n      let currentIngredient = allIngredients.find(ingredient =>\r\n        sIngredientId === ingredient.id\r\n      )\r\n      // return the price and add to the running total\r\n      totalPrice += +ingredientTypes[currentIngredient.type].price\r\n    });\r\n    price = totalPrice.toFixed(2)\r\n    return price\r\n  }\r\n\r\n}\r\n","<ng-container *ngFor=\"let recipe of specialties$ | async \" >\r\n  <div class=\"specialty-wrapper\">\r\n    <div class=\"recipe-wrap\">\r\n      <div class=\"fill\">\r\n        <img class=\"fill\" src=\"{{ recipe.img }}\" alt=\"\">\r\n      </div>\r\n      <button class= \"btn-success\"\r\n      type=\"button\" (click)=\"loadSpecialty(recipe.id)\"\r\n      routerLink=\"../builder\"> {{ recipe.name }}</button>\r\n      <div class=\"description\">\r\n        <div class=\"price\">$ {{calculateSpecialtyPrice(recipe)}}</div>\r\n        {{ recipe.description }}\r\n      </div>\r\n    </div> <!-- *ngFor: item wrap -->\r\n  </div>\r\n</ng-container>\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport * as fromShared from './shared.reducer';\r\n\r\nexport const selectSharedState = createFeatureSelector<fromShared.State>(\r\n  fromShared.sharedFeatureKey\r\n);\r\n\r\nexport const selectHeaderMessage = createSelector(\r\n  selectSharedState,\r\n  (state): string => state.headerMessage\r\n);\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { OrderItem, OrderItemDetailed } from '../../models/Item';\r\nimport { removeCartItem } from '../../state/cart/cart.actions';\r\nimport { State } from '../../state/cart/cart.reducer';\r\nimport { selectCartItemArray, selectCartItemsWithIngredientInfo, selectCartState } from '../../state/cart/cart.selectors';\r\nimport { loadItemToBuilder } from '../../state/current-item/current-item.actions';\r\nimport { toggleDetail, updateQuantityAndSubtotal } from '../../state/order-items/order-items.actions';\r\nimport { selectOrderItemEntities, selectOrderItemNames } from '../../state/order-items/order-items.selectors';\r\n\r\n@Component({\r\n  selector: 'app-order-form',\r\n  templateUrl: './order-form.component.html',\r\n  styleUrls: ['./order-form.component.scss']\r\n})\r\nexport class OrderFormComponent implements OnInit {\r\n  items$: Observable<OrderItemDetailed[]>\r\n  ingredientsByName$: Observable<{ [key: string]: string[] }>\r\n  // items: { [key: string]: string[] }\r\n\r\n  constructor(\r\n    private store: Store<{}>,\r\n    private cartService: CartService,\r\n    private router: Router\r\n  ) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.items$ = this.store.select(selectCartItemsWithIngredientInfo)\r\n    this.ingredientsByName$ = this.store.select(selectOrderItemNames)\r\n    // this.ingredientsByName$.subscribe(items =>\r\n    //   this.items = items\r\n    // )\r\n  }\r\n\r\n  public toggleDetail(id: string): void {\r\n    this.store.dispatch(toggleDetail({ id }))\r\n  }\r\n\r\n  public removeCartItem(id: string): void {\r\n    this.cartService.removeCartItem(id)\r\n    this.cartService.removeOrderItem(id)\r\n  }\r\n\r\n  public updateQuantityAndSubtotal(e: any, id: string): void {\r\n    let quantity = e.value\r\n    this.store.dispatch(updateQuantityAndSubtotal({ quantity, id }))\r\n    this.cartService.updateTotal()\r\n  }\r\n\r\n  public editItem(id: string): void {\r\n    this.store.select(selectOrderItemEntities).subscribe(entities =>\r\n      this.store.dispatch(loadItemToBuilder({ orderItem: entities[id] }))\r\n    )\r\n    this.cartService.removeCartItem(id)\r\n    this.router.navigate(['order/builder'])\r\n  }\r\n\r\n}\r\n","<div class=\"order-form-wrap\">\r\n\r\n  <!-- repeating item container -->\r\n  <ng-container *ngFor=\"let item of items$ |async\">\r\n    <div class=\"item-list\">\r\n      <label class=\"form-control item\">{{item.name}}</label>\r\n\r\n      <!-- repeating item detail container-->\r\n      <ng-container *ngIf=\"item.viewDetail\">\r\n        <div class=\"ingredient-list\">\r\n            <!-- <ng-container *ngFor=\"ingredientsByName$ |async\"> -->\r\n                <ng-container *ngFor=\"let ingredient of item.ingredientDetails\">\r\n                  <label class=\"form-control ingredient\">\r\n                    {{ingredient.name}}\r\n                  </label>\r\n                </ng-container>\r\n            <!-- </ng-container> -->\r\n        </div>\r\n      </ng-container> <!-- /item detail -->\r\n\r\n       <!-- qty, price, subtotal -->\r\n      <div class=\"item-meta\">\r\n        <div class=\"item-meta-1\">\r\n          <div>Qty:</div>\r\n          <input type=\"number\" class=\"\" placeholder=\"{{item.quantity}}\" (change)=\"updateQuantityAndSubtotal($event.target,item.id)\">\r\n          <div>@</div>\r\n          <label class=\"price\">\r\n            ${{item.price | number:'1.2' }}\r\n          </label>\r\n        </div>\r\n\r\n        <div class=\"subtotal\">\r\n          <div>Subtotal:</div>\r\n          <label class=\"form-control\">${{item.subtotal | number:'1.2' }}</label>\r\n        </div>\r\n        <!-- /qty, price, subtotal -->\r\n      </div>\r\n      <!-- item buttons -->\r\n      <div class=\"actions\">\r\n        <button class=\"edit btn-primary\" (click)=\"editItem(item.id)\">Edit</button>\r\n        <ng-container *ngIf=\"!item.viewDetail\">\r\n          <button class=\"view btn-warning\" (click)=\"toggleDetail(item.id)\">View</button>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"item.viewDetail\">\r\n          <button class=\"view btn-warning\" (click)=\"toggleDetail(item.id)\">Collapse</button>\r\n        </ng-container>\r\n        <button class=\"remove btn-danger\"\r\n        (click)=\"removeCartItem(item.id)\">Remove</button>\r\n      </div> <!-- /item buttons -->\r\n    </div>\r\n  </ng-container>  <!-- /item -->\r\n  <button class=\"add-more btn-success\"\r\n  routerLink=\"/order\">+ More Items</button>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SsselctorComponent } from './components/ssselctor/ssselctor.component';\r\nimport { BuilderComponent } from './components/builder/builder.component';\r\nimport { BuilderFormComponent } from './components/builder-form/builder-form.component';\r\nimport { OrderListComponent } from './components/order-list/order-list.component';\r\nimport { OrderFormComponent } from './components/order-form/order-form.component';\r\nimport { SpecialtyComponent } from './components/specialty/specialty.component';\r\nimport { OrderComponent } from './order.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { OrderRoutingModule } from './order-routing.module';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport * as fromCart from './state/cart/cart.reducer';\r\nimport * as fromOrder from './state/order.reducer';\r\nimport * as fromStaticOrderData from '../../stores/reducers/order-static-data.reducer';\r\nimport { CartEffects } from './state/cart/cart.effects';\r\nimport { OrderEffects } from './state/order.effects';\r\nimport { OrderStaticDataEffects } from '../../stores/effects/order-static-data.effects';\r\nimport * as fromCurrentItem from './state/current-item/current-item.reducer';\r\nimport * as fromItemEdit from './state/item-edit/item-edit.reducer';\r\nimport * as fromOrderItems from './state/order-items/order-items.reducer';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SsselctorComponent,\r\n    BuilderComponent,\r\n    BuilderFormComponent,\r\n    OrderListComponent,\r\n    OrderFormComponent,\r\n    SpecialtyComponent,\r\n    OrderComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    OrderRoutingModule,\r\n    RouterModule,\r\n    //#region Store\r\n    EffectsModule.forFeature([CartEffects, OrderEffects, OrderStaticDataEffects]),\r\n    StoreModule.forFeature(fromCart.cartFeatureKey, fromCart.reducer),\r\n    StoreModule.forFeature(fromOrderItems.orderItemsFeatureKey, fromOrderItems.reducer),\r\n    StoreModule.forFeature(fromOrder.orderFeatureKey, fromOrder.reducer),\r\n    StoreModule.forFeature(fromStaticOrderData.orderStaticDataFeatureKey, fromStaticOrderData.reducer),\r\n    StoreModule.forFeature(fromCurrentItem.currentItemFeatureKey, fromCurrentItem.reducer),\r\n    StoreModule.forFeature(fromItemEdit.itemEditFeatureKey, fromItemEdit.reducer)\r\n    //#endregion store\r\n  ]\r\n})\r\nexport class OrderModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}